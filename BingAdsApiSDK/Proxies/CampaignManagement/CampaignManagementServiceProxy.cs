//=====================================================================================================================================================
// Bing Ads .NET SDK ver. 10.4
// 
// Copyright (c) Microsoft Corporation
// 
// All rights reserved. 
// 
// MS-PL License
// 
// This license governs use of the accompanying software. If you use the software, you accept this license. 
//  If you do not accept the license, do not use the software.
// 
// 1. Definitions
// 
// The terms reproduce, reproduction, derivative works, and distribution have the same meaning here as under U.S. copyright law. 
//  A contribution is the original software, or any additions or changes to the software. 
//  A contributor is any person that distributes its contribution under this license. 
//  Licensed patents  are a contributor's patent claims that read directly on its contribution.
// 
// 2. Grant of Rights
// 
// (A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, 
//  each contributor grants you a non-exclusive, worldwide, royalty-free copyright license to reproduce its contribution, 
//  prepare derivative works of its contribution, and distribute its contribution or any derivative works that you create.
// 
// (B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, 
//  each contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed patents to make, have made, use, 
//  sell, offer for sale, import, and/or otherwise dispose of its contribution in the software or derivative works of the contribution in the software.
// 
// 3. Conditions and Limitations
// 
// (A) No Trademark License - This license does not grant you rights to use any contributors' name, logo, or trademarks.
// 
// (B) If you bring a patent claim against any contributor over patents that you claim are infringed by the software, 
//  your patent license from such contributor to the software ends automatically.
// 
// (C) If you distribute any portion of the software, you must retain all copyright, patent, trademark, 
//  and attribution notices that are present in the software.
// 
// (D) If you distribute any portion of the software in source code form, 
//  you may do so only under this license by including a complete copy of this license with your distribution. 
//  If you distribute any portion of the software in compiled or object code form, you may only do so under a license that complies with this license.
// 
// (E) The software is licensed *as-is.* You bear the risk of using it. The contributors give no express warranties, guarantees or conditions.
//  You may have additional consumer rights under your local laws which this license cannot change. 
//  To the extent permitted under your local laws, the contributors exclude the implied warranties of merchantability, 
//  fitness for a particular purpose and non-infringement.
//=====================================================================================================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1573
#pragma warning disable 1591

namespace Microsoft.BingAds.CampaignManagement
{
    
    
    /// <summary>
    /// Defines a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672054(v=msads.90).aspx">Campaign Data Object</see> http://msdn.microsoft.com/en-us/library/bb672054(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaigns">AddCampaigns</see>, <see cref="CampaignManagementServiceClient.GetCampaignsByAccountId">GetCampaignsByAccountId</see>, <see cref="CampaignManagementServiceClient.GetCampaignsByIds">GetCampaignsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateCampaigns">UpdateCampaigns</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campaign", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Campaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.BudgetLimitType> BudgetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ConversionTrackingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DailyBudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DaylightSavingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MonthlyBudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NativeBidAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignStatus> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Setting> SettingsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The budget type determines whether the campaign uses a daily budget or a monthly budget, and how the budget is spent.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.BudgetLimitType> BudgetType
        {
            get
            {
                return this.BudgetTypeField;
            }
            set
            {
                if ((this.BudgetTypeField.Equals(value) != true))
                {
                    this.BudgetTypeField = value;
                    this.RaisePropertyChanged("BudgetType");
                }
            }
        }
        
        /// <summary>
        /// Conversion tracking is no longer supported at the campaign level. If you set this element, the value is ignored.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ConversionTrackingEnabled
        {
            get
            {
                return this.ConversionTrackingEnabledField;
            }
            set
            {
                if ((this.ConversionTrackingEnabledField.Equals(value) != true))
                {
                    this.ConversionTrackingEnabledField = value;
                    this.RaisePropertyChanged("ConversionTrackingEnabled");
                }
            }
        }
        
        /// <summary>
        /// The amount to spend daily on the campaign. You must set the daily budget amount if BudgetType is set to DailyBudgetAccelerated or DailyBudgetStandard. Note: If the campaign budget is set to MonthlyBudgetSpendUntilDepleted, then the returned daily budget is returned as a zero value.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DailyBudget
        {
            get
            {
                return this.DailyBudgetField;
            }
            set
            {
                if ((this.DailyBudgetField.Equals(value) != true))
                {
                    this.DailyBudgetField = value;
                    this.RaisePropertyChanged("DailyBudget");
                }
            }
        }
        
        /// <summary>
        /// Determines whether daylight-saving time is enabled.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DaylightSaving
        {
            get
            {
                return this.DaylightSavingField;
            }
            set
            {
                if ((this.DaylightSavingField.Equals(value) != true))
                {
                    this.DaylightSavingField = value;
                    this.RaisePropertyChanged("DaylightSaving");
                }
            }
        }
        
        /// <summary>
        /// The description of the campaign. The description can contain a maximum of 1,000 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        /// <summary>
        /// For a list of valid key and value strings for this element, see Campaign ForwardCompatibilityMap in the section below.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the campaign.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The monthly budget of the campaign. You must specify a monthly budget only if BudgetType is set to MonthlyBudgetSpendUntilDepleted.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MonthlyBudget
        {
            get
            {
                return this.MonthlyBudgetField;
            }
            set
            {
                if ((this.MonthlyBudgetField.Equals(value) != true))
                {
                    this.MonthlyBudgetField = value;
                    this.RaisePropertyChanged("MonthlyBudget");
                }
            }
        }
        
        /// <summary>
        /// The name of the campaign. The name must be unique among all active or paused campaigns within the account. The name can contain a maximum of 128 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust your bid for native ads above or below the base ad group or keyword bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> NativeBidAdjustment
        {
            get
            {
                return this.NativeBidAdjustmentField;
            }
            set
            {
                if ((this.NativeBidAdjustmentField.Equals(value) != true))
                {
                    this.NativeBidAdjustmentField = value;
                    this.RaisePropertyChanged("NativeBidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The status of the campaign.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The time zone where the campaign operates. For possible values, see Common Market Values.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone
        {
            get
            {
                return this.TimeZoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true))
                {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        /// <summary>
        /// The campaign type determines whether the campaign is a Bing Shopping campaign or a Search &amp; Content campaign.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignType
        {
            get
            {
                return this.CampaignTypeField;
            }
            set
            {
                if ((this.CampaignTypeField.Equals(value) != true))
                {
                    this.CampaignTypeField = value;
                    this.RaisePropertyChanged("CampaignType");
                }
            }
        }
        
        /// <summary>
        /// The setting will vary by campaign type. For example if the CampaignType element is Shopping, then one of the objects in this element's list is a ShoppingSetting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Setting> Settings
        {
            get
            {
                return this.SettingsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SettingsField, value) != true))
                {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible budget types that you can specify for a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672035(v=msads.90).aspx">BudgetLimitType Value Set</see> http://msdn.microsoft.com/en-us/library/bb672035(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Campaign"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BudgetLimitType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum BudgetLimitType : int
    {
        
        /// <summary>
        /// A monthly budget that is spent until it is depleted. Depending on the activity, the complete budget could be spent in a couple of days, weeks, or not at all.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonthlyBudgetSpendUntilDepleted = 0,
        
        /// <summary>
        /// A daily budget that is spent until it is depleted. Depending on the activity, the complete budget could be spent within a couple of minutes, hours, or not at all.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyBudgetAccelerated = 1,
        
        /// <summary>
        /// A daily budget that is spread throughout the day.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyBudgetStandard = 2,
    }
    
    /// <summary>
    /// Defines the possible status values of a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672025(v=msads.90).aspx">CampaignStatus Value Set</see> http://msdn.microsoft.com/en-us/library/bb672025(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Campaign"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum CampaignStatus : int
    {
        
        /// <summary>
        /// The campaign is active, which indicates that the campaign's ads can be served.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The campaign is paused, which indicates that the campaign's ads will not serve.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 1,
        
        /// <summary>
        /// The campaign is paused, which indicates that the campaign's ads will not serve. The service sets this status when the budget is depleted. The service will set the status back to Active when the budget is restored.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BudgetPaused = 2,
        
        /// <summary>
        /// The campaign is paused, which indicates that the campaign's ads will not serve. This status results when a user sets the campaign status to paused after the service pauses the campaign because the budget is depleted.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BudgetAndManualPaused = 3,
        
        /// <summary>
        /// The campaign is deleted. This status is for internal use only. Because all Get operations do not return deleted objects, you will not see an object with this status.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 4,
        
        /// <summary>
        /// Your campaign has been suspended and no ads are eligible for delivery because of potentially fraudulent activity. Please contact Bing Ads Support.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 5,
    }
    
    /// <summary>
    /// Defines the possible campaign types.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913129(v=msads.90).aspx">CampaignType Value Set</see> http://msdn.microsoft.com/en-us/library/dn913129(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Campaign"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignsByAccountId">GetCampaignsByAccountId</see> and <see cref="CampaignManagementServiceClient.GetCampaignsByIds">GetCampaignsByIds</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum CampaignType : int
    {
        
        /// <summary>
        /// The campaign is a search and content campaign.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchAndContent = 1,
        
        /// <summary>
        /// The campaign is a Bing Shopping campaign.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shopping = 2,
    }
    
    /// <summary>
    /// Defines the base class of a setting.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913122(v=msads.90).aspx">Setting Data Object</see> http://msdn.microsoft.com/en-us/library/dn913122(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Campaign"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Setting", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ShoppingSetting))]
    public partial class Setting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The type of setting. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a shopping setting for a Bing Shopping  Campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913132(v=msads.90).aspx">ShoppingSetting Data Object</see> http://msdn.microsoft.com/en-us/library/dn913132(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingSetting", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ShoppingSetting : Microsoft.BingAds.CampaignManagement.Setting
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> StoreIdField;
        
        /// <summary>
        /// Helps determine which Bing Shopping campaign serves ads, in the event that two or more campaigns use the product catalog feed from the same Bing Merchant Center store.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority
        {
            get
            {
                return this.PriorityField;
            }
            set
            {
                if ((this.PriorityField.Equals(value) != true))
                {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        /// <summary>
        /// The country code for the Bing Merchant Center store.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCountryCode
        {
            get
            {
                return this.SalesCountryCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SalesCountryCodeField, value) != true))
                {
                    this.SalesCountryCodeField = value;
                    this.RaisePropertyChanged("SalesCountryCode");
                }
            }
        }
        
        /// <summary>
        /// The unique identifier for the Bing Merchant Center store that your product catalog feed belongs to.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> StoreId
        {
            get
            {
                return this.StoreIdField;
            }
            set
            {
                if ((this.StoreIdField.Equals(value) != true))
                {
                    this.StoreIdField = value;
                    this.RaisePropertyChanged("StoreId");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the base object from which all fault detail objects derive.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796870(v=msads.90).aspx">ApplicationFault Data Object</see> http://msdn.microsoft.com/en-us/library/dd796870(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationFault", Namespace="https://adapi.microsoft.com")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail))]
    public partial class ApplicationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the log entry that contains the details of the API call.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingId
        {
            get
            {
                return this.TrackingIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TrackingIdField, value) != true))
                {
                    this.TrackingIdField = value;
                    this.RaisePropertyChanged("TrackingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a fault object that operations return when web service-specific errors occur, such as when the request message contains incomplete or invalid data.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671467(v=msads.90).aspx">ApiFaultDetail Data Object</see> http://msdn.microsoft.com/en-us/library/bb671467(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiFaultDetail", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ApiFaultDetail : Microsoft.BingAds.CampaignManagement.ApplicationFault
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.OperationError> OperationErrorsField;
        
        /// <summary>
        /// An array of batch errors that identifies the items in the batch of items in the request message that caused the operation to fail. Each object contains the details that explain why the item caused the failure.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrors
        {
            get
            {
                return this.BatchErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BatchErrorsField, value) != true))
                {
                    this.BatchErrorsField = value;
                    this.RaisePropertyChanged("BatchErrors");
                }
            }
        }
        
        /// <summary>
        /// An array of operation errors that contains the reasons that explain why the service operation failed when the error is not related to a specific item in the batch of items.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.OperationError> OperationErrors
        {
            get
            {
                return this.OperationErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OperationErrorsField, value) != true))
                {
                    this.OperationErrorsField = value;
                    this.RaisePropertyChanged("OperationErrors");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a fault object that operations such as SetAdExtensionsAssociations and UpdateAdExtensions return when one or more criterion or ad extensions in your request message fail editorial review.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc197200(v=msads.90).aspx">EditorialApiFaultDetail Data Object</see> http://msdn.microsoft.com/en-us/library/cc197200(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditorialApiFaultDetail", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class EditorialApiFaultDetail : Microsoft.BingAds.CampaignManagement.ApplicationFault
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialError> EditorialErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.OperationError> OperationErrorsField;
        
        /// <summary>
        /// An array of batch errors that identifies the items in the batch of items in the request message that caused the operation to fail. Each object contains the details that explain why the item caused the failure.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrors
        {
            get
            {
                return this.BatchErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BatchErrorsField, value) != true))
                {
                    this.BatchErrorsField = value;
                    this.RaisePropertyChanged("BatchErrors");
                }
            }
        }
        
        /// <summary>
        /// An array of editorial errors that contains the details that explain why the criterion or ad extension was disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialError> EditorialErrors
        {
            get
            {
                return this.EditorialErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EditorialErrorsField, value) != true))
                {
                    this.EditorialErrorsField = value;
                    this.RaisePropertyChanged("EditorialErrors");
                }
            }
        }
        
        /// <summary>
        /// An array of operation errors that contains the details that explain why the service operation failed when the error is not related to a specific item in the batch of items.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.OperationError> OperationErrors
        {
            get
            {
                return this.OperationErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OperationErrorsField, value) != true))
                {
                    this.OperationErrorsField = value;
                    this.RaisePropertyChanged("OperationErrors");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a fault object that operations return when generic errors occur, such as an authentication error.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd797002(v=msads.90).aspx">AdApiFaultDetail Data Object</see> http://msdn.microsoft.com/en-us/library/dd797002(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
    [System.SerializableAttribute()]
    public partial class AdApiFaultDetail : Microsoft.BingAds.CampaignManagement.ApplicationFault
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdApiError> ErrorsField;
        
        /// <summary>
        /// An array of AdApiError objects that contains the details that explain why the service operation failed.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdApiError> Errors
        {
            get
            {
                return this.ErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true))
                {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an error object that contains the details that explain why the service operation failed.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796873(v=msads.90).aspx">AdApiError Data Object</see> http://msdn.microsoft.com/en-us/library/dd796873(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdApiFaultDetail"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdApiError", Namespace="https://adapi.microsoft.com")]
    [System.SerializableAttribute()]
    public partial class AdApiError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A numeric error code that identifies the error.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                if ((this.CodeField.Equals(value) != true))
                {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        /// <summary>
        /// A message that contains additional details about the error. This string can be empty.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail
        {
            get
            {
                return this.DetailField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DetailField, value) != true))
                {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        /// <summary>
        /// A symbolic string constant that identifies the error. For example, UserIsNotAuthorized.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true))
                {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        /// <summary>
        /// A message that describes the error.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an error object that identifies the item within the batch of items in the request message that caused the operation to fail, and describes the reason for the failure.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671765(v=msads.90).aspx">BatchError Data Object</see> http://msdn.microsoft.com/en-us/library/bb671765(v=msads.90).aspx for details.
    /// <para>Used by <see cref="ApiFaultDetail"/>, <see cref="BatchErrorCollection"/> and <see cref="EditorialApiFaultDetail"/> data objects.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAds">AddAds</see>, <see cref="CampaignManagementServiceClient.AddKeywords">AddKeywords</see>, <see cref="CampaignManagementServiceClient.AddListItemsToSharedList">AddListItemsToSharedList</see>, <see cref="CampaignManagementServiceClient.AddSharedEntity">AddSharedEntity</see>, <see cref="CampaignManagementServiceClient.ApplyProductPartitionActions">ApplyProductPartitionActions</see>, <see cref="CampaignManagementServiceClient.DeleteAds">DeleteAds</see>, <see cref="CampaignManagementServiceClient.DeleteCampaignCriterions">DeleteCampaignCriterions</see>, <see cref="CampaignManagementServiceClient.DeleteKeywords">DeleteKeywords</see>, <see cref="CampaignManagementServiceClient.DeleteListItemsFromSharedList">DeleteListItemsFromSharedList</see>, <see cref="CampaignManagementServiceClient.DeleteMedia">DeleteMedia</see>, <see cref="CampaignManagementServiceClient.DeleteSharedEntities">DeleteSharedEntities</see>, <see cref="CampaignManagementServiceClient.DeleteSharedEntityAssociations">DeleteSharedEntityAssociations</see>, <see cref="CampaignManagementServiceClient.GetAdsByIds">GetAdsByIds</see>, <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByIds">GetCampaignCriterionsByIds</see>, <see cref="CampaignManagementServiceClient.GetKeywordsByIds">GetKeywordsByIds</see>, <see cref="CampaignManagementServiceClient.GetMediaAssociations">GetMediaAssociations</see>, <see cref="CampaignManagementServiceClient.GetMediaMetaDataByIds">GetMediaMetaDataByIds</see>, <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByEntityIds">GetNegativeKeywordsByEntityIds</see>, <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsByEntityIds">GetSharedEntityAssociationsByEntityIds</see>, <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsBySharedEntityIds">GetSharedEntityAssociationsBySharedEntityIds</see>, <see cref="CampaignManagementServiceClient.SetSharedEntityAssociations">SetSharedEntityAssociations</see>, <see cref="CampaignManagementServiceClient.UpdateAds">UpdateAds</see>, <see cref="CampaignManagementServiceClient.UpdateKeywords">UpdateKeywords</see> and <see cref="CampaignManagementServiceClient.UpdateSharedEntities">UpdateSharedEntities</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchError", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialError))]
    public partial class BatchError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A numeric error code that identifies the error.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                if ((this.CodeField.Equals(value) != true))
                {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        /// <summary>
        /// A message that provides additional details about the batch error. This string can be empty.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details
        {
            get
            {
                return this.DetailsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DetailsField, value) != true))
                {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        /// <summary>
        /// A symbolic string constant that identifies the error. For example, UserIsNotAuthorized.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true))
                {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for this data object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The zero-based index of the item in the batch of items in the request message that failed.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                if ((this.IndexField.Equals(value) != true))
                {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        /// <summary>
        /// A message that describes the error.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an error object that contains the details that explain why the service operation failed.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671973(v=msads.90).aspx">OperationError Data Object</see> http://msdn.microsoft.com/en-us/library/bb671973(v=msads.90).aspx for details.
    /// <para>Used by <see cref="ApiFaultDetail"/> and <see cref="EditorialApiFaultDetail"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationError", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class OperationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A numeric error code that identifies the error
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                if ((this.CodeField.Equals(value) != true))
                {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        /// <summary>
        /// A message that provides additional details about the error. This string can be empty.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details
        {
            get
            {
                return this.DetailsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DetailsField, value) != true))
                {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        /// <summary>
        /// A symbolic string constant that identifies the error. For example, UserIsNotAuthorized.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true))
                {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        /// <summary>
        /// A message that describes the error.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an error object that identifies the entity with the batch of entities that failed editorial review.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc197190(v=msads.90).aspx">EditorialError Data Object</see> http://msdn.microsoft.com/en-us/library/cc197190(v=msads.90).aspx for details.
    /// <para>Used by <see cref="EditorialApiFaultDetail"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditorialError", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class EditorialError : Microsoft.BingAds.CampaignManagement.BatchError
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AppealableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisapprovedTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonCodeField;
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Appealable
        {
            get
            {
                return this.AppealableField;
            }
            set
            {
                if ((this.AppealableField.Equals(value) != true))
                {
                    this.AppealableField = value;
                    this.RaisePropertyChanged("Appealable");
                }
            }
        }
        
        /// <summary>
        /// The text that caused the entity to be disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisapprovedText
        {
            get
            {
                return this.DisapprovedTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisapprovedTextField, value) != true))
                {
                    this.DisapprovedTextField = value;
                    this.RaisePropertyChanged("DisapprovedText");
                }
            }
        }
        
        /// <summary>
        /// The element or property of the entity that caused the entity to be disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        /// <summary>
        /// The corresponding country or region for the flagged editorial issue.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherCountry
        {
            get
            {
                return this.PublisherCountryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PublisherCountryField, value) != true))
                {
                    this.PublisherCountryField = value;
                    this.RaisePropertyChanged("PublisherCountry");
                }
            }
        }
        
        /// <summary>
        /// A numeric code that identifies the error. For more information, see Editorial Failure Reason Codes.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonCode
        {
            get
            {
                return this.ReasonCodeField;
            }
            set
            {
                if ((this.ReasonCodeField.Equals(value) != true))
                {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains the campaign's list of negative keywords.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/ee703967(v=msads.90).aspx">CampaignNegativeKeywords Data Object</see> http://msdn.microsoft.com/en-us/library/ee703967(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByCampaignIds">GetNegativeKeywordsByCampaignIds</see> and <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToCampaigns">SetNegativeKeywordsToCampaigns</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignNegativeKeywords", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CampaignNegativeKeywords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> NegativeKeywordsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the campaign that the negative keywords belong to.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CampaignId
        {
            get
            {
                return this.CampaignIdField;
            }
            set
            {
                if ((this.CampaignIdField.Equals(value) != true))
                {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        /// <summary>
        /// A list of negative keywords that prevent the service from serving an ad if the user's query contains one of the negative keywords.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> NegativeKeywords
        {
            get
            {
                return this.NegativeKeywordsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NegativeKeywordsField, value) != true))
                {
                    this.NegativeKeywordsField = value;
                    this.RaisePropertyChanged("NegativeKeywords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains the negative site URLs of a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/hh299890(v=msads.90).aspx">CampaignNegativeSites Data Object</see> http://msdn.microsoft.com/en-us/library/hh299890(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByCampaignIds">GetNegativeSitesByCampaignIds</see> and <see cref="CampaignManagementServiceClient.SetNegativeSitesToCampaigns">SetNegativeSitesToCampaigns</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignNegativeSites", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CampaignNegativeSites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> NegativeSitesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the campaign to which the negative site URLs belong.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CampaignId
        {
            get
            {
                return this.CampaignIdField;
            }
            set
            {
                if ((this.CampaignIdField.Equals(value) != true))
                {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        /// <summary>
        /// A list of URLs of the websites on which you do not want your ads displayed. You can specify a maximum of 2,000 URLs. Each URL must specify the domain name, and can specify one subdomain name and a maximum of two directories. Duplicate URLs in the list are not added.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> NegativeSites
        {
            get
            {
                return this.NegativeSitesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NegativeSitesField, value) != true))
                {
                    this.NegativeSitesField = value;
                    this.RaisePropertyChanged("NegativeSites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671956(v=msads.90).aspx">AdGroup Data Object</see> http://msdn.microsoft.com/en-us/library/bb671956(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroups">AddAdGroups</see>, <see cref="CampaignManagementServiceClient.GetAdGroupsByCampaignId">GetAdGroupsByCampaignId</see>, <see cref="CampaignManagementServiceClient.GetAdGroupsByIds">GetAdGroupsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateAdGroups">UpdateAdGroups</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroup", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdDistribution> AdDistributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.AdRotation AdRotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.BiddingModel> BiddingModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid BroadMatchBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid ContentMatchBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Date EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid ExactMatchBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NativeBidAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.Network> NetworkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid PhraseMatchBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.PricingModel> PricingModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Date StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupStatus> StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Determines whether the ads within this ad group will be displayed on the content distribution channel, search distribution channel, or both.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdDistribution> AdDistribution
        {
            get
            {
                return this.AdDistributionField;
            }
            set
            {
                if ((this.AdDistributionField.Equals(value) != true))
                {
                    this.AdDistributionField = value;
                    this.RaisePropertyChanged("AdDistribution");
                }
            }
        }
        
        /// <summary>
        /// Determines the ad rotation type.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.AdRotation AdRotation
        {
            get
            {
                return this.AdRotationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AdRotationField, value) != true))
                {
                    this.AdRotationField = value;
                    this.RaisePropertyChanged("AdRotation");
                }
            }
        }
        
        /// <summary>
        /// Determines whether the ad group bids on keyword matches or site placement matches. The default is Keyword.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.BiddingModel> BiddingModel
        {
            get
            {
                return this.BiddingModelField;
            }
            set
            {
                if ((this.BiddingModelField.Equals(value) != true))
                {
                    this.BiddingModelField = value;
                    this.RaisePropertyChanged("BiddingModel");
                }
            }
        }
        
        /// <summary>
        /// The bid to use when the user's query and the ad group's keywords match by using a broad match comparison. A broad match results when words in the keyword are present in the user's query; however, the order of the words can vary.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid BroadMatchBid
        {
            get
            {
                return this.BroadMatchBidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BroadMatchBidField, value) != true))
                {
                    this.BroadMatchBidField = value;
                    this.RaisePropertyChanged("BroadMatchBid");
                }
            }
        }
        
        /// <summary>
        /// The bid to use when the keywords that the service extracts from the content page and the ad group's keywords match by using an exact match comparison. An exact match results when all of the words in the keyword exactly match the user's query.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid ContentMatchBid
        {
            get
            {
                return this.ContentMatchBidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContentMatchBidField, value) != true))
                {
                    this.ContentMatchBidField = value;
                    this.RaisePropertyChanged("ContentMatchBid");
                }
            }
        }
        
        /// <summary>
        /// The date that the ads in the ad group will expire. If you do not specify an end date, the ads will not expire.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Date EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EndDateField, value) != true))
                {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        /// <summary>
        /// The bid to use when the user's query and the ad group's keywords match by using an exact match comparison. An exact match results when all of the words in the keyword exactly match the user's query.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid ExactMatchBid
        {
            get
            {
                return this.ExactMatchBidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ExactMatchBidField, value) != true))
                {
                    this.ExactMatchBidField = value;
                    this.RaisePropertyChanged("ExactMatchBid");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system generated identifier of the ad group.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The language of the ads and keywords in the ad group. For possible values, see Common Market Values.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language
        {
            get
            {
                return this.LanguageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LanguageField, value) != true))
                {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        /// <summary>
        /// The name of the ad group. The name must be unique among all active ad groups within the campaign. The name can contain a maximum of 128 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust your bid for native ads above or below the base ad group or keyword bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> NativeBidAdjustment
        {
            get
            {
                return this.NativeBidAdjustmentField;
            }
            set
            {
                if ((this.NativeBidAdjustmentField.Equals(value) != true))
                {
                    this.NativeBidAdjustmentField = value;
                    this.RaisePropertyChanged("NativeBidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The search networks where you want your ads to display. The default is OwnedAndOperatedAndSyndicatedSearch.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.Network> Network
        {
            get
            {
                return this.NetworkField;
            }
            set
            {
                if ((this.NetworkField.Equals(value) != true))
                {
                    this.NetworkField = value;
                    this.RaisePropertyChanged("Network");
                }
            }
        }
        
        /// <summary>
        /// The bid value to use when the user's query and the ad group's keywords match by using a phrase match. A phrase match results when all of the words in the keyword are present in the user's query, and are in the same order.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid PhraseMatchBid
        {
            get
            {
                return this.PhraseMatchBidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhraseMatchBidField, value) != true))
                {
                    this.PhraseMatchBidField = value;
                    this.RaisePropertyChanged("PhraseMatchBid");
                }
            }
        }
        
        /// <summary>
        /// You can specify a pricing model based on cost per click (CPC) or cost per 1000 impressions (CPM).
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.PricingModel> PricingModel
        {
            get
            {
                return this.PricingModelField;
            }
            set
            {
                if ((this.PricingModelField.Equals(value) != true))
                {
                    this.PricingModelField = value;
                    this.RaisePropertyChanged("PricingModel");
                }
            }
        }
        
        /// <summary>
        /// The date that the ads in the ad group can begin serving; otherwise, the service can begin serving the ads in the ad group the day that the ad group becomes active. Note: The start date cannot be updated after the ad group is submitted The start date is inclusive. For example, if you set StartDate to 3/5/2010, the ads in the ad group will start at 12:00 AM on 3/5/2010. The time is based on the time zone that you specify at the campaign level.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Date StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StartDateField, value) != true))
                {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        /// <summary>
        /// The status of the ad group.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that specifies the type of ad rotation to apply to the ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj219952(v=msads.90).aspx">AdRotation Data Object</see> http://msdn.microsoft.com/en-us/library/jj219952(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdRotation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdRotation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdRotationType> TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// For future use only. Must be null.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                if ((this.EndDateField.Equals(value) != true))
                {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        /// <summary>
        /// For future use only. Must be null.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                if ((this.StartDateField.Equals(value) != true))
                {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        /// <summary>
        /// The type of ad rotation to apply to the ad group..
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdRotationType> Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((this.TypeField.Equals(value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd797130(v=msads.90).aspx">Bid Data Object</see> http://msdn.microsoft.com/en-us/library/dd797130(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/>, <see cref="FixedBid"/>, <see cref="Keyword"/> and <see cref="SitePlacement"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Bid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The bid value. For details about the valid bid range for your market, see Currencies.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Amount
        {
            get
            {
                return this.AmountField;
            }
            set
            {
                if ((this.AmountField.Equals(value) != true))
                {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Represents a date.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671903(v=msads.90).aspx">Date Data Object</see> http://msdn.microsoft.com/en-us/library/bb671903(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Date", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Date : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int DayField;
        
        private int MonthField;
        
        private int YearField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Specifies the day of the month.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Day
        {
            get
            {
                return this.DayField;
            }
            set
            {
                if ((this.DayField.Equals(value) != true))
                {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        /// <summary>
        /// Specifies the month.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                if ((this.MonthField.Equals(value) != true))
                {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        /// <summary>
        /// Specifies the year.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Year
        {
            get
            {
                return this.YearField;
            }
            set
            {
                if ((this.YearField.Equals(value) != true))
                {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the ad distribution for the ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671585(v=msads.90).aspx">AdDistribution Value Set</see> http://msdn.microsoft.com/en-us/library/bb671585(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdDistribution", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdDistribution : int
    {
        
        /// <summary>
        /// The search network includes Bing.com, AOL.com, Yahoo.com, other Bing, AOL, or Yahoo owned and operated sites, and syndicated search partner sites that offer search capabilities, as well as on a variety of other syndicated search partner sites. For more information, see the Network element of AdGroup.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Search = 1,
        
        /// <summary>
        /// The content network is the ad distribution network for Bing Ads running in Windows apps. When you select the content network as the distribution channel, any keyword you add will have the content match type in addition to any other match type you select. Ads for the content network are referred to as 'content ads.' For example, content ads display if a keyword for the ad is part of the app. If an ad for a clothing company has the keyword 'dress' and the keyword 'shoes', a content-network app related to fashion could display the ad even though a person viewing the app did not search for 'dress' or 'shoes.' That's where the content match type keyword works for you. To learn more see, Differences between search ads and content ads and How content ads work.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Content = 2,
    }
    
    /// <summary>
    /// Defines the bidding model for an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796906(v=msads.90).aspx">BiddingModel Value Set</see> http://msdn.microsoft.com/en-us/library/dd796906(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiddingModel", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum BiddingModel : int
    {
        
        /// <summary>
        /// The ad group bidding is keyword-based.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Keyword = 0,
        
        /// <summary>
        /// The ad group bidding is website-placement-based.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SitePlacement = 1,
    }
    
    /// <summary>
    /// Defines the possible networks on which an ad can display. For more information about networks and ad distribution, see the About Ad Distribution help article.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/ff986253(v=msads.90).aspx">Network Value Set</see> http://msdn.microsoft.com/en-us/library/ff986253(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Network", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum Network : int
    {
        
        /// <summary>
        /// Display ads on owned and operated networks, as well as syndicated search networks.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnedAndOperatedAndSyndicatedSearch = 0,
        
        /// <summary>
        /// Display ads on only owned and operated networks.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnedAndOperatedOnly = 1,
        
        /// <summary>
        /// Display ads on only syndicated search networks.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyndicatedSearchOnly = 2,
    }
    
    /// <summary>
    /// Defines the pricing model for an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc580680(v=msads.90).aspx">PricingModel Value Set</see> http://msdn.microsoft.com/en-us/library/cc580680(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PricingModel", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum PricingModel : int
    {
        
        /// <summary>
        /// The pricing model is cost-per-click (CPC).
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cpc = 0,
        
        /// <summary>
        /// The pricing model is cost per thousand-impressions (CPM).
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cpm = 1,
    }
    
    /// <summary>
    /// Defines the possible status values of an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671715(v=msads.90).aspx">AdGroupStatus Value Set</see> http://msdn.microsoft.com/en-us/library/bb671715(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroup"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdGroupStatus : int
    {
        
        /// <summary>
        /// The ad group is new. Ads and keywords that you add in this state are not subject to editorial review. Note: This element is deprecated and will be removed in a future version of the API.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 0,
        
        /// <summary>
        /// The ad group is active, which indicates that the ad group's ads can be served.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        /// <summary>
        /// The ad group is paused, which indicates that the ad group's ads will not serve. Ads and keywords that you add in this state are subject to editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 2,
        
        /// <summary>
        /// The ad group expired. This status is set if you specify an end date for the ad group and the end date passes.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    /// <summary>
    /// Defines the possible ad rotation types that you can apply to an ad group. For ad groups with more than one ad, these options determine how the ads are rotated into the auction.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj219947(v=msads.90).aspx">AdRotationType Value Set</see> http://msdn.microsoft.com/en-us/library/jj219947(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdRotation"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdRotationType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdRotationType : int
    {
        
        /// <summary>
        /// Favor the best performing ads.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OptimizeForClicks = 0,
        
        /// <summary>
        /// Rotate ads evenly into the auction.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RotateAdsEvenly = 1,
    }
    
    /// <summary>
    /// Defines an object that contains the ad group's list of negative keywords.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/ee703992(v=msads.90).aspx">AdGroupNegativeKeywords Data Object</see> http://msdn.microsoft.com/en-us/library/ee703992(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByAdGroupIds">GetNegativeKeywordsByAdGroupIds</see> and <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToAdGroups">SetNegativeKeywordsToAdGroups</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupNegativeKeywords", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdGroupNegativeKeywords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> NegativeKeywordsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the ad group that the negative keywords belong to.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdGroupId
        {
            get
            {
                return this.AdGroupIdField;
            }
            set
            {
                if ((this.AdGroupIdField.Equals(value) != true))
                {
                    this.AdGroupIdField = value;
                    this.RaisePropertyChanged("AdGroupId");
                }
            }
        }
        
        /// <summary>
        /// A list of negative keywords that prevents the service from serving an ad if the user's search query contains one of the negative keywords.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> NegativeKeywords
        {
            get
            {
                return this.NegativeKeywordsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NegativeKeywordsField, value) != true))
                {
                    this.NegativeKeywordsField = value;
                    this.RaisePropertyChanged("NegativeKeywords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains the negative site URLs of an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/hh300117(v=msads.90).aspx">AdGroupNegativeSites Data Object</see> http://msdn.microsoft.com/en-us/library/hh300117(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByAdGroupIds">GetNegativeSitesByAdGroupIds</see> and <see cref="CampaignManagementServiceClient.SetNegativeSitesToAdGroups">SetNegativeSitesToAdGroups</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupNegativeSites", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdGroupNegativeSites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> NegativeSitesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the ad group to which the negative site URLs belong.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdGroupId
        {
            get
            {
                return this.AdGroupIdField;
            }
            set
            {
                if ((this.AdGroupIdField.Equals(value) != true))
                {
                    this.AdGroupIdField = value;
                    this.RaisePropertyChanged("AdGroupId");
                }
            }
        }
        
        /// <summary>
        /// A list of URLs of the websites on which you do not want your ads displayed. You can specify a maximum of 2,000 URLs. Each URL must specify the domain name, and can specify one subdomain name and a maximum of two directories. Duplicate URLs in the list are not added.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> NegativeSites
        {
            get
            {
                return this.NegativeSitesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NegativeSitesField, value) != true))
                {
                    this.NegativeSitesField = value;
                    this.RaisePropertyChanged("NegativeSites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the types of targeting that you can use to target your ads to users. For example, you can target your ads based on the geographic location of the user, the day of the week, or the time of the day.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671789(v=msads.90).aspx">Target Data Object</see> http://msdn.microsoft.com/en-us/library/bb671789(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary">AddTargetsToLibrary</see>, <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds">GetTargetsByAdGroupIds</see>, <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds">GetTargetsByCampaignIds</see>, <see cref="CampaignManagementServiceClient.GetTargetsByIds">GetTargetsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary">UpdateTargetsInLibrary</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Target", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Target : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.AgeTarget AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.DayTarget DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.DeviceOSTarget DeviceOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.GenderTarget GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.HourTarget HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLibraryTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.LocationTarget LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Targets ads to users within one or more age ranges.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.AgeTarget Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AgeField, value) != true))
                {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to run on specific days of the week. Note: The DayTimeTarget will combine the Day and Hour elements of this target, and is available in the new Target2 object. Once you or another application set the DayTime element of a new Target2 object, then the Day and Hour elements of this Target object will be nil when retrieved. Any subsequent Day and Hour element updates via UpdateTargetsInLibrary will be accepted and overwrite a previously specified DayTime setting. For more information, see Migrating to Version 10 DayTime Target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.DayTarget Day
        {
            get
            {
                return this.DayField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DayField, value) != true))
                {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to serve on specific devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.DeviceOSTarget DeviceOS
        {
            get
            {
                return this.DeviceOSField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceOSField, value) != true))
                {
                    this.DeviceOSField = value;
                    this.RaisePropertyChanged("DeviceOS");
                }
            }
        }
        
        /// <summary>
        /// For a list of valid key and value strings for this element, see Target ForwardCompatibilityMap in the section below.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to men only or women only.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.GenderTarget Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                if ((object.ReferenceEquals(this.GenderField, value) != true))
                {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to run at specific times of the day. Note: The DayTimeTarget will combine the Day and Hour elements of this target, and is available in the new Target2 object. Once you set the DayTime element of a new Target2 object, then the Day and Hour elements of this Target object will be nil when retrieved. Any subsequent Day and Hour element updates via UpdateTargetsInLibrary will be accepted and overwrite a previously specified DayTime setting. For more information, see Migrating to Version 10 DayTime Target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.HourTarget Hour
        {
            get
            {
                return this.HourField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HourField, value) != true))
                {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        /// <summary>
        /// A system-generated identifier that identifies this target object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Determines whether the target library contains this target object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLibraryTarget
        {
            get
            {
                return this.IsLibraryTargetField;
            }
            set
            {
                if ((this.IsLibraryTargetField.Equals(value) != true))
                {
                    this.IsLibraryTargetField = value;
                    this.RaisePropertyChanged("IsLibraryTarget");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to users within a specific location; for example, users within a certain radius of your business or within a specific state.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.LocationTarget Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        /// <summary>
        /// The name of the target. The name can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of age ranges to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672084(v=msads.90).aspx">AgeTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb672084(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> and <see cref="Target2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AgeTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AgeTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of of age ranges to target with bid adjustments.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AgeTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of days to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671942(v=msads.90).aspx">DayTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671942(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DayTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DayTargetBid> BidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TargetAllDaysField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of days to target with bid adjustments.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DayTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        /// <summary>
        /// Determines whether to participate in auctions only on the days of the week that you specified or to participate on all days of the week. The default value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TargetAllDays
        {
            get
            {
                return this.TargetAllDaysField;
            }
            set
            {
                if ((this.TargetAllDaysField.Equals(value) != true))
                {
                    this.TargetAllDaysField = value;
                    this.RaisePropertyChanged("TargetAllDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of devices to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/hh527704(v=msads.90).aspx">DeviceOSTarget Data Object</see> http://msdn.microsoft.com/en-us/library/hh527704(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> and <see cref="Target2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceOSTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DeviceOSTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DeviceOSTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of devices to target with bid adjustments.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DeviceOSTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of genders to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671655(v=msads.90).aspx">GenderTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671655(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> and <see cref="Target2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class GenderTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.GenderTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of genders to target with bid adjustments.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.GenderTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of hour target ranges with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671826(v=msads.90).aspx">HourTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671826(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HourTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class HourTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.HourTargetBid> BidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TargetAllHoursField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of HourTargetBid objects that specifies the times of the day to target and the incremental bid percentages to apply to the base bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.HourTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        /// <summary>
        /// Determines whether to participate in auctions only during the times of the day that you specified or to participate at all times of the day. The default value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TargetAllHours
        {
            get
            {
                return this.TargetAllHoursField;
            }
            set
            {
                if ((this.TargetAllHoursField.Equals(value) != true))
                {
                    this.TargetAllHoursField = value;
                    this.RaisePropertyChanged("TargetAllHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that can contain different types of geographical targets, for example lists of city and state targets.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671646(v=msads.90).aspx">LocationTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671646(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class LocationTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.CityTarget CityTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.CountryTarget CountryTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPhysicalIntentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.MetroAreaTarget MetroAreaTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.RadiusTarget RadiusTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.StateTarget StateTargetField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The cities to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.CityTarget CityTarget
        {
            get
            {
                return this.CityTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CityTargetField, value) != true))
                {
                    this.CityTargetField = value;
                    this.RaisePropertyChanged("CityTarget");
                }
            }
        }
        
        /// <summary>
        /// The countries/regions to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.CountryTarget CountryTarget
        {
            get
            {
                return this.CountryTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryTargetField, value) != true))
                {
                    this.CountryTargetField = value;
                    this.RaisePropertyChanged("CountryTarget");
                }
            }
        }
        
        /// <summary>
        /// Determines whether the audience must be physically located in the targeted location in order for the ad to display. The default value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPhysicalIntent
        {
            get
            {
                return this.HasPhysicalIntentField;
            }
            set
            {
                if ((this.HasPhysicalIntentField.Equals(value) != true))
                {
                    this.HasPhysicalIntentField = value;
                    this.RaisePropertyChanged("HasPhysicalIntent");
                }
            }
        }
        
        /// <summary>
        /// The metropolitan areas to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.MetroAreaTarget MetroAreaTarget
        {
            get
            {
                return this.MetroAreaTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MetroAreaTargetField, value) != true))
                {
                    this.MetroAreaTargetField = value;
                    this.RaisePropertyChanged("MetroAreaTarget");
                }
            }
        }
        
        /// <summary>
        /// The geographical locations to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.RadiusTarget RadiusTarget
        {
            get
            {
                return this.RadiusTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RadiusTargetField, value) != true))
                {
                    this.RadiusTargetField = value;
                    this.RaisePropertyChanged("RadiusTarget");
                }
            }
        }
        
        /// <summary>
        /// The states, provinces, or territories to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.StateTarget StateTarget
        {
            get
            {
                return this.StateTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StateTargetField, value) != true))
                {
                    this.StateTargetField = value;
                    this.RaisePropertyChanged("StateTarget");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific age target range with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671720(v=msads.90).aspx">AgeTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb671720(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AgeTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AgeTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Microsoft.BingAds.CampaignManagement.AgeRange AgeField;
        
        private int BidAdjustmentField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The age range to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.AgeRange Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                if ((this.AgeField.Equals(value) != true))
                {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        /// <summary>
        /// The percent amount used to adjust the base bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible age range values that you can use to target ads to users.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671742(v=msads.90).aspx">AgeRange Value Set</see> http://msdn.microsoft.com/en-us/library/bb671742(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AgeTargetBid"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeRange", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AgeRange : int
    {
        
        /// <summary>
        /// Users from the ages of 18 through 24 years.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EighteenToTwentyFive = 0,
        
        /// <summary>
        /// Users from the ages of 25 through 34 years.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwentyFiveToThirtyFive = 1,
        
        /// <summary>
        /// Users from the ages of 35 through 49 years.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirtyFiveToFifty = 2,
        
        /// <summary>
        /// Users from the ages of 50 through 64 years.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiftyToSixtyFive = 3,
        
        /// <summary>
        /// Users 65 years of age and older.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SixtyFiveAndAbove = 4,
    }
    
    /// <summary>
    /// Defines a specific day target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671920(v=msads.90).aspx">DayTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb671920(v=msads.90).aspx for details.
    /// <para>Used by <see cref="DayTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DayTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private Microsoft.BingAds.CampaignManagement.Day DayField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if today is the day of the week being targeted.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The day of the week to target. For example, you can target the ads to run only on Friday or Saturday.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.Day Day
        {
            get
            {
                return this.DayField;
            }
            set
            {
                if ((this.DayField.Equals(value) != true))
                {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the day values that you can specify for day of the week targeting.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671717(v=msads.90).aspx">Day Value Set</see> http://msdn.microsoft.com/en-us/library/bb671717(v=msads.90).aspx for details.
    /// <para>Used by <see cref="DayTargetBid"/> and <see cref="DayTimeTargetBid"/> data objects.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Day", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum Day : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 6,
    }
    
    /// <summary>
    /// Defines a specific device target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn249988(v=msads.90).aspx">DeviceOSTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dn249988(v=msads.90).aspx for details.
    /// <para>Used by <see cref="DeviceOSTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceOSTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DeviceOSTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private string DeviceNameField;
        
        private System.Collections.Generic.IList<string> OSNamesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid for the specified device target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The name of the device to target. The following are the possible device names that you can specify.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DeviceName
        {
            get
            {
                return this.DeviceNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true))
                {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        /// <summary>
        /// Starting with the Computers and Tablets Device Target Consolidation (Q3 2014), operating systems for Tablets are no longer supported. Note: The following are the possible tablet operating systems that were supported prior to consolidation.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<string> OSNames
        {
            get
            {
                return this.OSNamesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OSNamesField, value) != true))
                {
                    this.OSNamesField = value;
                    this.RaisePropertyChanged("OSNames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific gender target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671554(v=msads.90).aspx">GenderTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb671554(v=msads.90).aspx for details.
    /// <para>Used by <see cref="GenderTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class GenderTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private Microsoft.BingAds.CampaignManagement.GenderType GenderField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The gender to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.GenderType Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                if ((this.GenderField.Equals(value) != true))
                {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the genders that are available for ad group or campaign targeting.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671519(v=msads.90).aspx">GenderType Value Set</see> http://msdn.microsoft.com/en-us/library/bb671519(v=msads.90).aspx for details.
    /// <para>Used by <see cref="GenderTargetBid"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum GenderType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    /// <summary>
    /// Defines a specific hour target range with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671597(v=msads.90).aspx">HourTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb671597(v=msads.90).aspx for details.
    /// <para>Used by <see cref="HourTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HourTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class HourTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private Microsoft.BingAds.CampaignManagement.HourRange HourField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the current time is within the range of hours being targeted.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The time range to target. For example, you can target the ads to display to users only between the hours of 7:00 AM to 11:00 AM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.HourRange Hour
        {
            get
            {
                return this.HourField;
            }
            set
            {
                if ((this.HourField.Equals(value) != true))
                {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the time ranges that you can specify for time of the day targeting.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672093(v=msads.90).aspx">HourRange Value Set</see> http://msdn.microsoft.com/en-us/library/bb672093(v=msads.90).aspx for details.
    /// <para>Used by <see cref="HourTargetBid"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HourRange", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum HourRange : int
    {
        
        /// <summary>
        /// Hours from 3:00 A.M. through 7:00 A.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreeAMToSevenAM = 0,
        
        /// <summary>
        /// Hours from 7:00 A.M. through 11:00 A.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SevenAMToElevenAM = 1,
        
        /// <summary>
        /// Hours from 11:00 A.M. through 2:00 P.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElevenAMToTwoPM = 2,
        
        /// <summary>
        /// Hours from 2:00 P.M. through 6:00 P.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoPMToSixPM = 3,
        
        /// <summary>
        /// Hours from 6:00 P.M. through 11:00 P.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SixPMToElevenPM = 4,
        
        /// <summary>
        /// Hours from 11:00 P.M. through 3:00 A.M.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElevenPMToThreeAM = 5,
    }
    
    /// <summary>
    /// Defines a list of cities to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796959(v=msads.90).aspx">CityTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dd796959(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget"/> and <see cref="LocationTarget2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CityTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CityTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of cities to target with bid adjustments. You can specify a maximum of 255 bids.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CityTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of countries or regions to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671605(v=msads.90).aspx">CountryTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671605(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget"/> and <see cref="LocationTarget2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CountryTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CountryTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of countries or regions to target with bid adjustments. You can specify a maximum of 255 bids.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CountryTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of metro area targets with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671815(v=msads.90).aspx">MetroAreaTarget Data Object</see> http://msdn.microsoft.com/en-us/library/bb671815(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget"/> and <see cref="LocationTarget2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetroAreaTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MetroAreaTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MetroAreaTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of MetroAreaTargetBid objects that specifies the metropolitan areas to target and the incremental bid percentages to apply to the base bid. You can specify a maximum of 255 bids.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MetroAreaTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of geographical radius targets with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796953(v=msads.90).aspx">RadiusTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dd796953(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadiusTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class RadiusTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.RadiusTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of RadiusTargetBid objects that specifies an area surrounding a geographical location to target and the incremental bid percentages to apply to the base bid. You can specify a maximum of 2,000 radius targets.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.RadiusTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of state targets with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796793(v=msads.90).aspx">StateTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dd796793(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget"/> and <see cref="LocationTarget2"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class StateTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.StateTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of StateTargetBid objects that specifies the states/provinces/territories to target and the incremental bid percentages to apply to the base bid. You can specify a maximum of 255 bids.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.StateTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific city target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796932(v=msads.90).aspx">CityTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dd796932(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CityTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CityTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private string CityField;
        
        private bool IsExcludedField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted city.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The city to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CityField, value) != true))
                {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        /// <summary>
        /// Set this element to true if you want to exclude the location from targeting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific country or region target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671882(v=msads.90).aspx">CountryTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb671882(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CountryTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CountryTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private string CountryAndRegionField;
        
        private bool IsExcludedField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted country/region.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The country to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CountryAndRegion
        {
            get
            {
                return this.CountryAndRegionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryAndRegionField, value) != true))
                {
                    this.CountryAndRegionField = value;
                    this.RaisePropertyChanged("CountryAndRegion");
                }
            }
        }
        
        /// <summary>
        /// Set this element to true if you want to exclude the location from targeting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a metropolitan area to target and the percentage used to adjust the base bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672080(v=msads.90).aspx">MetroAreaTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/bb672080(v=msads.90).aspx for details.
    /// <para>Used by <see cref="MetroAreaTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetroAreaTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MetroAreaTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private bool IsExcludedField;
        
        private string MetroAreaField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted metropolitan area.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// Set this element to true if you want to exclude the location from targeting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        /// <summary>
        /// The metropolitan area to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MetroArea
        {
            get
            {
                return this.MetroAreaField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MetroAreaField, value) != true))
                {
                    this.MetroAreaField = value;
                    this.RaisePropertyChanged("MetroArea");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific geographical radius target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796863(v=msads.90).aspx">RadiusTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dd796863(v=msads.90).aspx for details.
    /// <para>Used by <see cref="RadiusTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadiusTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class RadiusTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        private bool IsExcludedField;
        
        private double LatitudeDegreesField;
        
        private double LongitudeDegreesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private int RadiusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted geographical location radius.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        /// <summary>
        /// The latitude, in degrees, of the target location.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double LatitudeDegrees
        {
            get
            {
                return this.LatitudeDegreesField;
            }
            set
            {
                if ((this.LatitudeDegreesField.Equals(value) != true))
                {
                    this.LatitudeDegreesField = value;
                    this.RaisePropertyChanged("LatitudeDegrees");
                }
            }
        }
        
        /// <summary>
        /// The longitude, in degrees, of the target location.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double LongitudeDegrees
        {
            get
            {
                return this.LongitudeDegreesField;
            }
            set
            {
                if ((this.LongitudeDegreesField.Equals(value) != true))
                {
                    this.LongitudeDegreesField = value;
                    this.RaisePropertyChanged("LongitudeDegrees");
                }
            }
        }
        
        /// <summary>
        /// The name of the geographical location being targeted. The name can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The radius, in miles, that specifies the area surrounding the geographical location to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Radius
        {
            get
            {
                return this.RadiusField;
            }
            set
            {
                if ((this.RadiusField.Equals(value) != true))
                {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a sub geography, specifically a state or province to target, and the percentage used to adjust the base bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796942(v=msads.90).aspx">StateTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dd796942(v=msads.90).aspx for details.
    /// <para>Used by <see cref="StateTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class StateTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private bool IsExcludedField;
        
        private string StateField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted sub geography.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// Set this element to true if you want to exclude the location from targeting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        /// <summary>
        /// The sub geography to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StateField, value) != true))
                {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines information about a target in your library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796878(v=msads.90).aspx">TargetInfo Data Object</see> http://msdn.microsoft.com/en-us/library/dd796878(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsInfoFromLibrary">GetTargetsInfoFromLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetInfo", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class TargetInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The name of the target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the types of targeting that you can use to target your ads to users. For example, you can target your ads based on the geographic location of the user, the day of the week, or the time of the day.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743781(v=msads.90).aspx">Target2 Data Object</see> http://msdn.microsoft.com/en-us/library/dn743781(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary2">AddTargetsToLibrary2</see>, <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds2">GetTargetsByAdGroupIds2</see>, <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds2">GetTargetsByCampaignIds2</see>, <see cref="CampaignManagementServiceClient.GetTargetsByIds2">GetTargetsByIds2</see> and <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary2">UpdateTargetsInLibrary2</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Target2", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Target2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.AgeTarget AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.DayTimeTarget DayTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.DeviceOSTarget DeviceOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.GenderTarget GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLibraryTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.LocationTarget2 LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.NetworkTarget NetworkField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Targets ads to users within one or more age ranges.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.AgeTarget Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AgeField, value) != true))
                {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to run on specific days and hours of the week.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.DayTimeTarget DayTime
        {
            get
            {
                return this.DayTimeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DayTimeField, value) != true))
                {
                    this.DayTimeField = value;
                    this.RaisePropertyChanged("DayTime");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to serve on specific devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.DeviceOSTarget DeviceOS
        {
            get
            {
                return this.DeviceOSField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceOSField, value) != true))
                {
                    this.DeviceOSField = value;
                    this.RaisePropertyChanged("DeviceOS");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the Target2 object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to men only or women only.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.GenderTarget Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                if ((object.ReferenceEquals(this.GenderField, value) != true))
                {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        /// <summary>
        /// A system-generated identifier that identifies this target object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Determines whether the target library contains this target object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLibraryTarget
        {
            get
            {
                return this.IsLibraryTargetField;
            }
            set
            {
                if ((this.IsLibraryTargetField.Equals(value) != true))
                {
                    this.IsLibraryTargetField = value;
                    this.RaisePropertyChanged("IsLibraryTarget");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to users within a specific location; for example, users within a certain radius of your business or within a specific state.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.LocationTarget2 Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        /// <summary>
        /// The name of the target. The name can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// Targets ads to users within a specific search network. Note: Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.NetworkTarget Network
        {
            get
            {
                return this.NetworkField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NetworkField, value) != true))
                {
                    this.NetworkField = value;
                    this.RaisePropertyChanged("Network");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of days of the week and time range to target with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743766(v=msads.90).aspx">DayTimeTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dn743766(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayTimeTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DayTimeTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DayTimeTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of DayTimeTargetBid objects that each specify the day of the week and time to target with bid adjustment to apply to the base bid. You may not specify any overlapping day and time ranges, for example Monday from 3:00AM to 5:00AM and Monday 4:00AM to 6:00AM are not allowed in the same DayTimeTarget.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.DayTimeTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that can contain different types of geographical targets, for example lists of cities and state targets.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743770(v=msads.90).aspx">LocationTarget2 Data Object</see> http://msdn.microsoft.com/en-us/library/dn743770(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationTarget2", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class LocationTarget2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.CityTarget CityTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.CountryTarget CountryTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.IntentOption> IntentOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.MetroAreaTarget MetroAreaTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.PostalCodeTarget PostalCodeTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.RadiusTarget2 RadiusTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.StateTarget StateTargetField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The cities to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.CityTarget CityTarget
        {
            get
            {
                return this.CityTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CityTargetField, value) != true))
                {
                    this.CityTargetField = value;
                    this.RaisePropertyChanged("CityTarget");
                }
            }
        }
        
        /// <summary>
        /// The countries/regions to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.CountryTarget CountryTarget
        {
            get
            {
                return this.CountryTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryTargetField, value) != true))
                {
                    this.CountryTargetField = value;
                    this.RaisePropertyChanged("CountryTarget");
                }
            }
        }
        
        /// <summary>
        /// Determines whether the audience must be physically located in the targeted location in order for the ad to display. The default value is PeopleInOrSearchingForOrViewingPages.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.IntentOption> IntentOption
        {
            get
            {
                return this.IntentOptionField;
            }
            set
            {
                if ((this.IntentOptionField.Equals(value) != true))
                {
                    this.IntentOptionField = value;
                    this.RaisePropertyChanged("IntentOption");
                }
            }
        }
        
        /// <summary>
        /// The metropolitan areas to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.MetroAreaTarget MetroAreaTarget
        {
            get
            {
                return this.MetroAreaTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MetroAreaTargetField, value) != true))
                {
                    this.MetroAreaTargetField = value;
                    this.RaisePropertyChanged("MetroAreaTarget");
                }
            }
        }
        
        /// <summary>
        /// The postal codes to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.PostalCodeTarget PostalCodeTarget
        {
            get
            {
                return this.PostalCodeTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PostalCodeTargetField, value) != true))
                {
                    this.PostalCodeTargetField = value;
                    this.RaisePropertyChanged("PostalCodeTarget");
                }
            }
        }
        
        /// <summary>
        /// The geographical locations to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.RadiusTarget2 RadiusTarget
        {
            get
            {
                return this.RadiusTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RadiusTargetField, value) != true))
                {
                    this.RadiusTargetField = value;
                    this.RaisePropertyChanged("RadiusTarget");
                }
            }
        }
        
        /// <summary>
        /// The states, provinces, or territories to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.StateTarget StateTarget
        {
            get
            {
                return this.StateTargetField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StateTargetField, value) != true))
                {
                    this.StateTargetField = value;
                    this.RaisePropertyChanged("StateTarget");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743763(v=msads.90).aspx">NetworkTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dn743763(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Target2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NetworkTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.NetworkTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of NetworkTargetBid objects that each specify the network to target with bid adjustment to apply to the base bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.NetworkTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific day of the week and time range to target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743741(v=msads.90).aspx">DayTimeTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dn743741(v=msads.90).aspx for details.
    /// <para>Used by <see cref="DayTimeTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayTimeTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class DayTimeTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private Microsoft.BingAds.CampaignManagement.Day DayField;
        
        private int FromHourField;
        
        private Microsoft.BingAds.CampaignManagement.Minute FromMinuteField;
        
        private int ToHourField;
        
        private Microsoft.BingAds.CampaignManagement.Minute ToMinuteField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid for the specified day and time range.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The day of the week to target. For example, you can target the ads to run only on Friday or Saturday.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.Day Day
        {
            get
            {
                return this.DayField;
            }
            set
            {
                if ((this.DayField.Equals(value) != true))
                {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        /// <summary>
        /// The starting hour range to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int FromHour
        {
            get
            {
                return this.FromHourField;
            }
            set
            {
                if ((this.FromHourField.Equals(value) != true))
                {
                    this.FromHourField = value;
                    this.RaisePropertyChanged("FromHour");
                }
            }
        }
        
        /// <summary>
        /// The starting minute of the hour to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.Minute FromMinute
        {
            get
            {
                return this.FromMinuteField;
            }
            set
            {
                if ((this.FromMinuteField.Equals(value) != true))
                {
                    this.FromMinuteField = value;
                    this.RaisePropertyChanged("FromMinute");
                }
            }
        }
        
        /// <summary>
        /// The ending hour range to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ToHour
        {
            get
            {
                return this.ToHourField;
            }
            set
            {
                if ((this.ToHourField.Equals(value) != true))
                {
                    this.ToHourField = value;
                    this.RaisePropertyChanged("ToHour");
                }
            }
        }
        
        /// <summary>
        /// The ending minute of the hour to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.Minute ToMinute
        {
            get
            {
                return this.ToMinuteField;
            }
            set
            {
                if ((this.ToMinuteField.Equals(value) != true))
                {
                    this.ToMinuteField = value;
                    this.RaisePropertyChanged("ToMinute");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible minute values for a day and time target hour range.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743745(v=msads.90).aspx">Minute Value Set</see> http://msdn.microsoft.com/en-us/library/dn743745(v=msads.90).aspx for details.
    /// <para>Used by <see cref="DayTimeTargetBid"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Minute", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum Minute : short
    {
        
        /// <summary>
        /// The starting or ending minute of the hour range is zero.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zero = 0,
        
        /// <summary>
        /// The starting or ending minute of the hour range is fifteen.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fifteen = 1,
        
        /// <summary>
        /// The starting or ending minute of the hour range is thirty.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thirty = 2,
        
        /// <summary>
        /// The starting or ending minute of the hour range is forty-five.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FortyFive = 3,
    }
    
    /// <summary>
    /// Defines a list of postal code targets with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743743(v=msads.90).aspx">PostalCodeTarget Data Object</see> http://msdn.microsoft.com/en-us/library/dn743743(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostalCodeTarget", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class PostalCodeTarget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.PostalCodeTargetBid> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of PostalCodeTargetBid objects that specifies the times of the postal code to target and the bid adjustment to apply to the base bid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.PostalCodeTargetBid> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a list of geographical radius targets with bid adjustments.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743744(v=msads.90).aspx">RadiusTarget2 Data Object</see> http://msdn.microsoft.com/en-us/library/dn743744(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadiusTarget2", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class RadiusTarget2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.RadiusTargetBid2> BidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of RadiusTargetBid2 objects that specifies an area surrounding a geographical location to target and the bid adjustment to apply to the base bid. You can specify a maximum of 2,000 radius targets.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.RadiusTargetBid2> Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidsField, value) != true))
                {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible intent options for location targeting, for example to target people in, searching for, or viewing pages about your targeted location.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743742(v=msads.90).aspx">IntentOption Value Set</see> http://msdn.microsoft.com/en-us/library/dn743742(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationTarget2"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntentOption", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum IntentOption : short
    {
        
        /// <summary>
        /// Show ads to people in, searching for, or viewing pages about your targeted location.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeopleInOrSearchingForOrViewingPages = 0,
        
        /// <summary>
        /// Show ads to people in your targeted location.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeopleIn = 1,
        
        /// <summary>
        /// Show ads to people searching for or viewing pages about your targeted location.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeopleSearchingForOrViewingPages = 2,
    }
    
    /// <summary>
    /// Defines a specific postal code target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743767(v=msads.90).aspx">PostalCodeTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dn743767(v=msads.90).aspx for details.
    /// <para>Used by <see cref="PostalCodeTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostalCodeTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class PostalCodeTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private bool IsExcludedField;
        
        private string PostalCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted postal code area.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// Set this element to true if you want to exclude the location from targeting.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        /// <summary>
        /// The postal code to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PostalCode
        {
            get
            {
                return this.PostalCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true))
                {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a specific geographical radius target with bid adjustment.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743768(v=msads.90).aspx">RadiusTargetBid2 Data Object</see> http://msdn.microsoft.com/en-us/library/dn743768(v=msads.90).aspx for details.
    /// <para>Used by <see cref="RadiusTarget2"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadiusTargetBid2", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class RadiusTargetBid2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        private bool IsExcludedField;
        
        private double LatitudeDegreesField;
        
        private double LongitudeDegreesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private double RadiusField;
        
        private Microsoft.BingAds.CampaignManagement.DistanceUnit RadiusUnitField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid if the user is in the targeted geographical location radius.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsExcluded
        {
            get
            {
                return this.IsExcludedField;
            }
            set
            {
                if ((this.IsExcludedField.Equals(value) != true))
                {
                    this.IsExcludedField = value;
                    this.RaisePropertyChanged("IsExcluded");
                }
            }
        }
        
        /// <summary>
        /// The latitude, in degrees, of the target location.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double LatitudeDegrees
        {
            get
            {
                return this.LatitudeDegreesField;
            }
            set
            {
                if ((this.LatitudeDegreesField.Equals(value) != true))
                {
                    this.LatitudeDegreesField = value;
                    this.RaisePropertyChanged("LatitudeDegrees");
                }
            }
        }
        
        /// <summary>
        /// The longitude, in degrees, of the target location.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double LongitudeDegrees
        {
            get
            {
                return this.LongitudeDegreesField;
            }
            set
            {
                if ((this.LongitudeDegreesField.Equals(value) != true))
                {
                    this.LongitudeDegreesField = value;
                    this.RaisePropertyChanged("LongitudeDegrees");
                }
            }
        }
        
        /// <summary>
        /// The name of the geographical location being targeted. The name can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The radius that specifies the area surrounding the geographical location to target.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Radius
        {
            get
            {
                return this.RadiusField;
            }
            set
            {
                if ((this.RadiusField.Equals(value) != true))
                {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        /// <summary>
        /// The unit of measurement for the specified radius, for example kilometers or miles.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.DistanceUnit RadiusUnit
        {
            get
            {
                return this.RadiusUnitField;
            }
            set
            {
                if ((this.RadiusUnitField.Equals(value) != true))
                {
                    this.RadiusUnitField = value;
                    this.RaisePropertyChanged("RadiusUnit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible distance units of a geographical location.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743740(v=msads.90).aspx">DistanceUnit Value Set</see> http://msdn.microsoft.com/en-us/library/dn743740(v=msads.90).aspx for details.
    /// <para>Used by <see cref="RadiusTargetBid2"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistanceUnit", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum DistanceUnit : short
    {
        
        /// <summary>
        /// The distance of the specified geographical location is specified in kilometers.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kilometers = 0,
        
        /// <summary>
        /// The distance of the specified geographical location is specified in miles.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miles = 1,
    }
    
    /// <summary>
    ///  This object is reserved for future use.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743764(v=msads.90).aspx">NetworkTargetBid Data Object</see> http://msdn.microsoft.com/en-us/library/dn743764(v=msads.90).aspx for details.
    /// <para>Used by <see cref="NetworkTarget"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkTargetBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NetworkTargetBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BidAdjustmentField;
        
        private Microsoft.BingAds.CampaignManagement.NetworkType NetworkField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The percent amount by which to adjust the base bid for the specified network.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The network to target. For example, you can target the ads to run only on owned and operated networks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.NetworkType Network
        {
            get
            {
                return this.NetworkField;
            }
            set
            {
                if ((this.NetworkField.Equals(value) != true))
                {
                    this.NetworkField = value;
                    this.RaisePropertyChanged("Network");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    ///  This value set is reserved for future use.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743765(v=msads.90).aspx">NetworkType Value Set</see> http://msdn.microsoft.com/en-us/library/dn743765(v=msads.90).aspx for details.
    /// <para>Used by <see cref="NetworkTargetBid"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum NetworkType : short
    {
        
        /// <summary>
        /// Display ads on owned and operated networks.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnedAndOperated = 0,
        
        /// <summary>
        /// Display ads on syndicated search networks.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyndicatedSearch = 1,
    }
    
    /// <summary>
    /// Defines the base object of an ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671952(v=msads.90).aspx">Ad Data Object</see> http://msdn.microsoft.com/en-us/library/bb671952(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAds">AddAds</see>, <see cref="CampaignManagementServiceClient.GetAdsByAdGroupId">GetAdsByAdGroupId</see>, <see cref="CampaignManagementServiceClient.GetAdsByEditorialStatus">GetAdsByEditorialStatus</see>, <see cref="CampaignManagementServiceClient.GetAdsByIds">GetAdsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateAds">UpdateAds</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ad", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.TextAd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.MobileAd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ProductAd))]
    public partial class Ad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DevicePreferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdEditorialStatus> EditorialStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdStatus> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdType> TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// This element determines whether the preference is for text ads to be displayed on mobile devices or all devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DevicePreference
        {
            get
            {
                return this.DevicePreferenceField;
            }
            set
            {
                if ((this.DevicePreferenceField.Equals(value) != true))
                {
                    this.DevicePreferenceField = value;
                    this.RaisePropertyChanged("DevicePreference");
                }
            }
        }
        
        /// <summary>
        /// The editorial review status of the ad, which indicates whether the ad is pending review, has been approved, or has been disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdEditorialStatus> EditorialStatus
        {
            get
            {
                return this.EditorialStatusField;
            }
            set
            {
                if ((this.EditorialStatusField.Equals(value) != true))
                {
                    this.EditorialStatusField = value;
                    this.RaisePropertyChanged("EditorialStatus");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the Ad object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system generated identifier of the ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The status of the ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The type of the ad. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdType> Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((this.TypeField.Equals(value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb672081(v=msads.90).aspx">TextAd Data Object</see> http://msdn.microsoft.com/en-us/library/bb672081(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextAd", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class TextAd : Microsoft.BingAds.CampaignManagement.Ad
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationUrlField;
        
        private string DisplayUrlField;
        
        private string TextField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayUrl
        {
            get
            {
                return this.DisplayUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayUrlField, value) != true))
                {
                    this.DisplayUrlField = value;
                    this.RaisePropertyChanged("DisplayUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TextField, value) != true))
                {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TitleField, value) != true))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    /// <summary>
    /// System_CAPS_MD_note.md Bing Ads WAP (Wireless Application Protocol) mobile ads are pay-per-click ads that are displayed on Bing and Yahoo mobile search results pages. The ads are displayed only to people who search using mobile phones that don't have full web browsers; they aren't displayed on smartphones. In September 2015, support ended for adding new WAP mobile ads. You will still be able to edit existing WAP mobile ads.In November 2015, Bing Ads stopped serving WAP mobile ads on search result pages for all languages and countries. Existing reporting and performance data will still be available for advertisers to reference.In the middle of calendar year 2016, Bing Ads will officially sunset WAP mobile ads from all entry points (Web UI, Editor, API). All reporting and performance data will no longer be available at that time.Advertisers who are currently using WAP mobile ads are encouraged to enable mobile preferred text ads in order to reach customers who are using mobile devices.Defines a mobile ad. A mobile ad is displayed to a user when the ad is viewed on a low-fi mobile device.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc512741(v=msads.90).aspx">MobileAd Data Object</see> http://msdn.microsoft.com/en-us/library/cc512741(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileAd", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MobileAd : Microsoft.BingAds.CampaignManagement.Ad
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessName
        {
            get
            {
                return this.BusinessNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BusinessNameField, value) != true))
                {
                    this.BusinessNameField = value;
                    this.RaisePropertyChanged("BusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayUrl
        {
            get
            {
                return this.DisplayUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayUrlField, value) != true))
                {
                    this.DisplayUrlField = value;
                    this.RaisePropertyChanged("DisplayUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true))
                {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TextField, value) != true))
                {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TitleField, value) != true))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a product ad. A product ad is not used directly for delivered ad copy. Instead, the delivery engine generates product ads from the product details that it finds in the customer's Bing Merchant Center store.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj738612(v=msads.90).aspx">ProductAd Data Object</see> http://msdn.microsoft.com/en-us/library/jj738612(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductAd", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductAd : Microsoft.BingAds.CampaignManagement.Ad
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PromotionalTextField;
        
        /// <summary>
        /// The promotional text to display in a product ad. If you do not want to add promotional text to the product ads, set PromotionalText to null or an empty string.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromotionalText
        {
            get
            {
                return this.PromotionalTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PromotionalTextField, value) != true))
                {
                    this.PromotionalTextField = value;
                    this.RaisePropertyChanged("PromotionalText");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the editorial review status values of an ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc565084(v=msads.90).aspx">AdEditorialStatus Value Set</see> http://msdn.microsoft.com/en-us/library/cc565084(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Ad"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByEditorialStatus">GetAdsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdEditorialStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdEditorialStatus : int
    {
        
        /// <summary>
        /// The ad passed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The ad failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disapproved = 1,
        
        /// <summary>
        /// One or more elements of the ad is undergoing editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        /// <summary>
        /// The ad passed editorial review in one or more markets, and one or more elements of the ad is undergoing editorial review in another market. For example the ad passed editorial review for Canada and is still pending review in the United States.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveLimited = 3,
    }
    
    /// <summary>
    /// Defines the possible status values of an ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc580692(v=msads.90).aspx">AdStatus Value Set</see> http://msdn.microsoft.com/en-us/library/cc580692(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Ad"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdStatus : int
    {
        
        /// <summary>
        /// The ad is undergoing editorial review or has failed editorial review. To determine the ad editorial status, see AdEditorialStatus.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 0,
        
        /// <summary>
        /// The ad can be served.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        /// <summary>
        /// The ad will not serve until the owner resumes it.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 2,
        
        /// <summary>
        /// This status is for internal use only. Because all Get operations do not return deleted objects, you will not see an object with this status.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    /// <summary>
    /// Defines the type of ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671537(v=msads.90).aspx">AdType Value Set</see> http://msdn.microsoft.com/en-us/library/bb671537(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Ad"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdType : int
    {
        
        /// <summary>
        /// The ad is a text ad. For more information, see TextAd.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 0,
        
        /// <summary>
        /// Not used.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 1,
        
        /// <summary>
        /// The ad is a mobile ad. For more information, see MobileAd.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        /// <summary>
        /// Not used.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RichSearch = 3,
        
        /// <summary>
        /// The ad is a product ad. For more information, see ProductAd.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Product = 4,
    }
    
    /// <summary>
    /// Defines a keyword.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671833(v=msads.90).aspx">Keyword Data Object</see> http://msdn.microsoft.com/en-us/library/bb671833(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddKeywords">AddKeywords</see>, <see cref="CampaignManagementServiceClient.GetKeywordsByAdGroupId">GetKeywordsByAdGroupId</see>, <see cref="CampaignManagementServiceClient.GetKeywordsByEditorialStatus">GetKeywordsByEditorialStatus</see>, <see cref="CampaignManagementServiceClient.GetKeywordsByIds">GetKeywordsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateKeywords">UpdateKeywords</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Keyword", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Keyword : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.KeywordEditorialStatus> EditorialStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.MatchType> MatchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.KeywordStatus> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The bid to use when the user's search term and the keyword match. Note: When updating your keyword bid to use the AdGroup default match type bid, set the Amount element of the Bid object to null. If you set this Bid property to null, your existing bid will not be updated. For more information, see Match Types and Bid Values.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid Bid
        {
            get
            {
                return this.BidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidField, value) != true))
                {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        /// <summary>
        /// The URL of the webpage to take the user to when they click the ad. The keyword's destination URL is used if specified; otherwise, the ad's destination URL is used.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        /// <summary>
        /// The editorial review status of the keyword, which indicates whether the keyword is pending review, has been approved, or has been disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.KeywordEditorialStatus> EditorialStatus
        {
            get
            {
                return this.EditorialStatusField;
            }
            set
            {
                if ((this.EditorialStatusField.Equals(value) != true))
                {
                    this.EditorialStatusField = value;
                    this.RaisePropertyChanged("EditorialStatus");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the Keyword object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the keyword.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The type of match to compare the keyword and the user's search term.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.MatchType> MatchType
        {
            get
            {
                return this.MatchTypeField;
            }
            set
            {
                if ((this.MatchTypeField.Equals(value) != true))
                {
                    this.MatchTypeField = value;
                    this.RaisePropertyChanged("MatchType");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value in an ad if the ad's title, text, display URL, or destination URL contains the {Param1} dynamic substitution string. Note: Although you can use {Param1} to specify an ad's destination URL, you are encouraged not to. Instead, you should set the keyword's DestinationUrl element.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param1
        {
            get
            {
                return this.Param1Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param1Field, value) != true))
                {
                    this.Param1Field = value;
                    this.RaisePropertyChanged("Param1");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value in an ad if the title, text, display URL, or destination URL contains the {Param2} dynamic substitution string.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param2
        {
            get
            {
                return this.Param2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param2Field, value) != true))
                {
                    this.Param2Field = value;
                    this.RaisePropertyChanged("Param2");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value in an ad if the title, text, display URL, or destination URL contains the {Param3} dynamic substitution string.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param3
        {
            get
            {
                return this.Param3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param3Field, value) != true))
                {
                    this.Param3Field = value;
                    this.RaisePropertyChanged("Param3");
                }
            }
        }
        
        /// <summary>
        /// The keyword's status. By default, the status is set to Active.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.KeywordStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The keyword text. The text can contain a maximum of 100 characters. You should specify the keyword in the locale of the Language value that you specified for the ad group to which the keyword belongs.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TextField, value) != true))
                {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the editorial review status values of a keyword.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/cc565085(v=msads.90).aspx">KeywordEditorialStatus Value Set</see> http://msdn.microsoft.com/en-us/library/cc565085(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Keyword"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByEditorialStatus">GetKeywordsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordEditorialStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum KeywordEditorialStatus : int
    {
        
        /// <summary>
        /// The keyword passed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The keyword failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disapproved = 1,
        
        /// <summary>
        /// One or more elements of the keyword is undergoing editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        /// <summary>
        /// The keyword passed editorial review in one or more markets, and one or more elements of the keyword is undergoing editorial review in another market. For example the keyword passed editorial review for Canada and is still pending review in the United States.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveLimited = 3,
    }
    
    /// <summary>
    /// Defines the possible match types for a keyword bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn249974(v=msads.90).aspx">MatchType Value Set</see> http://msdn.microsoft.com/en-us/library/dn249974(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Keyword"/> and <see cref="NegativeKeyword"/> data objects.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum MatchType : byte
    {
        
        /// <summary>
        /// The keyword match type is Exact.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 0,
        
        /// <summary>
        /// The keyword match type is Phrase.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phrase = 1,
        
        /// <summary>
        /// The keyword match type is Broad.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Broad = 2,
        
        /// <summary>
        /// The keyword match type is Content.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Content = 3,
    }
    
    /// <summary>
    /// Defines the possible status values of a keyword.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/bb671482(v=msads.90).aspx">KeywordStatus Value Set</see> http://msdn.microsoft.com/en-us/library/bb671482(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Keyword"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum KeywordStatus : int
    {
        
        /// <summary>
        /// The keyword can be used to match user search queries.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The keyword cannot be used to match user search queries until the owner resumes it.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 1,
        
        /// <summary>
        /// This status is for internal use only. Because all Get operations do not return deleted objects, you will not see an object with this status.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        /// <summary>
        /// The keyword is undergoing editorial review or has failed editorial review. To determine the keyword editorial status, see KeywordEditorialStatus.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 3,
    }
    
    /// <summary>
    /// Defines the possible types of entities.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj622172(v=msads.90).aspx">EntityType Value Set</see> http://msdn.microsoft.com/en-us/library/jj622172(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AppealEditorialRejections">AppealEditorialRejections</see> and <see cref="CampaignManagementServiceClient.GetEditorialReasonsByIds">GetEditorialReasonsByIds</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum EntityType : int
    {
        
        /// <summary>
        /// The entity is a Campaign object.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Campaign = 1,
        
        /// <summary>
        /// The entity is an AdGroup object.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdGroup = 2,
        
        /// <summary>
        /// The entity is a Target object.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Target = 3,
        
        /// <summary>
        /// The entity is an Ad object or an object that derives from it, such as the TextAd object.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ad = 4,
        
        /// <summary>
        /// The entity is a Keyword object.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Keyword = 5,
        
        /// <summary>
        /// For future use.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdExtension = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdGroupCriterion = 7,
    }
    
    /// <summary>
    /// Defines a website placement bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd797248(v=msads.90).aspx">SitePlacement Data Object</see> http://msdn.microsoft.com/en-us/library/dd797248(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSitePlacements">AddSitePlacements</see>, <see cref="CampaignManagementServiceClient.GetSitePlacementsByAdGroupId">GetSitePlacementsByAdGroupId</see>, <see cref="CampaignManagementServiceClient.GetSitePlacementsByIds">GetSitePlacementsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateSitePlacements">UpdateSitePlacements</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SitePlacement", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class SitePlacement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PlacementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.SitePlacementStatus> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The bid for text ad space on the specified publisher's website. This bid overrides the default content match bid of the ad group. To use the default ad group bid value when you add this bid, set this element to null.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid Bid
        {
            get
            {
                return this.BidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidField, value) != true))
                {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        /// <summary>
        /// A system-generated identifier that identifies this object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the publisher website where you want to display your text ads.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PlacementId
        {
            get
            {
                return this.PlacementIdField;
            }
            set
            {
                if ((this.PlacementIdField.Equals(value) != true))
                {
                    this.PlacementIdField = value;
                    this.RaisePropertyChanged("PlacementId");
                }
            }
        }
        
        /// <summary>
        /// The status of this site placement bid. When you add a site placement bid, its status is Active by default.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.SitePlacementStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The URL of the website where you want your text ads to display. The Url can contain a maximum of 256 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url
        {
            get
            {
                return this.UrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UrlField, value) != true))
                {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the status of a website placement bid.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd797148(v=msads.90).aspx">SitePlacementStatus Value Set</see> http://msdn.microsoft.com/en-us/library/dd797148(v=msads.90).aspx for details.
    /// <para>Used by <see cref="SitePlacement"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SitePlacementStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum SitePlacementStatus : int
    {
        
        /// <summary>
        /// The website placement bid is active.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The website placement bid is paused.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 1,
        
        /// <summary>
        /// The website placement bid is deleted.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        /// <summary>
        /// The website placement bid is inactive
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 3,
    }
    
    /// <summary>
    /// Defines the size and type of media that the publisher website supports for ad placements.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796936(v=msads.90).aspx">PlacementDetail Data Object</see> http://msdn.microsoft.com/en-us/library/dd796936(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetPlacementDetailsForUrls">GetPlacementDetailsForUrls</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacementDetail", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class PlacementDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.ImpressionsPerDayRange ImpressionsRangePerDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PlacementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaType> SupportedMediaTypesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Not supported.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.ImpressionsPerDayRange ImpressionsRangePerDay
        {
            get
            {
                return this.ImpressionsRangePerDayField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImpressionsRangePerDayField, value) != true))
                {
                    this.ImpressionsRangePerDayField = value;
                    this.RaisePropertyChanged("ImpressionsRangePerDay");
                }
            }
        }
        
        /// <summary>
        /// The URL of the publisher's website.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PathName
        {
            get
            {
                return this.PathNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PathNameField, value) != true))
                {
                    this.PathNameField = value;
                    this.RaisePropertyChanged("PathName");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the publisher.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlacementId
        {
            get
            {
                return this.PlacementIdField;
            }
            set
            {
                if ((this.PlacementIdField.Equals(value) != true))
                {
                    this.PlacementIdField = value;
                    this.RaisePropertyChanged("PlacementId");
                }
            }
        }
        
        /// <summary>
        /// An array of MediaType objects that contains the size and type of media that the publisher website supports.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaType> SupportedMediaTypes
        {
            get
            {
                return this.SupportedMediaTypesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SupportedMediaTypesField, value) != true))
                {
                    this.SupportedMediaTypesField = value;
                    this.RaisePropertyChanged("SupportedMediaTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the minimum and maximum impressions per day for a website.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796854(v=msads.90).aspx">ImpressionsPerDayRange Data Object</see> http://msdn.microsoft.com/en-us/library/dd796854(v=msads.90).aspx for details.
    /// <para>Used by <see cref="PlacementDetail"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImpressionsPerDayRange", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ImpressionsPerDayRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinimumField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The maximum number of impressions per day for the website.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Maximum
        {
            get
            {
                return this.MaximumField;
            }
            set
            {
                if ((this.MaximumField.Equals(value) != true))
                {
                    this.MaximumField = value;
                    this.RaisePropertyChanged("Maximum");
                }
            }
        }
        
        /// <summary>
        /// The minimum number of impressions per day for the website.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minimum
        {
            get
            {
                return this.MinimumField;
            }
            set
            {
                if ((this.MinimumField.Equals(value) != true))
                {
                    this.MinimumField = value;
                    this.RaisePropertyChanged("Minimum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines media type information for a website.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd797128(v=msads.90).aspx">MediaType Data Object</see> http://msdn.microsoft.com/en-us/library/dd797128(v=msads.90).aspx for details.
    /// <para>Used by <see cref="PlacementDetail"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MediaType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Dimension> DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The media dimensions.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Dimension> Dimensions
        {
            get
            {
                return this.DimensionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true))
                {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        /// <summary>
        /// The name of the media type.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines dimension information for media on a website.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796881(v=msads.90).aspx">Dimension Data Object</see> http://msdn.microsoft.com/en-us/library/dd796881(v=msads.90).aspx for details.
    /// <para>Used by <see cref="MediaType"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dimension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Dimension : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The height.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                if ((this.HeightField.Equals(value) != true))
                {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        /// <summary>
        /// The width.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                if ((this.WidthField.Equals(value) != true))
                {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a collection of ads or keywords that failed editorial review, and the reason for the failure.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/ff728504(v=msads.90).aspx">EditorialReasonCollection Data Object</see> http://msdn.microsoft.com/en-us/library/ff728504(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetEditorialReasonsByIds">GetEditorialReasonsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditorialReasonCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class EditorialReasonCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdOrKeywordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.AppealStatus AppealStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialReason> ReasonsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An identifier that identifies the ad or keyword that failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdOrKeywordId
        {
            get
            {
                return this.AdOrKeywordIdField;
            }
            set
            {
                if ((this.AdOrKeywordIdField.Equals(value) != true))
                {
                    this.AdOrKeywordIdField = value;
                    this.RaisePropertyChanged("AdOrKeywordId");
                }
            }
        }
        
        /// <summary>
        /// A value that determines whether you can appeal the issues found by the editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Microsoft.BingAds.CampaignManagement.AppealStatus AppealStatus
        {
            get
            {
                return this.AppealStatusField;
            }
            set
            {
                if ((this.AppealStatusField.Equals(value) != true))
                {
                    this.AppealStatusField = value;
                    this.RaisePropertyChanged("AppealStatus");
                }
            }
        }
        
        /// <summary>
        /// An array of editorial reasons that you can use to determine the component of an ad or keyword that failed editorial review, and the reason for the failure.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialReason> Reasons
        {
            get
            {
                return this.ReasonsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReasonsField, value) != true))
                {
                    this.ReasonsField = value;
                    this.RaisePropertyChanged("Reasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the values that you use to determine whether an editorial rejection is appealable.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj631643(v=msads.90).aspx">AppealStatus Value Set</see> http://msdn.microsoft.com/en-us/library/jj631643(v=msads.90).aspx for details.
    /// <para>Used by <see cref="EditorialReasonCollection"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppealStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AppealStatus : int
    {
        
        /// <summary>
        /// The editorial rejection is appealable.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Appealable = 1,
        
        /// <summary>
        /// The editorial rejection is appealable and an appeal has been submitted.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppealPending = 2,
        
        /// <summary>
        /// The editorial rejection is not appealable.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAppealable = 3,
    }
    
    /// <summary>
    /// Defines an object that you can use to determine the component of an ad or keyword that failed editorial review, and the reason for the failure.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/ff728493(v=msads.90).aspx">EditorialReason Data Object</see> http://msdn.microsoft.com/en-us/library/ff728493(v=msads.90).aspx for details.
    /// <para>Used by <see cref="EditorialReasonCollection"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditorialReason", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class EditorialReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> PublisherCountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The component of the ad or keyword that failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        /// <summary>
        /// A list of countries where the ad or keyword failed editorial review. The string contains the country's two character country code.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> PublisherCountries
        {
            get
            {
                return this.PublisherCountriesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PublisherCountriesField, value) != true))
                {
                    this.PublisherCountriesField = value;
                    this.RaisePropertyChanged("PublisherCountries");
                }
            }
        }
        
        /// <summary>
        /// A code that identifies the reason for the failure. For a list of possible reason codes, see Editorial Failure Reason Codes.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonCode
        {
            get
            {
                return this.ReasonCodeField;
            }
            set
            {
                if ((this.ReasonCodeField.Equals(value) != true))
                {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        /// <summary>
        /// The term that failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term
        {
            get
            {
                return this.TermField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TermField, value) != true))
                {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountMigrationStatusesInfo", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AccountMigrationStatusesInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MigrationStatusInfo> MigrationStatusInfoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long AccountId
        {
            get
            {
                return this.AccountIdField;
            }
            set
            {
                if ((this.AccountIdField.Equals(value) != true))
                {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MigrationStatusInfo> MigrationStatusInfo
        {
            get
            {
                return this.MigrationStatusInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MigrationStatusInfoField, value) != true))
                {
                    this.MigrationStatusInfoField = value;
                    this.RaisePropertyChanged("MigrationStatusInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MigrationStatusInfo", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MigrationStatusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MigrationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeInUtcField;
        
        private Microsoft.BingAds.CampaignManagement.MigrationStatus StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MigrationType
        {
            get
            {
                return this.MigrationTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MigrationTypeField, value) != true))
                {
                    this.MigrationTypeField = value;
                    this.RaisePropertyChanged("MigrationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTimeInUtc
        {
            get
            {
                return this.StartTimeInUtcField;
            }
            set
            {
                if ((this.StartTimeInUtcField.Equals(value) != true))
                {
                    this.StartTimeInUtcField = value;
                    this.RaisePropertyChanged("StartTimeInUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.MigrationStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MigrationStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum MigrationStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotInPilot = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
    }
    
    /// <summary>
    /// Defines the base object of an ad extension.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/hh527708(v=msads.90).aspx">AdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/hh527708(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtensionAssociation"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdExtensions">AddAdExtensions</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionsByIds">GetAdExtensionsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateAdExtensions">UpdateAdExtensions</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.SiteLinksAdExtension))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.AppAdExtension))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.CallAdExtension))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.LocationAdExtension))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ProductAdExtension))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ImageAdExtension))]
    public partial class AdExtension : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdExtensionStatus> StatusField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VersionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the AdExtension object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The status of the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdExtensionStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The type of ad extension. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        /// <summary>
        /// The number of times the contents of the ad extension has been updated. The version is set to 1 when you add the extension and is incremented each time it's revised.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                if ((this.VersionField.Equals(value) != true))
                {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an ad extension that specifies one or more site links to add to a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134387(v=msads.90).aspx">SiteLinksAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/jj134387(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteLinksAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class SiteLinksAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SiteLink> SiteLinksField;
        
        /// <summary>
        /// A list of site links. Each object contains a link to a webpage on your website. You can specify a maximum of 10 site links, and the search engine determines a subset of links to include in the ad. If you specify the Description1 and Description2 elements of each site link, then up to four site links will be displayed.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SiteLink> SiteLinks
        {
            get
            {
                return this.SiteLinksField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SiteLinksField, value) != true))
                {
                    this.SiteLinksField = value;
                    this.RaisePropertyChanged("SiteLinks");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an app ad extension that can be included in a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn817898(v=msads.90).aspx">AppAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/dn817898(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AppAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        private string AppPlatformField;
        
        private string AppStoreIdField;
        
        private string DestinationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DevicePreferenceField;
        
        private string DisplayTextField;
        
        /// <summary>
        /// The application platform.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AppPlatform
        {
            get
            {
                return this.AppPlatformField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AppPlatformField, value) != true))
                {
                    this.AppPlatformField = value;
                    this.RaisePropertyChanged("AppPlatform");
                }
            }
        }
        
        /// <summary>
        /// The application identifier provided by the app store. Note: If the application is new, please expect to wait 24 hours before adding to an app ad extension in Bing Ads.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AppStoreId
        {
            get
            {
                return this.AppStoreIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AppStoreIdField, value) != true))
                {
                    this.AppStoreIdField = value;
                    this.RaisePropertyChanged("AppStoreId");
                }
            }
        }
        
        /// <summary>
        /// The URL of the app store download webpage that users are taken to when they click the app extension link.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        /// <summary>
        /// This element determines whether the preference is for the app extension to be displayed on mobile devices or all devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DevicePreference
        {
            get
            {
                return this.DevicePreferenceField;
            }
            set
            {
                if ((this.DevicePreferenceField.Equals(value) != true))
                {
                    this.DevicePreferenceField = value;
                    this.RaisePropertyChanged("DevicePreference");
                }
            }
        }
        
        /// <summary>
        /// The text displayed in the app ad extension. The text can contain a maximum of 35 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayText
        {
            get
            {
                return this.DisplayTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true))
                {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an object that specifies a click-to-call phone number to include in a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721598(v=msads.90).aspx">CallAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/jj721598(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CallAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DevicePreferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCallOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCallTrackingEnabledField;
        
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RequireTollFreeTrackingNumberField;
        
        /// <summary>
        /// The country code where the phone number is registered. The country code must contain a 2 character country code. For a list of country code values, see Geographical Location Codes.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true))
                {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        /// <summary>
        /// Note: Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DevicePreference
        {
            get
            {
                return this.DevicePreferenceField;
            }
            set
            {
                if ((this.DevicePreferenceField.Equals(value) != true))
                {
                    this.DevicePreferenceField = value;
                    this.RaisePropertyChanged("DevicePreference");
                }
            }
        }
        
        /// <summary>
        /// A Boolean value that determines whether the phone number is the only clickable item in the ad. If true and the ad is displayed on a hi-fi mobile device, all otherwise clickable items such as addresses, the display URL, and site links will be disabled.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCallOnly
        {
            get
            {
                return this.IsCallOnlyField;
            }
            set
            {
                if ((this.IsCallOnlyField.Equals(value) != true))
                {
                    this.IsCallOnlyField = value;
                    this.RaisePropertyChanged("IsCallOnly");
                }
            }
        }
        
        /// <summary>
        /// A Boolean value that determines whether call tracking is enabled for the call ad extension. Note: Call tracking is only supported in the United States and United Kingdom.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCallTrackingEnabled
        {
            get
            {
                return this.IsCallTrackingEnabledField;
            }
            set
            {
                if ((this.IsCallTrackingEnabledField.Equals(value) != true))
                {
                    this.IsCallTrackingEnabledField = value;
                    this.RaisePropertyChanged("IsCallTrackingEnabled");
                }
            }
        }
        
        /// <summary>
        /// The phone number to include in the ad. The phone number is clickable on hi-fi mobile devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true))
                {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        /// <summary>
        /// A Boolean value that determines whether a toll-free tracking number should be created for call tracking. This element can only be set if IsCallTrackingEnabled is also true.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RequireTollFreeTrackingNumber
        {
            get
            {
                return this.RequireTollFreeTrackingNumberField;
            }
            set
            {
                if ((this.RequireTollFreeTrackingNumberField.Equals(value) != true))
                {
                    this.RequireTollFreeTrackingNumberField = value;
                    this.RaisePropertyChanged("RequireTollFreeTrackingNumber");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an ad extension that specifies a business' address and phone number to include in a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721600(v=msads.90).aspx">LocationAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/jj721600(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class LocationAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        private Microsoft.BingAds.CampaignManagement.Address AddressField;
        
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.BusinessGeoCodeStatus> GeoCodeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.GeoPoint GeoPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IconMediaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ImageMediaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        /// <summary>
        /// The business' address.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.Address Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AddressField, value) != true))
                {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        /// <summary>
        /// The name of the business. The name can contain a maximum of 80 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CompanyName
        {
            get
            {
                return this.CompanyNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true))
                {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        /// <summary>
        /// A status value that indicates whether the business' latitude and longitude coordinates have been determined.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.BusinessGeoCodeStatus> GeoCodeStatus
        {
            get
            {
                return this.GeoCodeStatusField;
            }
            set
            {
                if ((this.GeoCodeStatusField.Equals(value) != true))
                {
                    this.GeoCodeStatusField = value;
                    this.RaisePropertyChanged("GeoCodeStatus");
                }
            }
        }
        
        /// <summary>
        /// The latitude and longitude coordinates of the specified Address element. The coordinates are used to mark the business' location on Bing Maps when the user clicks the address on the ad. If the specified coordinates are not within the range of valid values, the service determines the coordinates based on the address.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.GeoPoint GeoPoint
        {
            get
            {
                return this.GeoPointField;
            }
            set
            {
                if ((object.ReferenceEquals(this.GeoPointField, value) != true))
                {
                    this.GeoPointField = value;
                    this.RaisePropertyChanged("GeoPoint");
                }
            }
        }
        
        /// <summary>
        /// The identifier of an icon used to mark the business' location on Bing Maps. You can specify the identifier of a predefined icon or a custom icon that you added by calling the AddMedia. The size of a custom icon can be up to 26x26.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IconMediaId
        {
            get
            {
                return this.IconMediaIdField;
            }
            set
            {
                if ((this.IconMediaIdField.Equals(value) != true))
                {
                    this.IconMediaIdField = value;
                    this.RaisePropertyChanged("IconMediaId");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the image to include in the ad. You must specify the identifier of the image that you added to the image library by calling the AddMedia.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ImageMediaId
        {
            get
            {
                return this.ImageMediaIdField;
            }
            set
            {
                if ((this.ImageMediaIdField.Equals(value) != true))
                {
                    this.ImageMediaIdField = value;
                    this.RaisePropertyChanged("ImageMediaId");
                }
            }
        }
        
        /// <summary>
        /// The business' phone number to include in the ad. The phone number is clickable on hi-fi mobile devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true))
                {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a product ad extension. The extension identifies a Bing Merchant Center store that contains the products that you want to advertise.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721706(v=msads.90).aspx">ProductAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/jj721706(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductConditionCollection> ProductSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StoreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoreNameField;
        
        /// <summary>
        /// The display name of the extension. The name can contain a maximum of 100 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The list of products from the Bing Merchant Center store to advertise.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductConditionCollection> ProductSelection
        {
            get
            {
                return this.ProductSelectionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductSelectionField, value) != true))
                {
                    this.ProductSelectionField = value;
                    this.RaisePropertyChanged("ProductSelection");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the Bing Merchant Center store contains the products to advertise.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StoreId
        {
            get
            {
                return this.StoreIdField;
            }
            set
            {
                if ((this.StoreIdField.Equals(value) != true))
                {
                    this.StoreIdField = value;
                    this.RaisePropertyChanged("StoreId");
                }
            }
        }
        
        /// <summary>
        /// The name of the store that StoreId identifies. Note: If the customer changes the store's name in Bing Merchant Center, the extension will not be updated with the new name.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoreName
        {
            get
            {
                return this.StoreNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StoreNameField, value) != true))
                {
                    this.StoreNameField = value;
                    this.RaisePropertyChanged("StoreName");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an ad extension that specifies an image with alternative text to include in a text ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766199(v=msads.90).aspx">ImageAdExtension Data Object</see> http://msdn.microsoft.com/en-us/library/dn766199(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageAdExtension", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ImageAdExtension : Microsoft.BingAds.CampaignManagement.AdExtension
    {
        
        private string AlternativeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationUrlField;
        
        private long ImageMediaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<long> ImageMediaIdsField;
        
        /// <summary>
        /// Alternative description of the image media for usability. If the image could not be displayed, the alternative text is used instead.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AlternativeText
        {
            get
            {
                return this.AlternativeTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AlternativeTextField, value) != true))
                {
                    this.AlternativeTextField = value;
                    this.RaisePropertyChanged("AlternativeText");
                }
            }
        }
        
        /// <summary>
        /// Description that can be used by the advertiser, agency, or account manager to track, label, or manage image media. This description is not displayed with the ad or image.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        /// <summary>
        /// The URL of the webpage to take the user to when they click the image.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the image to include in the ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ImageMediaId
        {
            get
            {
                return this.ImageMediaIdField;
            }
            set
            {
                if ((this.ImageMediaIdField.Equals(value) != true))
                {
                    this.ImageMediaIdField = value;
                    this.RaisePropertyChanged("ImageMediaId");
                }
            }
        }
        
        /// <summary>
        /// The identifiers of the images to include in the ad. You may not specify media identifiers for more than one image of the same aspect ratio. In other words each of the referenced images must have different aspect ratios.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<long> ImageMediaIds
        {
            get
            {
                return this.ImageMediaIdsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImageMediaIdsField, value) != true))
                {
                    this.ImageMediaIdsField = value;
                    this.RaisePropertyChanged("ImageMediaIds");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the possible status values of an ad extension.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134386(v=msads.90).aspx">AdExtensionStatus Value Set</see> http://msdn.microsoft.com/en-us/library/jj134386(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtension"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdExtensionStatus : int
    {
        
        /// <summary>
        /// The ad extension is active. You can associate an active ad extension with a campaign or ad group.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The ad extension is deleted. This status is for internal use only. The Get operations will not include deleted extensions.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 1,
    }
    
    /// <summary>
    /// Defines a site link to include in an ad. The link should take the user to content in your website that is relevant in the context of the ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134381(v=msads.90).aspx">SiteLink Data Object</see> http://msdn.microsoft.com/en-us/library/jj134381(v=msads.90).aspx for details.
    /// <para>Used by <see cref="SiteLinksAdExtension"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteLink", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class SiteLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Description1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Description2Field;
        
        private string DestinationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DevicePreferenceField;
        
        private string DisplayTextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The site link description line 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description1
        {
            get
            {
                return this.Description1Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Description1Field, value) != true))
                {
                    this.Description1Field = value;
                    this.RaisePropertyChanged("Description1");
                }
            }
        }
        
        /// <summary>
        /// The site link description line 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description2
        {
            get
            {
                return this.Description2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Description2Field, value) != true))
                {
                    this.Description2Field = value;
                    this.RaisePropertyChanged("Description2");
                }
            }
        }
        
        /// <summary>
        /// The URL of the webpage that users are taken to when they click the site link.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        /// <summary>
        /// This element determines whether the preference is for site links to be displayed on mobile devices or all devices.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<long> DevicePreference
        {
            get
            {
                return this.DevicePreferenceField;
            }
            set
            {
                if ((this.DevicePreferenceField.Equals(value) != true))
                {
                    this.DevicePreferenceField = value;
                    this.RaisePropertyChanged("DevicePreference");
                }
            }
        }
        
        /// <summary>
        /// The site-link text displayed in the ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayText
        {
            get
            {
                return this.DisplayTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true))
                {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a postal address.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721596(v=msads.90).aspx">Address Data Object</see> http://msdn.microsoft.com/en-us/library/jj721596(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationAdExtension"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CityNameField;
        
        private string CountryCodeField;
        
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddress2Field;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The name of the city where the street address is located. The name can contain a maximum of 80 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CityName
        {
            get
            {
                return this.CityNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CityNameField, value) != true))
                {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        /// <summary>
        /// The country where the street address is located. The country code must contain a 2 character country code. For a list of possible country codes that you can specify, see Ad Languages.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true))
                {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        /// <summary>
        /// The postal or zip code. The postal code can contain a maximum of 80 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PostalCode
        {
            get
            {
                return this.PostalCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true))
                {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        /// <summary>
        /// A code that identifies the state or province where the street address is located. For example, WA. The code can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode
        {
            get
            {
                return this.ProvinceCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true))
                {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        /// <summary>
        /// The name of the state or province where the street address is located. For example, Washington. The name can contain a maximum of 50 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName
        {
            get
            {
                return this.ProvinceNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true))
                {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        /// <summary>
        /// The first line of the address. The first line can contain a maximum of 80 characters
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string StreetAddress
        {
            get
            {
                return this.StreetAddressField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true))
                {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        /// <summary>
        /// The second line of the address. The second line can contain a maximum of 80 characters
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress2
        {
            get
            {
                return this.StreetAddress2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.StreetAddress2Field, value) != true))
                {
                    this.StreetAddress2Field = value;
                    this.RaisePropertyChanged("StreetAddress2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains the longitude and latitude coordinates of a geographical location.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721599(v=msads.90).aspx">GeoPoint Data Object</see> http://msdn.microsoft.com/en-us/library/jj721599(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationAdExtension"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoPoint", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class GeoPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int LatitudeInMicroDegreesField;
        
        private int LongitudeInMicroDegreesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The latitude specified in micro degrees. The latitude must be greater than or equal to -85000000 and less than or equal to +85000000.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LatitudeInMicroDegrees
        {
            get
            {
                return this.LatitudeInMicroDegreesField;
            }
            set
            {
                if ((this.LatitudeInMicroDegreesField.Equals(value) != true))
                {
                    this.LatitudeInMicroDegreesField = value;
                    this.RaisePropertyChanged("LatitudeInMicroDegrees");
                }
            }
        }
        
        /// <summary>
        /// The longitude specified in micro degrees. The longitude must be greater than or equal to -180000000 and less than or equal to +180000000.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LongitudeInMicroDegrees
        {
            get
            {
                return this.LongitudeInMicroDegreesField;
            }
            set
            {
                if ((this.LongitudeInMicroDegreesField.Equals(value) != true))
                {
                    this.LongitudeInMicroDegreesField = value;
                    this.RaisePropertyChanged("LongitudeInMicroDegrees");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible status values that indicate the progress of determining the latitude and longitude values of a business.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dd796820(v=msads.90).aspx">BusinessGeoCodeStatus Value Set</see> http://msdn.microsoft.com/en-us/library/dd796820(v=msads.90).aspx for details.
    /// <para>Used by <see cref="LocationAdExtension"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessGeoCodeStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum BusinessGeoCodeStatus : int
    {
        
        /// <summary>
        /// In the process of determining the latitude and longitude of the business.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        /// <summary>
        /// Successfully determined the latitude and longitude of the business.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 1,
        
        /// <summary>
        /// Unable to determine the latitude and longitude of the business, possibly because the address did not resolve.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
        
        /// <summary>
        /// Unable to determine the latitude and longitude of the business.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
    }
    
    /// <summary>
    /// Defines the conditions that determine whether a product from the Bing Merchant Center store gets served as a product ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721704(v=msads.90).aspx">ProductConditionCollection Data Object</see> http://msdn.microsoft.com/en-us/library/jj721704(v=msads.90).aspx for details.
    /// <para>Used by <see cref="ProductAdExtension"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductConditionCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductConditionCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> ConditionsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A list of conditions that determine whether a product from the Bing Merchant Center store gets served as a product ad. You can specify a maximum of 8 conditions. For a product to be served, it must meet all conditions. Note: Conditions may be returned by Bing Ads services in a different order from the order that you submitted.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> Conditions
        {
            get
            {
                return this.ConditionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true))
                {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a condition that determines whether a product is selected from a customer's Bing Merchant Center catalog file.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj721705(v=msads.90).aspx">ProductCondition Data Object</see> http://msdn.microsoft.com/en-us/library/jj721705(v=msads.90).aspx for details.
    /// <para>Used by <see cref="Product"/>, <see cref="ProductConditionCollection"/>, <see cref="ProductPartition"/> and <see cref="ProductScope"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCondition", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperandField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The condition's attribute value.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribute
        {
            get
            {
                return this.AttributeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AttributeField, value) != true))
                {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        /// <summary>
        /// The condition's operand. The operands implicitly include the equal operator. For example, read Brand as Brand=.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operand
        {
            get
            {
                return this.OperandField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OperandField, value) != true))
                {
                    this.OperandField = value;
                    this.RaisePropertyChanged("Operand");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that identifies an ad extension revision.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134392(v=msads.90).aspx">AdExtensionIdentity Data Object</see> http://msdn.microsoft.com/en-us/library/jj134392(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdExtensions">AddAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionIdentity", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VersionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The number of times the contents of the ad extension has been updated. The version is set to 1 when you add the extension and is incremented each time it's revised.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                if ((this.VersionField.Equals(value) != true))
                {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible ad extension types.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134394(v=msads.90).aspx">AdExtensionsTypeFilter Value Set</see> http://msdn.microsoft.com/en-us/library/jj134394(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionIdsByAccountId">GetAdExtensionIdsByAccountId</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionsAssociations">GetAdExtensionsAssociations</see> and <see cref="CampaignManagementServiceClient.GetAdExtensionsByIds">GetAdExtensionsByIds</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionsTypeFilter", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdExtensionsTypeFilter : int
    {
        
        /// <summary>
        /// An ad extension that contains one or more site links to include in an ad. For more information, see SiteLinksAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteLinksAdExtension = 1,
        
        /// <summary>
        /// An ad extension that contains the address and phone number of the business to include an ad. For more information, see LocationAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationAdExtension = 2,
        
        /// <summary>
        /// An ad extension that contains a phone number to include in the ad and whether it's the only clickable item in an ad. For more information, see CallAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallAdExtension = 4,
        
        /// <summary>
        /// An ad extension that identifies a Bing Merchant Center store that contains the products that you want to advertise. The delivery engine generates the ad's contents based on the product details that it finds in the Bing Merchant Center store. For more information, see ProductAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductsAdExtension = 8,
        
        /// <summary>
        /// An ad extension that contains an image with alternative text to include in the ad. For more information, see ImageAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageAdExtension = 16,
        
        /// <summary>
        /// An ad extension that contains a link to install an application from a supported app store. For more information, see AppAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppAdExtension = 32,
    }
    
    /// <summary>
    /// Defines an object that associates an ad extension to a supported entity, for example ad group or campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn249980(v=msads.90).aspx">AdExtensionIdToEntityIdAssociation Data Object</see> http://msdn.microsoft.com/en-us/library/dn249980(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensionsAssociations">DeleteAdExtensionsAssociations</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionsEditorialReasons">GetAdExtensionsEditorialReasons</see> and <see cref="CampaignManagementServiceClient.SetAdExtensionsAssociations">SetAdExtensionsAssociations</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionIdToEntityIdAssociation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionIdToEntityIdAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long AdExtensionIdField;
        
        private long EntityIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long AdExtensionId
        {
            get
            {
                return this.AdExtensionIdField;
            }
            set
            {
                if ((this.AdExtensionIdField.Equals(value) != true))
                {
                    this.AdExtensionIdField = value;
                    this.RaisePropertyChanged("AdExtensionId");
                }
            }
        }
        
        /// <summary>
        /// The identifier of an entity associated with the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long EntityId
        {
            get
            {
                return this.EntityIdField;
            }
            set
            {
                if ((this.EntityIdField.Equals(value) != true))
                {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the entity type or types associated with an ad extension.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn249973(v=msads.90).aspx">AssociationType Value Set</see> http://msdn.microsoft.com/en-us/library/dn249973(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtensionAssociation"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensionsAssociations">DeleteAdExtensionsAssociations</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionIdsByAccountId">GetAdExtensionIdsByAccountId</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionsAssociations">GetAdExtensionsAssociations</see>, <see cref="CampaignManagementServiceClient.GetAdExtensionsEditorialReasons">GetAdExtensionsEditorialReasons</see> and <see cref="CampaignManagementServiceClient.SetAdExtensionsAssociations">SetAdExtensionsAssociations</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociationType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AssociationType : int
    {
        
        /// <summary>
        /// Specifies ad extension associations with campaigns.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Campaign = 1,
        
        /// <summary>
        /// Specifies ad extension associations with ad groups.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdGroup = 2,
    }
    
    /// <summary>
    /// Defines a collection of ad extensions that failed editorial review.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134393(v=msads.90).aspx">AdExtensionEditorialReasonCollection Data Object</see> http://msdn.microsoft.com/en-us/library/jj134393(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsEditorialReasons">GetAdExtensionsEditorialReasons</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionEditorialReasonCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionEditorialReasonCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdExtensionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialReason> ReasonsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the ad extension that failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdExtensionId
        {
            get
            {
                return this.AdExtensionIdField;
            }
            set
            {
                if ((this.AdExtensionIdField.Equals(value) != true))
                {
                    this.AdExtensionIdField = value;
                    this.RaisePropertyChanged("AdExtensionId");
                }
            }
        }
        
        /// <summary>
        /// A list of AdExtensionEditorialReason objects that identify the component of an ad extension that failed editorial review, and the reason for the failure.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialReason> Reasons
        {
            get
            {
                return this.ReasonsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReasonsField, value) != true))
                {
                    this.ReasonsField = value;
                    this.RaisePropertyChanged("Reasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that you can use to determine the component of an ad extension that failed editorial review, and the reason for the failure.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj134398(v=msads.90).aspx">AdExtensionEditorialReason Data Object</see> http://msdn.microsoft.com/en-us/library/jj134398(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtensionEditorialReasonCollection"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionEditorialReason", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionEditorialReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<string> PublisherCountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The component of the ad extension that failed editorial review. Note: The updated list of possible values will be published in an upcoming release.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        /// <summary>
        /// The list of publisher countries whose editorial guidelines do not allow the specified term.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<string> PublisherCountries
        {
            get
            {
                return this.PublisherCountriesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PublisherCountriesField, value) != true))
                {
                    this.PublisherCountriesField = value;
                    this.RaisePropertyChanged("PublisherCountries");
                }
            }
        }
        
        /// <summary>
        /// A code that identifies the reason for the failure. For a list of possible reason codes, see Editorial Failure Reason Codes.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonCode
        {
            get
            {
                return this.ReasonCodeField;
            }
            set
            {
                if ((this.ReasonCodeField.Equals(value) != true))
                {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        /// <summary>
        /// The term that failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term
        {
            get
            {
                return this.TermField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TermField, value) != true))
                {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an array of objects that associate an ad extension and its editorial status to a supported entity, for example ad group or campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn250010(v=msads.90).aspx">AdExtensionAssociationCollection Data Object</see> http://msdn.microsoft.com/en-us/library/dn250010(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsAssociations">GetAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionAssociationCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionAssociationCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionAssociation> AdExtensionAssociationsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// An array of objects that associate an ad extension and its editorial status to a supported entity, for example ad group or campaign.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionAssociation> AdExtensionAssociations
        {
            get
            {
                return this.AdExtensionAssociationsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AdExtensionAssociationsField, value) != true))
                {
                    this.AdExtensionAssociationsField = value;
                    this.RaisePropertyChanged("AdExtensionAssociations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that associates an ad extension and its editorial status to a supported entity, for example ad group or campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn250012(v=msads.90).aspx">AdExtensionAssociation Data Object</see> http://msdn.microsoft.com/en-us/library/dn250012(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtensionAssociationCollection"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionAssociation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdExtensionAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Microsoft.BingAds.CampaignManagement.AdExtension AdExtensionField;
        
        private Microsoft.BingAds.CampaignManagement.AssociationType AssociationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialStatus> EditorialStatusField;
        
        private long EntityIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The ad extension associated with a supported entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.AdExtension AdExtension
        {
            get
            {
                return this.AdExtensionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AdExtensionField, value) != true))
                {
                    this.AdExtensionField = value;
                    this.RaisePropertyChanged("AdExtension");
                }
            }
        }
        
        /// <summary>
        /// The type of entity associated with the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.AssociationType AssociationType
        {
            get
            {
                return this.AssociationTypeField;
            }
            set
            {
                if ((this.AssociationTypeField.Equals(value) != true))
                {
                    this.AssociationTypeField = value;
                    this.RaisePropertyChanged("AssociationType");
                }
            }
        }
        
        /// <summary>
        /// The editorial status of the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialStatus> EditorialStatus
        {
            get
            {
                return this.EditorialStatusField;
            }
            set
            {
                if ((this.EditorialStatusField.Equals(value) != true))
                {
                    this.EditorialStatusField = value;
                    this.RaisePropertyChanged("EditorialStatus");
                }
            }
        }
        
        /// <summary>
        /// The identifier of an entity associated with the ad extension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long EntityId
        {
            get
            {
                return this.EntityIdField;
            }
            set
            {
                if ((this.EntityIdField.Equals(value) != true))
                {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the editorial review status values of an ad extension.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn249989(v=msads.90).aspx">AdExtensionEditorialStatus Value Set</see> http://msdn.microsoft.com/en-us/library/dn249989(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdExtensionAssociation"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdExtensionEditorialStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdExtensionEditorialStatus : int
    {
        
        /// <summary>
        /// The ad extension passed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The ad extension failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disapproved = 1,
        
        /// <summary>
        /// One or more elements of the ad extension is undergoing editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        /// <summary>
        /// The ad extension passed editorial review in one or more markets, and one or more elements of the ad extension is undergoing editorial review in another market. For example the ad extension passed editorial review for Canada and is still pending review in the United States.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveLimited = 3,
    }
    
    /// <summary>
    /// Defines the base object of media.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn195580(v=msads.90).aspx">Media Data Object</see> http://msdn.microsoft.com/en-us/library/dn195580(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddMedia">AddMedia</see> and <see cref="CampaignManagementServiceClient.GetMediaByIds">GetMediaByIds</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.Image))]
    public partial class Media : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaTypeField;
        
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system generated identifier of the media.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// This read-only element is the name of the media subclass. For example, when retrieving an Image, the MediaType is Image.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType
        {
            get
            {
                return this.MediaTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true))
                {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        /// <summary>
        /// The type of media to add to the library.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an image object that can be added to an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn195581(v=msads.90).aspx">Image Data Object</see> http://msdn.microsoft.com/en-us/library/dn195581(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Image : Microsoft.BingAds.CampaignManagement.Media
    {
        
        private string DataField;
        
        /// <summary>
        /// A base64 string that represents the image or icon to add to the library. The base64 string can contain a maximum of 102,400 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataField, value) != true))
                {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the possible values representing entities that are enabled for media such as images.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766195(v=msads.90).aspx">MediaEnabledEntityFilter Value Set</see> http://msdn.microsoft.com/en-us/library/dn766195(v=msads.90).aspx for details.
    /// <para>Used by <see cref="MediaAssociation"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaAssociations">GetMediaAssociations</see> and <see cref="CampaignManagementServiceClient.GetMediaMetaDataByAccountId">GetMediaMetaDataByAccountId</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaEnabledEntityFilter", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum MediaEnabledEntityFilter : int
    {
        
        /// <summary>
        /// The media enabled entity is an ImageAdExtension.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageAdExtension = 1,
    }
    
    /// <summary>
    /// Defines a media meta data object. The meta data includes download Urls for one or more media representations.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766198(v=msads.90).aspx">MediaMetaData Data Object</see> http://msdn.microsoft.com/en-us/library/dn766198(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaMetaDataByAccountId">GetMediaMetaDataByAccountId</see> and <see cref="CampaignManagementServiceClient.GetMediaMetaDataByIds">GetMediaMetaDataByIds</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaMetaData", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MediaMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaRepresentation> RepresentationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system identifier of the media meta data.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The name of the media subclass.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType
        {
            get
            {
                return this.MediaTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true))
                {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        /// <summary>
        /// An array of MediaRepresentation-derived objects, for example ImageMediaRepresentation, that each include download Urls for one or more media representations. The number of representations depends on the type of media. For example media for image ad extensions have multiple height and width representations, and you can access each individually. For more information see MediaEnabledEntityFilter.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaRepresentation> Representations
        {
            get
            {
                return this.RepresentationsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RepresentationsField, value) != true))
                {
                    this.RepresentationsField = value;
                    this.RaisePropertyChanged("Representations");
                }
            }
        }
        
        /// <summary>
        /// The type of media in the library.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a media representation base class that includes a media download Url.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766194(v=msads.90).aspx">MediaRepresentation Data Object</see> http://msdn.microsoft.com/en-us/library/dn766194(v=msads.90).aspx for details.
    /// <para>Used by <see cref="MediaMetaData"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaRepresentation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ImageMediaRepresentation))]
    public partial class MediaRepresentation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The name of the media representation.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The type of the media representation, for example ImageMediaRepresentation.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        /// <summary>
        /// The media download URL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url
        {
            get
            {
                return this.UrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UrlField, value) != true))
                {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an image media representation with height and width.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766197(v=msads.90).aspx">ImageMediaRepresentation Data Object</see> http://msdn.microsoft.com/en-us/library/dn766197(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageMediaRepresentation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ImageMediaRepresentation : Microsoft.BingAds.CampaignManagement.MediaRepresentation
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        /// <summary>
        /// The height of the image in pixels. For more information, see Remarks below.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                if ((this.HeightField.Equals(value) != true))
                {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        /// <summary>
        /// The width of the image in pixels. For more information, see Remarks below.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                if ((this.WidthField.Equals(value) != true))
                {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an object that represents the identified media and an associated entity, for example media associated with an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn798358(v=msads.90).aspx">MediaAssociation Data Object</see> http://msdn.microsoft.com/en-us/library/dn798358(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaAssociations">GetMediaAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaAssociation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class MediaAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MediaIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system identifier of the media enabled entity, for example the identifier of an ImageAdExtension.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId
        {
            get
            {
                return this.EntityIdField;
            }
            set
            {
                if ((this.EntityIdField.Equals(value) != true))
                {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        /// <summary>
        /// Determines the type of media to get. Currently only ImageAdExtension is supported.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntity
        {
            get
            {
                return this.MediaEnabledEntityField;
            }
            set
            {
                if ((this.MediaEnabledEntityField.Equals(value) != true))
                {
                    this.MediaEnabledEntityField = value;
                    this.RaisePropertyChanged("MediaEnabledEntity");
                }
            }
        }
        
        /// <summary>
        /// The system identifier of the media.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MediaId
        {
            get
            {
                return this.MediaIdField;
            }
            set
            {
                if ((this.MediaIdField.Equals(value) != true))
                {
                    this.MediaIdField = value;
                    this.RaisePropertyChanged("MediaId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible types of ad group criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689543(v=msads.90).aspx">CriterionType Value Set</see> http://msdn.microsoft.com/en-us/library/jj689543(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroupCriterions">AddAdGroupCriterions</see>, <see cref="CampaignManagementServiceClient.DeleteAdGroupCriterions">DeleteAdGroupCriterions</see>, <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByAdGroupId">GetAdGroupCriterionsByAdGroupId</see>, <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByIds">GetAdGroupCriterionsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateAdGroupCriterions">UpdateAdGroupCriterions</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriterionType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum CriterionType : int
    {
        
        /// <summary>
        /// The ad group criterion represents a Bing Merchant Center product.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Product = 1,
        
        /// <summary>
        /// The ad group criterion represents a Bing Shopping product partition.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductPartition = 2,
    }
    
    /// <summary>
    /// Defines the base class of an ad group criterion.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj738614(v=msads.90).aspx">AdGroupCriterion Data Object</see> http://msdn.microsoft.com/en-us/library/jj738614(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroupCriterionAction"/> data object.</para>
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroupCriterions">AddAdGroupCriterions</see>, <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByAdGroupId">GetAdGroupCriterionsByAdGroupId</see>, <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByIds">GetAdGroupCriterionsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateAdGroupCriterions">UpdateAdGroupCriterions</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupCriterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.NegativeAdGroupCriterion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.BiddableAdGroupCriterion))]
    public partial class AdGroupCriterion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Criterion CriterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupCriterionStatus> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The identifier of the ad group to apply the criterion to.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdGroupId
        {
            get
            {
                return this.AdGroupIdField;
            }
            set
            {
                if ((this.AdGroupIdField.Equals(value) != true))
                {
                    this.AdGroupIdField = value;
                    this.RaisePropertyChanged("AdGroupId");
                }
            }
        }
        
        /// <summary>
        /// The criterion to apply to the ad group. The criterion helps determine whether ads in the ad group are served.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Criterion Criterion
        {
            get
            {
                return this.CriterionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CriterionField, value) != true))
                {
                    this.CriterionField = value;
                    this.RaisePropertyChanged("Criterion");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier that identifies this ad group criterion.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// A status value that determines whether to apply the criterion to the ad group.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupCriterionStatus> Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// The type of ad group criterion. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the base object of a criterion.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj738613(v=msads.90).aspx">Criterion Data Object</see> http://msdn.microsoft.com/en-us/library/jj738613(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroupCriterion"/> and <see cref="CampaignCriterion"/> data objects.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Criterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ProductScope))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.Product))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.ProductPartition))]
    public partial class Criterion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The type of criterion. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a negative ad group criterion that can be used to abstain from bidding on the Bing Shopping products in this ad group. You can still bid on these products in any other ad group in the same campaign, and within ad groups of lower priority campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913133(v=msads.90).aspx">NegativeAdGroupCriterion Data Object</see> http://msdn.microsoft.com/en-us/library/dn913133(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NegativeAdGroupCriterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NegativeAdGroupCriterion : Microsoft.BingAds.CampaignManagement.AdGroupCriterion
    {
    }
    
    /// <summary>
    /// Defines the conditions that determine whether product ads in the ad group get served. If the conditions are met, the specified bid is used in the auction.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689538(v=msads.90).aspx">BiddableAdGroupCriterion Data Object</see> http://msdn.microsoft.com/en-us/library/jj689538(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiddableAdGroupCriterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class BiddableAdGroupCriterion : Microsoft.BingAds.CampaignManagement.AdGroupCriterion
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.CriterionBid CriterionBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupCriterionEditorialStatus> EditorialStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param3Field;
        
        /// <summary>
        /// The bid to use in the auction.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.CriterionBid CriterionBid
        {
            get
            {
                return this.CriterionBidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CriterionBidField, value) != true))
                {
                    this.CriterionBidField = value;
                    this.RaisePropertyChanged("CriterionBid");
                }
            }
        }
        
        /// <summary>
        /// The URL of the webpage that the user is taken to when they click the ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationUrl
        {
            get
            {
                return this.DestinationUrlField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationUrlField, value) != true))
                {
                    this.DestinationUrlField = value;
                    this.RaisePropertyChanged("DestinationUrl");
                }
            }
        }
        
        /// <summary>
        /// The criterion's editorial review status. The status indicates whether the criterion is pending review, has been approved, or has been disapproved.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AdGroupCriterionEditorialStatus> EditorialStatus
        {
            get
            {
                return this.EditorialStatusField;
            }
            set
            {
                if ((this.EditorialStatusField.Equals(value) != true))
                {
                    this.EditorialStatusField = value;
                    this.RaisePropertyChanged("EditorialStatus");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value if DestinationUrl contains {Param1: default}.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param1
        {
            get
            {
                return this.Param1Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param1Field, value) != true))
                {
                    this.Param1Field = value;
                    this.RaisePropertyChanged("Param1");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value if DestinationUrl contains {Param2: default}.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param2
        {
            get
            {
                return this.Param2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param2Field, value) != true))
                {
                    this.Param2Field = value;
                    this.RaisePropertyChanged("Param2");
                }
            }
        }
        
        /// <summary>
        /// The string to use as the substitution value if DestinationUrl contains {Param3: default}.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param3
        {
            get
            {
                return this.Param3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Param3Field, value) != true))
                {
                    this.Param3Field = value;
                    this.RaisePropertyChanged("Param3");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the possible status values that determine whether to apply the criterion to the ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689542(v=msads.90).aspx">AdGroupCriterionStatus Value Set</see> http://msdn.microsoft.com/en-us/library/jj689542(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroupCriterion"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupCriterionStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdGroupCriterionStatus : int
    {
        
        /// <summary>
        /// Apply the criterion to the ad group.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// Do not apply the criterion to the ad group.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 1,
        
        /// <summary>
        /// The criterion was deleted. Note that the Get operations will not return deleted objects.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
    }
    
    /// <summary>
    /// Defines a campaign level product scope with list of conditions that help determine whether a product from the Bing Merchant Center store gets served as a product ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913124(v=msads.90).aspx">ProductScope Data Object</see> http://msdn.microsoft.com/en-us/library/dn913124(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductScope", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductScope : Microsoft.BingAds.CampaignManagement.Criterion
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> ConditionsField;
        
        /// <summary>
        /// A list of up to 7 product conditions that helps determine whether a product from the Bing Merchant Center store gets served as an ad. Note: Conditions may be returned by Bing Ads services in a different order from the order that you submitted.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> Conditions
        {
            get
            {
                return this.ConditionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true))
                {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a campaign level product criterion, which includes a list of conditions that determine whether a product from the Bing Merchant Center store gets served as a product ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689539(v=msads.90).aspx">Product Data Object</see> http://msdn.microsoft.com/en-us/library/jj689539(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class Product : Microsoft.BingAds.CampaignManagement.Criterion
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> ConditionsField;
        
        /// <summary>
        /// A list of conditions that determine whether a product from the Bing Merchant Center store gets served as a product ad. You can specify a maximum of 3 conditions. For a product to be served, it must meet all conditions.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.ProductCondition> Conditions
        {
            get
            {
                return this.ConditionsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true))
                {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines an ad group level product partition with one condition that helps determine whether a product from the Bing Merchant Center store gets served as a product ad.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913123(v=msads.90).aspx">ProductPartition Data Object</see> http://msdn.microsoft.com/en-us/library/dn913123(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductPartition", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class ProductPartition : Microsoft.BingAds.CampaignManagement.Criterion
    {
        
        private Microsoft.BingAds.CampaignManagement.ProductCondition ConditionField;
        
        private System.Nullable<long> ParentCriterionIdField;
        
        private Microsoft.BingAds.CampaignManagement.ProductPartitionType PartitionTypeField;
        
        /// <summary>
        /// A condition that helps determine whether a product from the Bing Merchant Center store gets served as an ad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.ProductCondition Condition
        {
            get
            {
                return this.ConditionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConditionField, value) != true))
                {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the parent BiddableAdGroupCriterion or NegativeAdGroupCriterion. Note: This element must be set to null if the product partition represents the root node of a product partition tree.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> ParentCriterionId
        {
            get
            {
                return this.ParentCriterionIdField;
            }
            set
            {
                if ((this.ParentCriterionIdField.Equals(value) != true))
                {
                    this.ParentCriterionIdField = value;
                    this.RaisePropertyChanged("ParentCriterionId");
                }
            }
        }
        
        /// <summary>
        /// The type of product partition, for example Subdivision or Unit.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.ProductPartitionType PartitionType
        {
            get
            {
                return this.PartitionTypeField;
            }
            set
            {
                if ((this.PartitionTypeField.Equals(value) != true))
                {
                    this.PartitionTypeField = value;
                    this.RaisePropertyChanged("PartitionType");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the possible types of product partitions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913120(v=msads.90).aspx">ProductPartitionType Value Set</see> http://msdn.microsoft.com/en-us/library/dn913120(v=msads.90).aspx for details.
    /// <para>Used by <see cref="ProductPartition"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductPartitionType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum ProductPartitionType : int
    {
        
        /// <summary>
        /// The ProductPartition is a product group subdivision. A subdivision is also referred to as a branch node in a tree.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Subdivision = 1,
        
        /// <summary>
        /// The ProductPartition is a product group unit. A unit is also referred to as a leaf node in a tree.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unit = 2,
    }
    
    /// <summary>
    /// Defines a base class for criterion bids.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689540(v=msads.90).aspx">CriterionBid Data Object</see> http://msdn.microsoft.com/en-us/library/jj689540(v=msads.90).aspx for details.
    /// <para>Used by <see cref="BiddableAdGroupCriterion"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriterionBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.FixedBid))]
    public partial class CriterionBid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The type of criterion bid. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the editorial review status values of an ad group criterion.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn195643(v=msads.90).aspx">AdGroupCriterionEditorialStatus Value Set</see> http://msdn.microsoft.com/en-us/library/dn195643(v=msads.90).aspx for details.
    /// <para>Used by <see cref="BiddableAdGroupCriterion"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupCriterionEditorialStatus", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum AdGroupCriterionEditorialStatus : int
    {
        
        /// <summary>
        /// The criterion passed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        /// <summary>
        /// The criterion failed editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disapproved = 1,
        
        /// <summary>
        /// The criterion is undergoing editorial review.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        /// <summary>
        /// The criterion passed editorial review in one or more markets, and one or more elements of the criterion is undergoing editorial review in another market. For example the criterion passed editorial review for Canada and is still pending review in the United States.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveLimited = 3,
    }
    
    /// <summary>
    /// Defines the monetary bid to use in the auction.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/jj689541(v=msads.90).aspx">FixedBid Data Object</see> http://msdn.microsoft.com/en-us/library/jj689541(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FixedBid", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class FixedBid : Microsoft.BingAds.CampaignManagement.CriterionBid
    {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Bid BidField;
        
        /// <summary>
        /// The amount to bid in the auction.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Bid Bid
        {
            get
            {
                return this.BidField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BidField, value) != true))
                {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the action to apply to a BiddableAdGroupCriterion or NegativeAdGroupCriterion, specifically one that contains a ProductPartition. You can send a group of AdGroupCriterionAction objects, also known as a product group, to the ApplyProductPartitionActions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913128(v=msads.90).aspx">AdGroupCriterionAction Data Object</see> http://msdn.microsoft.com/en-us/library/dn913128(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.ApplyProductPartitionActions">ApplyProductPartitionActions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdGroupCriterionAction", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class AdGroupCriterionAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Microsoft.BingAds.CampaignManagement.ItemAction ActionField;
        
        private Microsoft.BingAds.CampaignManagement.AdGroupCriterion AdGroupCriterionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The action to be applied for the AdGroupCriterion.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.ItemAction Action
        {
            get
            {
                return this.ActionField;
            }
            set
            {
                if ((this.ActionField.Equals(value) != true))
                {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        /// <summary>
        /// The ad group criterion of either type BiddableAdGroupCriterion or NegativeAdGroupCriterion, which contains a ProductPartition and FixedBid.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.AdGroupCriterion AdGroupCriterion
        {
            get
            {
                return this.AdGroupCriterionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AdGroupCriterionField, value) != true))
                {
                    this.AdGroupCriterionField = value;
                    this.RaisePropertyChanged("AdGroupCriterion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the possible types of item actions, for example to add, delete, or update the BiddableAdGroupCriterion or NegativeAdGroupCriterion, specifically one that contains a ProductPartition.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913119(v=msads.90).aspx">ItemAction Value Set</see> http://msdn.microsoft.com/en-us/library/dn913119(v=msads.90).aspx for details.
    /// <para>Used by <see cref="AdGroupCriterionAction"/> data object.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemAction", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum ItemAction : int
    {
        
        /// <summary>
        /// The requested action is to add the item, for example add the ProductPartition.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 1,
        
        /// <summary>
        /// The requested action is to delete the item, for example delete the ProductPartition.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 2,
        
        /// <summary>
        /// The requested action is to update the item, for example update the ProductPartition.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 3,
    }
    
    /// <summary>
    /// Defines a Bing Merchant Center store.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn411606(v=msads.90).aspx">BMCStore Data Object</see> http://msdn.microsoft.com/en-us/library/dn411606(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetBMCStoresByCustomerId">GetBMCStoresByCustomerId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BMCStore", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class BMCStore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProductAdsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Value will be true if the store has a catalog of items, and otherwise the value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCatalog
        {
            get
            {
                return this.HasCatalogField;
            }
            set
            {
                if ((this.HasCatalogField.Equals(value) != true))
                {
                    this.HasCatalogField = value;
                    this.RaisePropertyChanged("HasCatalog");
                }
            }
        }
        
        /// <summary>
        /// The unique identifier for the Bing Merchant Center store.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Value will be true if the store is active, and otherwise the value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                if ((this.IsActiveField.Equals(value) != true))
                {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        /// <summary>
        /// Value will be true if the store is enabled for product ads in Bing Ads, and otherwise the value is false.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProductAdsEnabled
        {
            get
            {
                return this.IsProductAdsEnabledField;
            }
            set
            {
                if ((this.IsProductAdsEnabledField.Equals(value) != true))
                {
                    this.IsProductAdsEnabledField = value;
                    this.RaisePropertyChanged("IsProductAdsEnabled");
                }
            }
        }
        
        /// <summary>
        /// Defines the name of the store as defined in the Bing Merchant Center.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains a set of negative keywords that are only associated with the corresponding entity such as a campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743733(v=msads.90).aspx">EntityNegativeKeyword Data Object</see> http://msdn.microsoft.com/en-us/library/dn743733(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddNegativeKeywordsToEntities">AddNegativeKeywordsToEntities</see>, <see cref="CampaignManagementServiceClient.DeleteNegativeKeywordsFromEntities">DeleteNegativeKeywordsFromEntities</see> and <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByEntityIds">GetNegativeKeywordsByEntityIds</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityNegativeKeyword", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class EntityNegativeKeyword : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long EntityIdField;
        
        private string EntityTypeField;
        
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.NegativeKeyword> NegativeKeywordsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system-generated identifier of a campaign or ad group that is associated with the negative keywords.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long EntityId
        {
            get
            {
                return this.EntityIdField;
            }
            set
            {
                if ((this.EntityIdField.Equals(value) != true))
                {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        /// <summary>
        /// The type of entity such as a campaign that is associated with the negative keywords.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EntityType
        {
            get
            {
                return this.EntityTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true))
                {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        /// <summary>
        /// An array of negative keywords that are associated with the corresponding campaign or ad group.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.NegativeKeyword> NegativeKeywords
        {
            get
            {
                return this.NegativeKeywordsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NegativeKeywordsField, value) != true))
                {
                    this.NegativeKeywordsField = value;
                    this.RaisePropertyChanged("NegativeKeywords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines a negative keyword with match type. A negative keyword can be added and deleted, but cannot be updated.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743739(v=msads.90).aspx">NegativeKeyword Data Object</see> http://msdn.microsoft.com/en-us/library/dn743739(v=msads.90).aspx for details.
    /// <para>Used by <see cref="EntityNegativeKeyword"/> data object.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NegativeKeyword", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NegativeKeyword : Microsoft.BingAds.CampaignManagement.SharedListItem
    {
        
        private System.Nullable<long> IdField;
        
        private Microsoft.BingAds.CampaignManagement.MatchType MatchTypeField;
        
        private string TextField;
        
        /// <summary>
        /// The system-generated identifier of the negative keyword.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The type of match to compare the negative keyword and the user's search term.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.BingAds.CampaignManagement.MatchType MatchType
        {
            get
            {
                return this.MatchTypeField;
            }
            set
            {
                if ((this.MatchTypeField.Equals(value) != true))
                {
                    this.MatchTypeField = value;
                    this.RaisePropertyChanged("MatchType");
                }
            }
        }
        
        /// <summary>
        /// The negative keyword text. The text can contain a maximum of 100 characters.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TextField, value) != true))
                {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines the base class of a shared list item.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743738(v=msads.90).aspx">SharedListItem Data Object</see> http://msdn.microsoft.com/en-us/library/dn743738(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddListItemsToSharedList">AddListItemsToSharedList</see>, <see cref="CampaignManagementServiceClient.AddSharedEntity">AddSharedEntity</see> and <see cref="CampaignManagementServiceClient.GetListItemsBySharedList">GetListItemsBySharedList</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedListItem", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.NegativeKeyword))]
    public partial class SharedListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the SharedListItem object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The type of the shared list item. Currently the only supported value is NegativeKeyword. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an object that contains a list of identifiers, for example negative keyword identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743736(v=msads.90).aspx">IdCollection Data Object</see> http://msdn.microsoft.com/en-us/library/dn743736(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddNegativeKeywordsToEntities">AddNegativeKeywordsToEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class IdCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<long> IdsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A list of identifiers, for example negative keyword identifiers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<long> Ids
        {
            get
            {
                return this.IdsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.IdsField, value) != true))
                {
                    this.IdsField = value;
                    this.RaisePropertyChanged("Ids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines an error object that contains batch error details for the top level list index and a list of batch errors corresponding to the nested list index. For example in the NestedPartialErrors response element for AddNegativeKeywordsToEntities, the top level list index corresponds to the campaign or ad group index identifier. The nested list of batch errors would include any errors specific to the negative keywords that you attempted to add to the campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743731(v=msads.90).aspx">BatchErrorCollection Data Object</see> http://msdn.microsoft.com/en-us/library/dn743731(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaignCriterions">AddCampaignCriterions</see>, <see cref="CampaignManagementServiceClient.AddNegativeKeywordsToEntities">AddNegativeKeywordsToEntities</see>, <see cref="CampaignManagementServiceClient.DeleteNegativeKeywordsFromEntities">DeleteNegativeKeywordsFromEntities</see> and <see cref="CampaignManagementServiceClient.UpdateCampaignCriterions">UpdateCampaignCriterions</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchErrorCollection", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class BatchErrorCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// A list of batch errors corresponding to the nested list index.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> BatchErrors
        {
            get
            {
                return this.BatchErrorsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BatchErrorsField, value) != true))
                {
                    this.BatchErrorsField = value;
                    this.RaisePropertyChanged("BatchErrors");
                }
            }
        }
        
        /// <summary>
        /// A numeric error code that identifies the error for the top level list index.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                if ((this.CodeField.Equals(value) != true))
                {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        /// <summary>
        /// A message that provides additional details about the batch error for the top level list index. This string can be empty.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details
        {
            get
            {
                return this.DetailsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DetailsField, value) != true))
                {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        /// <summary>
        /// A symbolic string constant that identifies the error for the top level list index.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true))
                {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        /// <summary>
        /// The zero-based top level list index in the request message that failed.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                if ((this.IndexField.Equals(value) != true))
                {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        /// <summary>
        /// A message that describes the error for the top level list index.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the base class of a shared entity.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743735(v=msads.90).aspx">SharedEntity Data Object</see> http://msdn.microsoft.com/en-us/library/dn743735(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSharedEntity">AddSharedEntity</see>, <see cref="CampaignManagementServiceClient.DeleteSharedEntities">DeleteSharedEntities</see>, <see cref="CampaignManagementServiceClient.GetSharedEntitiesByAccountId">GetSharedEntitiesByAccountId</see> and <see cref="CampaignManagementServiceClient.UpdateSharedEntities">UpdateSharedEntities</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedEntity", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.SharedList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.NegativeKeywordList))]
    public partial class SharedEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> AssociationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        private System.Nullable<long> IdField;
        
        private string NameField;
        
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The number of active associations between this object and an entity such as a campaign.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> AssociationCount
        {
            get
            {
                return this.AssociationCountField;
            }
            set
            {
                if ((this.AssociationCountField.Equals(value) != true))
                {
                    this.AssociationCountField = value;
                    this.RaisePropertyChanged("AssociationCount");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for the SharedEntity object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the shared entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The name of the shared entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        /// <summary>
        /// The type of the shared entity. Currently the only supported value is NegativeKeywordList. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the base class of a shared list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743734(v=msads.90).aspx">SharedList Data Object</see> http://msdn.microsoft.com/en-us/library/dn743734(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddListItemsToSharedList">AddListItemsToSharedList</see>, <see cref="CampaignManagementServiceClient.DeleteListItemsFromSharedList">DeleteListItemsFromSharedList</see> and <see cref="CampaignManagementServiceClient.GetListItemsBySharedList">GetListItemsBySharedList</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedList", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.NegativeKeywordList))]
    public partial class SharedList : Microsoft.BingAds.CampaignManagement.SharedEntity
    {
        
        private System.Nullable<int> ItemCountField;
        
        /// <summary>
        /// The number of SharedListItem objects that are added to this shared list.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ItemCount
        {
            get
            {
                return this.ItemCountField;
            }
            set
            {
                if ((this.ItemCountField.Equals(value) != true))
                {
                    this.ItemCountField = value;
                    this.RaisePropertyChanged("ItemCount");
                }
            }
        }
    }
    
    /// <summary>
    /// Defines a negative keyword list. You can add negative keywords to a negative keyword list and associate the list with one or more campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743737(v=msads.90).aspx">NegativeKeywordList Data Object</see> http://msdn.microsoft.com/en-us/library/dn743737(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NegativeKeywordList", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NegativeKeywordList : Microsoft.BingAds.CampaignManagement.SharedList
    {
    }
    
    /// <summary>
    /// Defines an object that contains association information for a campaign and shared entity such as a negative keyword list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743769(v=msads.90).aspx">SharedEntityAssociation Data Object</see> http://msdn.microsoft.com/en-us/library/dn743769(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSharedEntityAssociations">DeleteSharedEntityAssociations</see>, <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsByEntityIds">GetSharedEntityAssociationsByEntityIds</see>, <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsBySharedEntityIds">GetSharedEntityAssociationsBySharedEntityIds</see> and <see cref="CampaignManagementServiceClient.SetSharedEntityAssociations">SetSharedEntityAssociations</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedEntityAssociation", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class SharedEntityAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long EntityIdField;
        
        private string EntityTypeField;
        
        private long SharedEntityIdField;
        
        private string SharedEntityTypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the campaign that is associated with the shared entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long EntityId
        {
            get
            {
                return this.EntityIdField;
            }
            set
            {
                if ((this.EntityIdField.Equals(value) != true))
                {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        /// <summary>
        /// The type of entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EntityType
        {
            get
            {
                return this.EntityTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true))
                {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier of the shared entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long SharedEntityId
        {
            get
            {
                return this.SharedEntityIdField;
            }
            set
            {
                if ((this.SharedEntityIdField.Equals(value) != true))
                {
                    this.SharedEntityIdField = value;
                    this.RaisePropertyChanged("SharedEntityId");
                }
            }
        }
        
        /// <summary>
        /// The type of the shared entity.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SharedEntityType
        {
            get
            {
                return this.SharedEntityTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SharedEntityTypeField, value) != true))
                {
                    this.SharedEntityTypeField = value;
                    this.RaisePropertyChanged("SharedEntityType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignSize", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class CampaignSize : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long CampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long CampaignId
        {
            get
            {
                return this.CampaignIdField;
            }
            set
            {
                if ((this.CampaignIdField.Equals(value) != true))
                {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                if ((this.SizeField.Equals(value) != true))
                {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the base class of a campaign criterion.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913126(v=msads.90).aspx">CampaignCriterion Data Object</see> http://msdn.microsoft.com/en-us/library/dn913126(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaignCriterions">AddCampaignCriterions</see>, <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByCampaignId">GetCampaignCriterionsByCampaignId</see>, <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByIds">GetCampaignCriterionsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateCampaignCriterions">UpdateCampaignCriterions</see> service operations.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignCriterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.BingAds.CampaignManagement.NegativeCampaignCriterion))]
    public partial class CampaignCriterion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BidAdjustmentField;
        
        private long CampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.BingAds.CampaignManagement.Criterion CriterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMapField;
        
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BidAdjustment
        {
            get
            {
                return this.BidAdjustmentField;
            }
            set
            {
                if ((this.BidAdjustmentField.Equals(value) != true))
                {
                    this.BidAdjustmentField = value;
                    this.RaisePropertyChanged("BidAdjustment");
                }
            }
        }
        
        /// <summary>
        /// The identifier of the campaign to apply the criterion to.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long CampaignId
        {
            get
            {
                return this.CampaignIdField;
            }
            set
            {
                if ((this.CampaignIdField.Equals(value) != true))
                {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        /// <summary>
        /// The criterion to apply to the campaign. For example use a criterion of type ProductScope to filter Bing Merchant Center catalog items.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.BingAds.CampaignManagement.Criterion Criterion
        {
            get
            {
                return this.CriterionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CriterionField, value) != true))
                {
                    this.CriterionField = value;
                    this.RaisePropertyChanged("Criterion");
                }
            }
        }
        
        /// <summary>
        /// The list of key and value strings for forward compatibility. This element can be used to avoid otherwise breaking changes when new elements are added in future releases. Note: Forward compatibility changes will be noted here in future releases. There are currently no forward compatibility changes for this object.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>> ForwardCompatibilityMap
        {
            get
            {
                return this.ForwardCompatibilityMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ForwardCompatibilityMapField, value) != true))
                {
                    this.ForwardCompatibilityMapField = value;
                    this.RaisePropertyChanged("ForwardCompatibilityMap");
                }
            }
        }
        
        /// <summary>
        /// The system-generated identifier that identifies this campaign criterion.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The type of campaign criterion. For more information, see Remarks.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    ///  This object is reserved for future use.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913130(v=msads.90).aspx">NegativeCampaignCriterion Data Object</see> http://msdn.microsoft.com/en-us/library/dn913130(v=msads.90).aspx for details.
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NegativeCampaignCriterion", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    [System.SerializableAttribute()]
    public partial class NegativeCampaignCriterion : Microsoft.BingAds.CampaignManagement.CampaignCriterion
    {
    }
    
    /// <summary>
    /// Defines the possible types of campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913131(v=msads.90).aspx">CampaignCriterionType Value Set</see> http://msdn.microsoft.com/en-us/library/dn913131(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaignCriterions">AddCampaignCriterions</see>, <see cref="CampaignManagementServiceClient.DeleteCampaignCriterions">DeleteCampaignCriterions</see>, <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByCampaignId">GetCampaignCriterionsByCampaignId</see>, <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByIds">GetCampaignCriterionsByIds</see> and <see cref="CampaignManagementServiceClient.UpdateCampaignCriterions">UpdateCampaignCriterions</see> service operations.</para>
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CampaignCriterionType", Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
    public enum CampaignCriterionType : int
    {
        
        /// <summary>
        /// The criterion identifies a Bing Merchant Center product filter.
        /// </summary>
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductScope = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", ConfigurationName="Microsoft.BingAds.CampaignManagement.ICampaignManagementService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface ICampaignManagementService
    {
        
        /// <summary>
        /// Adds one or more campaigns to the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the campaigns that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AddCampaignsResponse AddCampaigns(Microsoft.BingAds.CampaignManagement.AddCampaignsRequest request);
        
        /// <summary>
        /// Adds one or more campaigns to the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the campaigns that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddCampaignsResponse> AddCampaignsAsync(Microsoft.BingAds.CampaignManagement.AddCampaignsRequest request);
        
        /// <summary>
        /// Retrieves all the campaigns that exist within a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignsByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByAccountIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByAccountIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByAccountIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdResponse GetCampaignsByAccountId(Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdRequest request);
        
        /// <summary>
        /// Retrieves all the campaigns that exist within a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignsByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByAccountIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdResponse> GetCampaignsByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdRequest request);
        
        /// <summary>
        /// Retrieves the specified campaigns from the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsResponse GetCampaignsByIds(Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the specified campaigns from the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsResponse> GetCampaignsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsRequest request);
        
        /// <summary>
        /// Deletes one or more campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteCampaignsResponse DeleteCampaigns(Microsoft.BingAds.CampaignManagement.DeleteCampaignsRequest request);
        
        /// <summary>
        /// Deletes one or more campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteCampaignsResponse> DeleteCampaignsAsync(Microsoft.BingAds.CampaignManagement.DeleteCampaignsRequest request);
        
        /// <summary>
        /// Updates specified campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.UpdateCampaignsResponse UpdateCampaigns(Microsoft.BingAds.CampaignManagement.UpdateCampaignsRequest request);
        
        /// <summary>
        /// Updates specified campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateCampaignsResponse> UpdateCampaignsAsync(Microsoft.BingAds.CampaignManagement.UpdateCampaignsRequest request);
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByCampaignIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByCampaignIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByCampaignIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsResponse GetNegativeKeywordsByCampaignIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsRequest request);
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByCampaignIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsResponse> GetNegativeKeywordsByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsRequest request);
        
        /// <summary>
        /// Sets the negative keywords of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeKeywordsToCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToCampaignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToCampaignsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToCampaignsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsResponse SetNegativeKeywordsToCampaigns(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsRequest request);
        
        /// <summary>
        /// Sets the negative keywords of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeKeywordsToCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToCampaignsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsResponse> SetNegativeKeywordsToCampaignsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsRequest request);
        
        /// <summary>
        /// Gets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeSitesByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByCampaignIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByCampaignIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByCampaignIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsResponse GetNegativeSitesByCampaignIds(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsRequest request);
        
        /// <summary>
        /// Gets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeSitesByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByCampaignIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsResponse> GetNegativeSitesByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsRequest request);
        
        /// <summary>
        /// Sets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeSitesToCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToCampaignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToCampaignsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToCampaignsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsResponse SetNegativeSitesToCampaigns(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsRequest request);
        
        /// <summary>
        /// Sets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeSitesToCampaigns", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToCampaignsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsResponse> SetNegativeSitesToCampaignsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetConfigValue", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tConfigValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tConfigValueApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tConfigValueAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetConfigValueResponse GetConfigValue(Microsoft.BingAds.CampaignManagement.GetConfigValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetConfigValue", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tConfigValueResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetConfigValueResponse> GetConfigValueAsync(Microsoft.BingAds.CampaignManagement.GetConfigValueRequest request);
        
        /// <summary>
        /// Adds new ad groups to a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the ad groups that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddAdGroupsResponse AddAdGroups(Microsoft.BingAds.CampaignManagement.AddAdGroupsRequest request);
        
        /// <summary>
        /// Adds new ad groups to a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the ad groups that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdGroupsResponse> AddAdGroupsAsync(Microsoft.BingAds.CampaignManagement.AddAdGroupsRequest request);
        
        /// <summary>
        /// Deletes one or more ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteAdGroupsResponse DeleteAdGroups(Microsoft.BingAds.CampaignManagement.DeleteAdGroupsRequest request);
        
        /// <summary>
        /// Deletes one or more ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdGroupsResponse> DeleteAdGroupsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdGroupsRequest request);
        
        /// <summary>
        /// Gets the specified ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsResponse GetAdGroupsByIds(Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsRequest request);
        
        /// <summary>
        /// Gets the specified ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsResponse> GetAdGroupsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsRequest request);
        
        /// <summary>
        /// Gets the ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupsByCampaignId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByCampaignIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByCampaignIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByCampaignIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdResponse GetAdGroupsByCampaignId(Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdRequest request);
        
        /// <summary>
        /// Gets the ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupsByCampaignId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupsByCampaignIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdResponse> GetAdGroupsByCampaignIdAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdRequest request);
        
        /// <summary>
        /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SubmitAdGroupForApproval", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Su" +
            "bmitAdGroupForApprovalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Su" +
            "bmitAdGroupForApprovalApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Su" +
            "bmitAdGroupForApprovalAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalResponse SubmitAdGroupForApproval(Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalRequest request);
        
        /// <summary>
        /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SubmitAdGroupForApproval", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Su" +
            "bmitAdGroupForApprovalResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalResponse> SubmitAdGroupForApprovalAsync(Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalRequest request);
        
        /// <summary>
        /// Updates the specified ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateAdGroupsResponse UpdateAdGroups(Microsoft.BingAds.CampaignManagement.UpdateAdGroupsRequest request);
        
        /// <summary>
        /// Updates the specified ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdGroupsResponse> UpdateAdGroupsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdGroupsRequest request);
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByAdGroupIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByAdGroupIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByAdGroupIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsResponse GetNegativeKeywordsByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsRequest request);
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByAdGroupIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsResponse> GetNegativeKeywordsByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsRequest request);
        
        /// <summary>
        /// Sets the negative keywords of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeKeywordsToAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToAdGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToAdGroupsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToAdGroupsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsResponse SetNegativeKeywordsToAdGroups(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsRequest request);
        
        /// <summary>
        /// Sets the negative keywords of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeKeywordsToAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeKeywordsToAdGroupsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsResponse> SetNegativeKeywordsToAdGroupsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsRequest request);
        
        /// <summary>
        /// Gets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeSitesByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByAdGroupIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByAdGroupIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByAdGroupIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsResponse GetNegativeSitesByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsRequest request);
        
        /// <summary>
        /// Gets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeSitesByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeSitesByAdGroupIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsResponse> GetNegativeSitesByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsRequest request);
        
        /// <summary>
        /// Sets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeSitesToAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToAdGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToAdGroupsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToAdGroupsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsResponse SetNegativeSitesToAdGroups(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsRequest request);
        
        /// <summary>
        /// Sets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetNegativeSitesToAdGroups", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tNegativeSitesToAdGroupsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsResponse> SetNegativeSitesToAdGroupsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsRequest request);
        
        /// <summary>
        /// Adds targets to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddTargetsToLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibraryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibraryApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibraryAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryResponse AddTargetsToLibrary(Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryRequest request);
        
        /// <summary>
        /// Adds targets to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddTargetsToLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibraryResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryResponse> AddTargetsToLibraryAsync(Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryRequest request);
        
        /// <summary>
        /// Updates targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateTargetsInLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibraryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibraryApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibraryAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryResponse UpdateTargetsInLibrary(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryRequest request);
        
        /// <summary>
        /// Updates targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateTargetsInLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibraryResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryResponse> UpdateTargetsInLibraryAsync(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryRequest request);
        
        /// <summary>
        /// Removes targets from your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetsFromLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetsFromLibraryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetsFromLibraryApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetsFromLibraryAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryResponse DeleteTargetsFromLibrary(Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryRequest request);
        
        /// <summary>
        /// Removes targets from your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetsFromLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetsFromLibraryResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryResponse> DeleteTargetsFromLibraryAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryRequest request);
        
        /// <summary>
        /// Retrieves detailed information about all the targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of TargetInfo objects that contain information about the targets in your library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsInfoFromLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsInfoFromLibraryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsInfoFromLibraryApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsInfoFromLibraryAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryResponse GetTargetsInfoFromLibrary(Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryRequest request);
        
        /// <summary>
        /// Retrieves detailed information about all the targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of TargetInfo objects that contain information about the targets in your library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsInfoFromLibrary", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsInfoFromLibraryResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryResponse> GetTargetsInfoFromLibraryAsync(Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the specified targets.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that contains information about the specified targets.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByIdsResponse GetTargetsByIds(Microsoft.BingAds.CampaignManagement.GetTargetsByIdsRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the specified targets.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that contains information about the specified targets.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByIdsResponse> GetTargetsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByIdsRequest request);
        
        /// <summary>
        /// Associates the specified target with the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetTargetToAdGroup", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToAdGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToAdGroupAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToAdGroupApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupResponse SetTargetToAdGroup(Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupRequest request);
        
        /// <summary>
        /// Associates the specified target with the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetTargetToAdGroup", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToAdGroupResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupResponse> SetTargetToAdGroupAsync(Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupRequest request);
        
        /// <summary>
        /// Removes the specified target association for the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetFromAdGroup", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromAdGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromAdGroupApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromAdGroupAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupResponse DeleteTargetFromAdGroup(Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupRequest request);
        
        /// <summary>
        /// Removes the specified target association for the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetFromAdGroup", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromAdGroupResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupResponse> DeleteTargetFromAdGroupAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsResponse GetTargetsByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByAdGroupIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsResponse> GetTargetsByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsRequest request);
        
        /// <summary>
        /// Associates the specified target with the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetTargetToCampaign", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToCampaignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToCampaignAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToCampaignApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.SetTargetToCampaignResponse SetTargetToCampaign(Microsoft.BingAds.CampaignManagement.SetTargetToCampaignRequest request);
        
        /// <summary>
        /// Associates the specified target with the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetTargetToCampaign", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tTargetToCampaignResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetTargetToCampaignResponse> SetTargetToCampaignAsync(Microsoft.BingAds.CampaignManagement.SetTargetToCampaignRequest request);
        
        /// <summary>
        /// Removes the target association for the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetFromCampaign", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromCampaignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromCampaignApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromCampaignAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignResponse DeleteTargetFromCampaign(Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignRequest request);
        
        /// <summary>
        /// Removes the target association for the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteTargetFromCampaign", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteTargetFromCampaignResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignResponse> DeleteTargetFromCampaignAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsResponse GetTargetsByCampaignIds(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsRequest request);
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByCampaignIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsResponse> GetTargetsByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsRequest request);
        
        /// <summary>
        /// Adds the specified Target2 to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddTargetsToLibrary2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibrary2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibrary2AdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibrary2ApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Response AddTargetsToLibrary2(Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Request request);
        
        /// <summary>
        /// Adds the specified Target2 to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddTargetsToLibrary2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dTargetsToLibrary2Response")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Response> AddTargetsToLibrary2Async(Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Request request);
        
        /// <summary>
        /// Updates Target2 objects in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateTargetsInLibrary2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibrary2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibrary2ApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibrary2AdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Response UpdateTargetsInLibrary2(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Request request);
        
        /// <summary>
        /// Updates Target2 objects in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateTargetsInLibrary2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateTargetsInLibrary2Response")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Response> UpdateTargetsInLibrary2Async(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the specified Target2 objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that contains information about the specified targets.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIds2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIds2ApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIds2AdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Response GetTargetsByIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the specified Target2 objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that contains information about the specified targets.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByIds2Response")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Response> GetTargetsByIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByAdGroupIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIds2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIds2ApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIds2AdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Response GetTargetsByAdGroupIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByAdGroupIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByAdGroupIds2Response")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Response> GetTargetsByAdGroupIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByCampaignIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIds2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIds2ApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIds2AdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Response GetTargetsByCampaignIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Request request);
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetsByCampaignIds2", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tTargetsByCampaignIds2Response")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Response> GetTargetsByCampaignIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Request request);
        
        /// <summary>
        /// Adds one or more ads to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddAdsResponse AddAds(Microsoft.BingAds.CampaignManagement.AddAdsRequest request);
        
        /// <summary>
        /// Adds one or more ads to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdsResponse> AddAdsAsync(Microsoft.BingAds.CampaignManagement.AddAdsRequest request);
        
        /// <summary>
        /// Deletes one or more ads in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteAdsResponse DeleteAds(Microsoft.BingAds.CampaignManagement.DeleteAdsRequest request);
        
        /// <summary>
        /// Deletes one or more ads in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdsResponse> DeleteAdsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdsRequest request);
        
        /// <summary>
        /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByEditorialStatus", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByEditorialStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByEditorialStatusAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByEditorialStatusApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusResponse GetAdsByEditorialStatus(Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusRequest request);
        
        /// <summary>
        /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByEditorialStatus", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByEditorialStatusResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusResponse> GetAdsByEditorialStatusAsync(Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusRequest request);
        
        /// <summary>
        /// Retrieves the specified ads from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdsByIdsResponse GetAdsByIds(Microsoft.BingAds.CampaignManagement.GetAdsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the specified ads from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByIdsResponse> GetAdsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the ads that are associated with an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByAdGroupIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByAdGroupIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByAdGroupIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdResponse GetAdsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdRequest request);
        
        /// <summary>
        /// Retrieves the ads that are associated with an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdsByAdGroupIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdResponse> GetAdsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdRequest request);
        
        /// <summary>
        /// Updates the specified ads within a particular ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateAdsResponse UpdateAds(Microsoft.BingAds.CampaignManagement.UpdateAdsRequest request);
        
        /// <summary>
        /// Updates the specified ads within a particular ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdsResponse> UpdateAdsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdsRequest request);
        
        /// <summary>
        /// Adds one or more keywords to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dKeywordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dKeywordsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dKeywordsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddKeywordsResponse AddKeywords(Microsoft.BingAds.CampaignManagement.AddKeywordsRequest request);
        
        /// <summary>
        /// Adds one or more keywords to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dKeywordsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddKeywordsResponse> AddKeywordsAsync(Microsoft.BingAds.CampaignManagement.AddKeywordsRequest request);
        
        /// <summary>
        /// Deletes one or more keywords in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteKeywordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteKeywordsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteKeywordsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteKeywordsResponse DeleteKeywords(Microsoft.BingAds.CampaignManagement.DeleteKeywordsRequest request);
        
        /// <summary>
        /// Deletes one or more keywords in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteKeywordsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteKeywordsResponse> DeleteKeywordsAsync(Microsoft.BingAds.CampaignManagement.DeleteKeywordsRequest request);
        
        /// <summary>
        /// Retrieves the keywords with the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that contains information about the keywords that were retrieved.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByEditorialStatus", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByEditorialStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByEditorialStatusApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByEditorialStatusAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusResponse GetKeywordsByEditorialStatus(Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusRequest request);
        
        /// <summary>
        /// Retrieves the keywords with the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that contains information about the keywords that were retrieved.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByEditorialStatus", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByEditorialStatusResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusResponse> GetKeywordsByEditorialStatusAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusRequest request);
        
        /// <summary>
        /// Retrieves the specified keywords.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsResponse GetKeywordsByIds(Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the specified keywords.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsResponse> GetKeywordsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the keywords for an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByAdGroupIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByAdGroupIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByAdGroupIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdResponse GetKeywordsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdRequest request);
        
        /// <summary>
        /// Retrieves the keywords for an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetKeywordsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tKeywordsByAdGroupIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdResponse> GetKeywordsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdRequest request);
        
        /// <summary>
        /// Updates the keywords within a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateKeywordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateKeywordsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateKeywordsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.UpdateKeywordsResponse UpdateKeywords(Microsoft.BingAds.CampaignManagement.UpdateKeywordsRequest request);
        
        /// <summary>
        /// Updates the keywords within a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateKeywords", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateKeywordsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateKeywordsResponse> UpdateKeywordsAsync(Microsoft.BingAds.CampaignManagement.UpdateKeywordsRequest request);
        
        /// <summary>
        /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AppealEditorialRejections", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "pealEditorialRejectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "pealEditorialRejectionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "pealEditorialRejectionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsResponse AppealEditorialRejections(Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsRequest request);
        
        /// <summary>
        /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AppealEditorialRejections", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "pealEditorialRejectionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsResponse> AppealEditorialRejectionsAsync(Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsRequest request);
        
        /// <summary>
        /// Adds one or more website placement bids to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the website placement bids that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSitePlacementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSitePlacementsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSitePlacementsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddSitePlacementsResponse AddSitePlacements(Microsoft.BingAds.CampaignManagement.AddSitePlacementsRequest request);
        
        /// <summary>
        /// Adds one or more website placement bids to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the website placement bids that were added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSitePlacementsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddSitePlacementsResponse> AddSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.AddSitePlacementsRequest request);
        
        /// <summary>
        /// Deletes one or more website-placement bids from an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSitePlacementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSitePlacementsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSitePlacementsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsResponse DeleteSitePlacements(Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsRequest request);
        
        /// <summary>
        /// Deletes one or more website-placement bids from an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSitePlacementsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsResponse> DeleteSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsRequest request);
        
        /// <summary>
        /// Retrieves the specified website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSitePlacementsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsResponse GetSitePlacementsByIds(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsRequest request);
        
        /// <summary>
        /// Retrieves the specified website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSitePlacementsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsResponse> GetSitePlacementsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsRequest request);
        
        /// <summary>
        /// Retrieves all the website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSitePlacementsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByAdGroupIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByAdGroupIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByAdGroupIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdResponse GetSitePlacementsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdRequest request);
        
        /// <summary>
        /// Retrieves all the website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSitePlacementsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSitePlacementsByAdGroupIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdResponse> GetSitePlacementsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdRequest request);
        
        /// <summary>
        /// Updates one or more website-placement bids in an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSitePlacementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSitePlacementsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSitePlacementsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsResponse UpdateSitePlacements(Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsRequest request);
        
        /// <summary>
        /// Updates one or more website-placement bids in an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateSitePlacements", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSitePlacementsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsResponse> UpdateSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsRequest request);
        
        /// <summary>
        /// Retrieves placement information for the specified URLs.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetPlacementDetailsForUrls", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tPlacementDetailsForUrlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tPlacementDetailsForUrlsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tPlacementDetailsForUrlsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsResponse GetPlacementDetailsForUrls(Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsRequest request);
        
        /// <summary>
        /// Retrieves placement information for the specified URLs.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetPlacementDetailsForUrls", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tPlacementDetailsForUrlsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsResponse> GetPlacementDetailsForUrlsAsync(Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsRequest request);
        
        /// <summary>
        /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetEditorialReasonsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tEditorialReasonsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tEditorialReasonsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tEditorialReasonsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsResponse GetEditorialReasonsByIds(Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsRequest request);
        
        /// <summary>
        /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetEditorialReasonsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tEditorialReasonsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsResponse> GetEditorialReasonsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccountMigrationStatuses", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAccountMigrationStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAccountMigrationStatusesAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAccountMigrationStatusesApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesResponse GetAccountMigrationStatuses(Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccountMigrationStatuses", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAccountMigrationStatusesResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesResponse> GetAccountMigrationStatusesAsync(Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesRequest request);
        
        /// <summary>
        /// Adds one or more ad extensions to an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdExtensionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdExtensionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdExtensionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddAdExtensionsResponse AddAdExtensions(Microsoft.BingAds.CampaignManagement.AddAdExtensionsRequest request);
        
        /// <summary>
        /// Adds one or more ad extensions to an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdExtensionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdExtensionsResponse> AddAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.AddAdExtensionsRequest request);
        
        /// <summary>
        /// Gets the specified ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsResponse GetAdExtensionsByIds(Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsRequest request);
        
        /// <summary>
        /// Gets the specified ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsResponse> GetAdExtensionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsRequest request);
        
        /// <summary>
        /// Updates one or more ad extensions within an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdExtensionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdExtensionsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdExtensionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsResponse UpdateAdExtensions(Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsRequest request);
        
        /// <summary>
        /// Updates one or more ad extensions within an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdExtensionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsResponse> UpdateAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsRequest request);
        
        /// <summary>
        /// Deletes one or more ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsResponse DeleteAdExtensions(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsRequest request);
        
        /// <summary>
        /// Deletes one or more ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdExtensions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsResponse> DeleteAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsRequest request);
        
        /// <summary>
        /// Gets editorial rejection reasons for the respective ad extension and entity associations.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The collection of ad extension editorial reasons.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsEditorialReasons", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsEditorialReasonsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsEditorialReasonsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsEditorialReasonsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsResponse GetAdExtensionsEditorialReasons(Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsRequest request);
        
        /// <summary>
        /// Gets editorial rejection reasons for the respective ad extension and entity associations.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The collection of ad extension editorial reasons.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsEditorialReasons", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsEditorialReasonsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsResponse> GetAdExtensionsEditorialReasonsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsRequest request);
        
        /// <summary>
        /// Associates the specified ad extensions with the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tAdExtensionsAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tAdExtensionsAssociationsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tAdExtensionsAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsResponse SetAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Associates the specified ad extensions with the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tAdExtensionsAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsResponse> SetAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of ad extension association collections.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsAssociationsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsResponse GetAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of ad extension association collections.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionsAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsResponse> GetAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Removes the specified association from the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsAssociationsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsResponse DeleteAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Removes the specified association from the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdExtensionsAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdExtensionsAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsResponse> DeleteAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsRequest request);
        
        /// <summary>
        /// Gets the ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionIdsByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionIdsByAccountIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionIdsByAccountIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionIdsByAccountIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdResponse GetAdExtensionIdsByAccountId(Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdRequest request);
        
        /// <summary>
        /// Gets the ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdExtensionIdsByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdExtensionIdsByAccountIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdResponse> GetAdExtensionIdsByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdRequest request);
        
        /// <summary>
        /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddMedia", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dMediaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dMediaApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dMediaAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddMediaResponse AddMedia(Microsoft.BingAds.CampaignManagement.AddMediaRequest request);
        
        /// <summary>
        /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddMedia", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dMediaResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddMediaResponse> AddMediaAsync(Microsoft.BingAds.CampaignManagement.AddMediaRequest request);
        
        /// <summary>
        /// Deletes the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteMedia", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteMediaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteMediaApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteMediaAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteMediaResponse DeleteMedia(Microsoft.BingAds.CampaignManagement.DeleteMediaRequest request);
        
        /// <summary>
        /// Deletes the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteMedia", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteMediaResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteMediaResponse> DeleteMediaAsync(Microsoft.BingAds.CampaignManagement.DeleteMediaRequest request);
        
        /// <summary>
        /// Gets the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media from the library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetMediaByIdsResponse GetMediaByIds(Microsoft.BingAds.CampaignManagement.GetMediaByIdsRequest request);
        
        /// <summary>
        /// Gets the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media from the library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaByIdsResponse> GetMediaByIdsAsync(Microsoft.BingAds.CampaignManagement.GetMediaByIdsRequest request);
        
        /// <summary>
        /// Gets the media meta data of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media meta data from the library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaMetaDataByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByAccountIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByAccountIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByAccountIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdResponse GetMediaMetaDataByAccountId(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdRequest request);
        
        /// <summary>
        /// Gets the media meta data of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media meta data from the library.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaMetaDataByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByAccountIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdResponse> GetMediaMetaDataByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdRequest request);
        
        /// <summary>
        /// Gets the specified media meta data from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaMetaDataByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsResponse GetMediaMetaDataByIds(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsRequest request);
        
        /// <summary>
        /// Gets the specified media meta data from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaMetaDataByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaMetaDataByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsResponse> GetMediaMetaDataByIdsAsync(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsRequest request);
        
        /// <summary>
        /// Gets the media associations of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaAssociationsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetMediaAssociationsResponse GetMediaAssociations(Microsoft.BingAds.CampaignManagement.GetMediaAssociationsRequest request);
        
        /// <summary>
        /// Gets the media associations of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetMediaAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tMediaAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaAssociationsResponse> GetMediaAssociationsAsync(Microsoft.BingAds.CampaignManagement.GetMediaAssociationsRequest request);
        
        /// <summary>
        /// Gets the specified criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupCriterionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsResponse GetAdGroupCriterionsByIds(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsRequest request);
        
        /// <summary>
        /// Gets the specified criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupCriterionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsResponse> GetAdGroupCriterionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsRequest request);
        
        /// <summary>
        /// Gets the specified types of criterions from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupCriterionsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByAdGroupIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByAdGroupIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByAdGroupIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdResponse GetAdGroupCriterionsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdRequest request);
        
        /// <summary>
        /// Gets the specified types of criterions from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetAdGroupCriterionsByAdGroupId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tAdGroupCriterionsByAdGroupIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdResponse> GetAdGroupCriterionsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdRequest request);
        
        /// <summary>
        /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupCriterionsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsResponse AddAdGroupCriterions(Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dAdGroupCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsResponse> AddAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Updates one or more ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.EditorialApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupCriterionsEditorialApiFaultDetail2Fault", Name="EditorialApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsResponse UpdateAdGroupCriterions(Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Updates one or more ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateAdGroupCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsResponse> UpdateAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Deletes the specified ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupCriterionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsResponse DeleteAdGroupCriterions(Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Deletes the specified ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAdGroupCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteAdGroupCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsResponse> DeleteAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsRequest request);
        
        /// <summary>
        /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="ApplyProductPartitionActions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "plyProductPartitionActionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "plyProductPartitionActionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "plyProductPartitionActionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsResponse ApplyProductPartitionActions(Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsRequest request);
        
        /// <summary>
        /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="ApplyProductPartitionActions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ap" +
            "plyProductPartitionActionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsResponse> ApplyProductPartitionActionsAsync(Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsRequest request);
        
        /// <summary>
        /// Gets the Bing Merchant Center stores for the specified customer.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of Bing Merchant Center stores for the specified customer.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetBMCStoresByCustomerId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tBMCStoresByCustomerIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tBMCStoresByCustomerIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tBMCStoresByCustomerIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdResponse GetBMCStoresByCustomerId(Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdRequest request);
        
        /// <summary>
        /// Gets the Bing Merchant Center stores for the specified customer.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of Bing Merchant Center stores for the specified customer.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetBMCStoresByCustomerId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tBMCStoresByCustomerIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdResponse> GetBMCStoresByCustomerIdAsync(Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdRequest request);
        
        /// <summary>
        /// Adds negative keywords to the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddNegativeKeywordsToEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dNegativeKeywordsToEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dNegativeKeywordsToEntitiesAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dNegativeKeywordsToEntitiesApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesResponse AddNegativeKeywordsToEntities(Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesRequest request);
        
        /// <summary>
        /// Adds negative keywords to the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddNegativeKeywordsToEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dNegativeKeywordsToEntitiesResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesResponse> AddNegativeKeywordsToEntitiesAsync(Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesRequest request);
        
        /// <summary>
        /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByEntityIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByEntityIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByEntityIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsResponse GetNegativeKeywordsByEntityIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsRequest request);
        
        /// <summary>
        /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetNegativeKeywordsByEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tNegativeKeywordsByEntityIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsResponse> GetNegativeKeywordsByEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsRequest request);
        
        /// <summary>
        /// Deletes negative keywords from the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteNegativeKeywordsFromEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteNegativeKeywordsFromEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteNegativeKeywordsFromEntitiesApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteNegativeKeywordsFromEntitiesAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesResponse DeleteNegativeKeywordsFromEntities(Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesRequest request);
        
        /// <summary>
        /// Deletes negative keywords from the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteNegativeKeywordsFromEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteNegativeKeywordsFromEntitiesResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesResponse> DeleteNegativeKeywordsFromEntitiesAsync(Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesRequest request);
        
        /// <summary>
        /// Gets the shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The shared entities from the account's shared library, for example negative keyword lists.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntitiesByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntitiesByAccountIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntitiesByAccountIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntitiesByAccountIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdResponse GetSharedEntitiesByAccountId(Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdRequest request);
        
        /// <summary>
        /// Gets the shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The shared entities from the account's shared library, for example negative keyword lists.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntitiesByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntitiesByAccountIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdResponse> GetSharedEntitiesByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdRequest request);
        
        /// <summary>
        /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddSharedEntity", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSharedEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSharedEntityApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSharedEntityAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddSharedEntityResponse AddSharedEntity(Microsoft.BingAds.CampaignManagement.AddSharedEntityRequest request);
        
        /// <summary>
        /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddSharedEntity", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dSharedEntityResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddSharedEntityResponse> AddSharedEntityAsync(Microsoft.BingAds.CampaignManagement.AddSharedEntityRequest request);
        
        /// <summary>
        /// Gets the list items such as the negative keywords of a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of list items returned from the shared list, for example a list of negative keywords.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetListItemsBySharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tListItemsBySharedListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tListItemsBySharedListAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tListItemsBySharedListApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListResponse GetListItemsBySharedList(Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListRequest request);
        
        /// <summary>
        /// Gets the list items such as the negative keywords of a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of list items returned from the shared list, for example a list of negative keywords.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetListItemsBySharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tListItemsBySharedListResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListResponse> GetListItemsBySharedListAsync(Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListRequest request);
        
        /// <summary>
        /// Adds list items such as negative keywords to the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddListItemsToSharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dListItemsToSharedListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dListItemsToSharedListApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dListItemsToSharedListAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListResponse AddListItemsToSharedList(Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListRequest request);
        
        /// <summary>
        /// Adds list items such as negative keywords to the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddListItemsToSharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dListItemsToSharedListResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListResponse> AddListItemsToSharedListAsync(Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListRequest request);
        
        /// <summary>
        /// Updates shared entities such as negative keyword lists within the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateSharedEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSharedEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSharedEntitiesApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSharedEntitiesAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesResponse UpdateSharedEntities(Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesRequest request);
        
        /// <summary>
        /// Updates shared entities such as negative keyword lists within the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully updated.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateSharedEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateSharedEntitiesResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesResponse> UpdateSharedEntitiesAsync(Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesRequest request);
        
        /// <summary>
        /// Deletes list items such as negative keywords from the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteListItemsFromSharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteListItemsFromSharedListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteListItemsFromSharedListAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteListItemsFromSharedListApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListResponse DeleteListItemsFromSharedList(Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListRequest request);
        
        /// <summary>
        /// Deletes list items such as negative keywords from the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteListItemsFromSharedList", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteListItemsFromSharedListResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListResponse> DeleteListItemsFromSharedListAsync(Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListRequest request);
        
        /// <summary>
        /// Sets the association between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetSharedEntityAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tSharedEntityAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tSharedEntityAssociationsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tSharedEntityAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsResponse SetSharedEntityAssociations(Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsRequest request);
        
        /// <summary>
        /// Sets the association between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully added.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="SetSharedEntityAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Se" +
            "tSharedEntityAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsResponse> SetSharedEntityAssociationsAsync(Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsRequest request);
        
        /// <summary>
        /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSharedEntityAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntityAssociationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntityAssociationsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntityAssociationsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsResponse DeleteSharedEntityAssociations(Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsRequest request);
        
        /// <summary>
        /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSharedEntityAssociations", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntityAssociationsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsResponse> DeleteSharedEntityAssociationsAsync(Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsRequest request);
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntityAssociationsBySharedEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsBySharedEntityIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsBySharedEntityIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsBySharedEntityIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsResponse GetSharedEntityAssociationsBySharedEntityIds(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsRequest request);
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntityAssociationsBySharedEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsBySharedEntityIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsResponse> GetSharedEntityAssociationsBySharedEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsRequest request);
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntityAssociationsByEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsByEntityIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsByEntityIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsByEntityIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsResponse GetSharedEntityAssociationsByEntityIds(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsRequest request);
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetSharedEntityAssociationsByEntityIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tSharedEntityAssociationsByEntityIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsResponse> GetSharedEntityAssociationsByEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsRequest request);
        
        /// <summary>
        /// Deletes shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSharedEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntitiesApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntitiesAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesResponse DeleteSharedEntities(Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesRequest request);
        
        /// <summary>
        /// Deletes shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteSharedEntities", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteSharedEntitiesResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesResponse> DeleteSharedEntitiesAsync(Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignSizesByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignSizesByAccountIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignSizesByAccountIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignSizesByAccountIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdResponse GetCampaignSizesByAccountId(Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignSizesByAccountId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignSizesByAccountIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdResponse> GetCampaignSizesByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdRequest request);
        
        /// <summary>
        /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignCriterionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsResponse AddCampaignCriterions(Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsRequest request);
        
        /// <summary>
        /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="AddCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ad" +
            "dCampaignCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsResponse> AddCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsRequest request);
        
        /// <summary>
        /// Updates one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignCriterionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsResponse UpdateCampaignCriterions(Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsRequest request);
        
        /// <summary>
        /// Updates one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Up" +
            "dateCampaignCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsResponse> UpdateCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsRequest request);
        
        /// <summary>
        /// Deletes one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignCriterionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignCriterionsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignCriterionsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsResponse DeleteCampaignCriterions(Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsRequest request);
        
        /// <summary>
        /// Deletes one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCampaignCriterions", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/De" +
            "leteCampaignCriterionsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsResponse> DeleteCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsRequest request);
        
        /// <summary>
        /// Gets the specified types of criterions from the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignCriterionsByCampaignId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByCampaignIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByCampaignIdApiFaultDetail2Fault", Name="ApiFaultDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByCampaignIdAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdResponse GetCampaignCriterionsByCampaignId(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdRequest request);
        
        /// <summary>
        /// Gets the specified types of criterions from the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignCriterionsByCampaignId", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByCampaignIdResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdResponse> GetCampaignCriterionsByCampaignIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdRequest request);
        
        /// <summary>
        /// Gets the specified campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignCriterionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.AdApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByIdsAdApiFaultDetailFault", Name="AdApiFaultDetail", Namespace="https://adapi.microsoft.com")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.BingAds.CampaignManagement.ApiFaultDetail), Action="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByIdsApiFaultDetail2Fault", Name="ApiFaultDetail")]
        Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsResponse GetCampaignCriterionsByIds(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsRequest request);
        
        /// <summary>
        /// Gets the specified campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        [System.ServiceModel.OperationContractAttribute(Action="GetCampaignCriterionsByIds", ReplyAction="https://bingads.microsoft.com/CampaignManagement/v9/ICampaignManagementService/Ge" +
            "tCampaignCriterionsByIdsResponse")]
        System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsResponse> GetCampaignCriterionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsRequest request);
    }
    
    /// <summary>
    /// Adds one or more campaigns to the specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Request Object</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaigns">AddCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCampaignsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddCampaignsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account to add the campaigns to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of campaigns to add to the specified account.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns;
        
        /// <summary>
        /// Constructor for the AddCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        public AddCampaignsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account to add the campaigns to.</param>
        /// <param name="Campaigns">The list of campaigns to add to the specified account.</param>
        public AddCampaignsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.Campaigns = Campaigns;
        }
    }
    
    /// <summary>
    /// Adds one or more campaigns to the specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Response Object</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaigns">AddCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCampaignsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddCampaignsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of long values that represents the identifiers for the campaigns that were added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// Constructor for the AddCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        public AddCampaignsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignIds">An array of long values that represents the identifiers for the campaigns that were added.</param>
        public AddCampaignsResponse(string TrackingId, System.Collections.Generic.IList<long> CampaignIds)
        {
            this.TrackingId = TrackingId;
            this.CampaignIds = CampaignIds;
        }
    }
    
    /// <summary>
    /// Retrieves all the campaigns that exist within a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Request Object</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignsByAccountId">GetCampaignsByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignsByAccountIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignsByAccountIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The type of campaign to get. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignType;
        
        /// <summary>
        /// Determines whether or not the service should include the NativeBidAdjustment element within each retrieved Campaign. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool IncludeNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the GetCampaignsByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignsByAccountIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignsByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns to get.</param>
        /// <param name="CampaignType">The type of campaign to get. You can specify one or more types.</param>
        /// <param name="IncludeNativeBidAdjustment">Determines whether or not the service should include the NativeBidAdjustment element within each retrieved Campaign. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.</param>
        public GetCampaignsByAccountIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignType, bool IncludeNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignType = CampaignType;
            this.IncludeNativeBidAdjustment = IncludeNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Retrieves all the campaigns that exist within a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Response Object</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignsByAccountId">GetCampaignsByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignsByAccountIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignsByAccountIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns;
        
        /// <summary>
        /// Constructor for the GetCampaignsByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignsByAccountIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignsByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Campaigns">An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.</param>
        public GetCampaignsByAccountIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns)
        {
            this.TrackingId = TrackingId;
            this.Campaigns = Campaigns;
        }
    }
    
    /// <summary>
    /// Retrieves the specified campaigns from the specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignsByIds">GetCampaignsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A maximum of 100 identifiers of the campaigns to get from the specified account.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// The type of campaign to get. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignType;
        
        /// <summary>
        /// Determines whether or not the service should include the NativeBidAdjustment element within each retrieved Campaign. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=3)]
        public bool IncludeNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the GetCampaignsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns to get.</param>
        /// <param name="CampaignIds">A maximum of 100 identifiers of the campaigns to get from the specified account.</param>
        /// <param name="CampaignType">The type of campaign to get. You can specify one or more types.</param>
        /// <param name="IncludeNativeBidAdjustment">Determines whether or not the service should include the NativeBidAdjustment element within each retrieved Campaign. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.</param>
        public GetCampaignsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> CampaignIds, System.Nullable<Microsoft.BingAds.CampaignManagement.CampaignType> CampaignType, bool IncludeNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignIds = CampaignIds;
            this.CampaignType = CampaignType;
            this.IncludeNativeBidAdjustment = IncludeNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Retrieves the specified campaigns from the specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignsByIds">GetCampaignsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns;
        
        /// <summary>
        /// Constructor for the GetCampaignsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Campaigns">An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.</param>
        public GetCampaignsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns)
        {
            this.TrackingId = TrackingId;
            this.Campaigns = Campaigns;
        }
    }
    
    /// <summary>
    /// Deletes one or more campaigns in a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Request Object</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteCampaigns">DeleteCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCampaignsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteCampaignsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A maximum of 100 campaign identifiers to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// Constructor for the DeleteCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteCampaignsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns to delete.</param>
        /// <param name="CampaignIds">A maximum of 100 campaign identifiers to delete.</param>
        public DeleteCampaignsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> CampaignIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignIds = CampaignIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more campaigns in a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Response Object</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteCampaigns">DeleteCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCampaignsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteCampaignsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteCampaignsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteCampaignsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Updates specified campaigns in a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Request Object</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateCampaigns">UpdateCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCampaignsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateCampaignsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaign to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array that can contain a maximum of 100 Campaign objects to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns;
        
        /// <summary>
        /// Determines whether or not the service should use the NativeBidAdjustment element of each specified Campaign during update. If set to True, the NativeBidAdjustment will be used, and otherwise it will be ignored and your existing native bid adjustment setting will be retained during update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool UpdateNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the UpdateCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateCampaignsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaign to update.</param>
        /// <param name="Campaigns">An array that can contain a maximum of 100 Campaign objects to update.</param>
        /// <param name="UpdateNativeBidAdjustment">Determines whether or not the service should use the NativeBidAdjustment element of each specified Campaign during update. If set to True, the NativeBidAdjustment will be used, and otherwise it will be ignored and your existing native bid adjustment setting will be retained during update.</param>
        public UpdateCampaignsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Campaign> Campaigns, bool UpdateNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.Campaigns = Campaigns;
            this.UpdateNativeBidAdjustment = UpdateNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Updates specified campaigns in a specified account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Response Object</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateCampaigns">UpdateCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCampaignsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateCampaignsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateCampaignsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateCampaignsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves the negative keywords that are only associated to the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByCampaignIds">GetNegativeKeywordsByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByCampaignIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByCampaignIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array of identifiers of the campaigns that contain the negative keywords that you want to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByCampaignIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns.</param>
        /// <param name="CampaignIds">An array of identifiers of the campaigns that contain the negative keywords that you want to get.</param>
        public GetNegativeKeywordsByCampaignIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> CampaignIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignIds = CampaignIds;
        }
    }
    
    /// <summary>
    /// Retrieves the negative keywords that are only associated to the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByCampaignIds">GetNegativeKeywordsByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByCampaignIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByCampaignIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeKeywords> CampaignNegativeKeywords;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByCampaignIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignNegativeKeywords">An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.</param>
        public GetNegativeKeywordsByCampaignIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeKeywords> CampaignNegativeKeywords)
        {
            this.TrackingId = TrackingId;
            this.CampaignNegativeKeywords = CampaignNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Sets the negative keywords of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Request Object</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToCampaigns">SetNegativeKeywordsToCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeKeywordsToCampaignsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeKeywordsToCampaignsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array of CampaignNegativeKeywords objects that identify the campaigns to update with the specified negative keywords.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeKeywords> CampaignNegativeKeywords;
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToCampaignsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns.</param>
        /// <param name="CampaignNegativeKeywords">An array of CampaignNegativeKeywords objects that identify the campaigns to update with the specified negative keywords.</param>
        public SetNegativeKeywordsToCampaignsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeKeywords> CampaignNegativeKeywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignNegativeKeywords = CampaignNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Sets the negative keywords of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Response Object</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToCampaigns">SetNegativeKeywordsToCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeKeywordsToCampaignsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeKeywordsToCampaignsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToCampaignsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToCampaignsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets the negative site URLs of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByCampaignIds">GetNegativeSitesByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeSitesByCampaignIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeSitesByCampaignIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array of identifiers of the campaigns that contain the negative site URLs that you want to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeSitesByCampaignIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns.</param>
        /// <param name="CampaignIds">An array of identifiers of the campaigns that contain the negative site URLs that you want to get.</param>
        public GetNegativeSitesByCampaignIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> CampaignIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignIds = CampaignIds;
        }
    }
    
    /// <summary>
    /// Gets the negative site URLs of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByCampaignIds">GetNegativeSitesByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeSitesByCampaignIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeSitesByCampaignIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeSites> CampaignNegativeSites;
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeSitesByCampaignIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignNegativeSites">An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.</param>
        public GetNegativeSitesByCampaignIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeSites> CampaignNegativeSites)
        {
            this.TrackingId = TrackingId;
            this.CampaignNegativeSites = CampaignNegativeSites;
        }
    }
    
    /// <summary>
    /// Sets the negative site URLs of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Request Object</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeSitesToCampaigns">SetNegativeSitesToCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeSitesToCampaignsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeSitesToCampaignsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the campaigns.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array of CampaignNegativeSites objects that identify the campaigns to update with the specified negative site URLs.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeSites> CampaignNegativeSites;
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToCampaignsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToCampaignsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaignsRequest</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the campaigns.</param>
        /// <param name="CampaignNegativeSites">An array of CampaignNegativeSites objects that identify the campaigns to update with the specified negative site URLs.</param>
        public SetNegativeSitesToCampaignsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignNegativeSites> CampaignNegativeSites)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignNegativeSites = CampaignNegativeSites;
        }
    }
    
    /// <summary>
    /// Sets the negative site URLs of the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Response Object</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeSitesToCampaigns">SetNegativeSitesToCampaigns</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeSitesToCampaignsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeSitesToCampaignsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToCampaignsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToCampaignsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaignsResponse</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToCampaignsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigValueRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetConfigValueRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public string ConfigKey;
        
        public GetConfigValueRequest()
        {
        }
        
        public GetConfigValueRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, string ConfigKey)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.ConfigKey = ConfigKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigValueResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetConfigValueResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public string ConfigValue;
        
        public GetConfigValueResponse()
        {
        }
        
        public GetConfigValueResponse(string TrackingId, string ConfigValue)
        {
            this.TrackingId = TrackingId;
            this.ConfigValue = ConfigValue;
        }
    }
    
    /// <summary>
    /// Adds new ad groups to a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Request Object</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroups">AddAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdGroupsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdGroupsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign to add the ad groups to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// The list of ad groups to add to the specified campaign.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups;
        
        /// <summary>
        /// Constructor for the AddAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdGroupsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign to add the ad groups to.</param>
        /// <param name="AdGroups">The list of ad groups to add to the specified campaign.</param>
        public AddAdGroupsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroups = AdGroups;
        }
    }
    
    /// <summary>
    /// Adds new ad groups to a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Response Object</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroups">AddAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdGroupsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdGroupsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of long values that represents the identifiers for the ad groups that were added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// Constructor for the AddAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdGroupsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupIds">An array of long values that represents the identifiers for the ad groups that were added.</param>
        public AddAdGroupsResponse(string TrackingId, System.Collections.Generic.IList<long> AdGroupIds)
        {
            this.TrackingId = TrackingId;
            this.AdGroupIds = AdGroupIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more ad groups in a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Request Object</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdGroups">DeleteAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdGroupsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdGroupsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The campaign that contains the ad groups that will be deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// A maximum of 1,000 ad group identifiers to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// Constructor for the DeleteAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The campaign that contains the ad groups that will be deleted.</param>
        /// <param name="AdGroupIds">A maximum of 1,000 ad group identifiers to delete.</param>
        public DeleteAdGroupsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<long> AdGroupIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupIds = AdGroupIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more ad groups in a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Response Object</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdGroups">DeleteAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdGroupsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdGroupsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets the specified ad groups that exist within a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupsByIds">GetAdGroupsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// A maximum of 1,000 identifiers of the ad groups to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// Determines whether or not the service should include the NativeBidAdjustment element within each retrieved AdGroup. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool IncludeNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the GetAdGroupsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups to get.</param>
        /// <param name="AdGroupIds">A maximum of 1,000 identifiers of the ad groups to get.</param>
        /// <param name="IncludeNativeBidAdjustment">Determines whether or not the service should include the NativeBidAdjustment element within each retrieved AdGroup. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.</param>
        public GetAdGroupsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<long> AdGroupIds, bool IncludeNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupIds = AdGroupIds;
            this.IncludeNativeBidAdjustment = IncludeNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Gets the specified ad groups that exist within a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupsByIds">GetAdGroupsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups;
        
        /// <summary>
        /// Constructor for the GetAdGroupsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroups">An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.</param>
        public GetAdGroupsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups)
        {
            this.TrackingId = TrackingId;
            this.AdGroups = AdGroups;
        }
    }
    
    /// <summary>
    /// Gets the ad groups that exist within a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Request Object</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupsByCampaignId">GetAdGroupsByCampaignId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupsByCampaignIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupsByCampaignIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// Determines whether or not the service should include the NativeBidAdjustment element within each retrieved AdGroup. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public bool IncludeNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the GetAdGroupsByCampaignIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupsByCampaignIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupsByCampaignIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups to get.</param>
        /// <param name="IncludeNativeBidAdjustment">Determines whether or not the service should include the NativeBidAdjustment element within each retrieved AdGroup. If set to True, the NativeBidAdjustment will be included, and otherwise it will be null.</param>
        public GetAdGroupsByCampaignIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, bool IncludeNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.IncludeNativeBidAdjustment = IncludeNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Gets the ad groups that exist within a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Response Object</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupsByCampaignId">GetAdGroupsByCampaignId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupsByCampaignIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupsByCampaignIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups;
        
        /// <summary>
        /// Constructor for the GetAdGroupsByCampaignIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupsByCampaignIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupsByCampaignIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroups">An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.</param>
        public GetAdGroupsByCampaignIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups)
        {
            this.TrackingId = TrackingId;
            this.AdGroups = AdGroups;
        }
    }
    
    /// <summary>
    /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Request Object</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SubmitAdGroupForApproval">SubmitAdGroupForApproval</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitAdGroupForApprovalRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SubmitAdGroupForApprovalRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that is being submitted for editorial review.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// Constructor for the SubmitAdGroupForApprovalRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApprovalRequest</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        public SubmitAdGroupForApprovalRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SubmitAdGroupForApprovalRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApprovalRequest</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that is being submitted for editorial review.</param>
        public SubmitAdGroupForApprovalRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
        }
    }
    
    /// <summary>
    /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Response Object</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SubmitAdGroupForApproval">SubmitAdGroupForApproval</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitAdGroupForApprovalResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SubmitAdGroupForApprovalResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SubmitAdGroupForApprovalResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApprovalResponse</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        public SubmitAdGroupForApprovalResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SubmitAdGroupForApprovalResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApprovalResponse</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        public SubmitAdGroupForApprovalResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Updates the specified ad groups in a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Request Object</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdGroups">UpdateAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdGroupsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdGroupsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that owns the ad groups to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// An array that can contain a maximum of 1,000 AdGroup objects to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups;
        
        /// <summary>
        /// Determines whether or not the service should use the NativeBidAdjustment element of each specified AdGroup during update. If set to True, the NativeBidAdjustment will be used, and otherwise it will be ignored and your existing native bid adjustment setting will be retained during update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool UpdateNativeBidAdjustment;
        
        /// <summary>
        /// Constructor for the UpdateAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that owns the ad groups to update.</param>
        /// <param name="AdGroups">An array that can contain a maximum of 1,000 AdGroup objects to update.</param>
        /// <param name="UpdateNativeBidAdjustment">Determines whether or not the service should use the NativeBidAdjustment element of each specified AdGroup during update. If set to True, the NativeBidAdjustment will be used, and otherwise it will be ignored and your existing native bid adjustment setting will be retained during update.</param>
        public UpdateAdGroupsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroup> AdGroups, bool UpdateNativeBidAdjustment)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroups = AdGroups;
            this.UpdateNativeBidAdjustment = UpdateNativeBidAdjustment;
        }
    }
    
    /// <summary>
    /// Updates the specified ad groups in a specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Response Object</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdGroups">UpdateAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdGroupsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdGroupsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves the negative keywords that are only associated to the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByAdGroupIds">GetNegativeKeywordsByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByAdGroupIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByAdGroupIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// An array of identifiers of the ad groups that contain the negative keywords that you want to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByAdGroupIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups.</param>
        /// <param name="AdGroupIds">An array of identifiers of the ad groups that contain the negative keywords that you want to get.</param>
        public GetNegativeKeywordsByAdGroupIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<long> AdGroupIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupIds = AdGroupIds;
        }
    }
    
    /// <summary>
    /// Retrieves the negative keywords that are only associated to the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByAdGroupIds">GetNegativeKeywordsByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByAdGroupIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByAdGroupIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeKeywords> AdGroupNegativeKeywords;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByAdGroupIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupNegativeKeywords">An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.</param>
        public GetNegativeKeywordsByAdGroupIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeKeywords> AdGroupNegativeKeywords)
        {
            this.TrackingId = TrackingId;
            this.AdGroupNegativeKeywords = AdGroupNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Sets the negative keywords of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Request Object</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToAdGroups">SetNegativeKeywordsToAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeKeywordsToAdGroupsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeKeywordsToAdGroupsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// An array of AdGroupNegativeKeywords objects that identify the ad groups to update with the specified negative keywords.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeKeywords> AdGroupNegativeKeywords;
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToAdGroupsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups.</param>
        /// <param name="AdGroupNegativeKeywords">An array of AdGroupNegativeKeywords objects that identify the ad groups to update with the specified negative keywords.</param>
        public SetNegativeKeywordsToAdGroupsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeKeywords> AdGroupNegativeKeywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupNegativeKeywords = AdGroupNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Sets the negative keywords of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Response Object</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeKeywordsToAdGroups">SetNegativeKeywordsToAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeKeywordsToAdGroupsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeKeywordsToAdGroupsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToAdGroupsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeKeywordsToAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeKeywordsToAdGroupsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets the negative site URLs of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByAdGroupIds">GetNegativeSitesByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeSitesByAdGroupIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeSitesByAdGroupIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// An array of identifiers of the ad groups that contain the negative site URLs that you want to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeSitesByAdGroupIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups.</param>
        /// <param name="AdGroupIds">An array of identifiers of the ad groups that contain the negative site URLs that you want to get.</param>
        public GetNegativeSitesByAdGroupIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<long> AdGroupIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupIds = AdGroupIds;
        }
    }
    
    /// <summary>
    /// Gets the negative site URLs of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeSitesByAdGroupIds">GetNegativeSitesByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeSitesByAdGroupIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeSitesByAdGroupIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeSites> AdGroupNegativeSites;
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeSitesByAdGroupIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeSitesByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupNegativeSites">An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.</param>
        public GetNegativeSitesByAdGroupIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeSites> AdGroupNegativeSites)
        {
            this.TrackingId = TrackingId;
            this.AdGroupNegativeSites = AdGroupNegativeSites;
        }
    }
    
    /// <summary>
    /// Sets the negative site URLs of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Request Object</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeSitesToAdGroups">SetNegativeSitesToAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeSitesToAdGroupsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeSitesToAdGroupsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the ad groups.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// An array of AdGroupNegativeSites objects that identify the ad groups to update with the specified negative site URLs.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeSites> AdGroupNegativeSites;
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToAdGroupsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToAdGroupsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroupsRequest</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the ad groups.</param>
        /// <param name="AdGroupNegativeSites">An array of AdGroupNegativeSites objects that identify the ad groups to update with the specified negative site URLs.</param>
        public SetNegativeSitesToAdGroupsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupNegativeSites> AdGroupNegativeSites)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.AdGroupNegativeSites = AdGroupNegativeSites;
        }
    }
    
    /// <summary>
    /// Sets the negative site URLs of the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Response Object</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetNegativeSitesToAdGroups">SetNegativeSitesToAdGroups</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNegativeSitesToAdGroupsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetNegativeSitesToAdGroupsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToAdGroupsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetNegativeSitesToAdGroupsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroupsResponse</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        public SetNegativeSitesToAdGroupsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Adds targets to your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Request Object</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary">AddTargetsToLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTargetsToLibraryRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddTargetsToLibraryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of Target objects to add to the target library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets;
        
        /// <summary>
        /// Constructor for the AddTargetsToLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        public AddTargetsToLibraryRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddTargetsToLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target objects to add to the target library.</param>
        public AddTargetsToLibraryRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Adds targets to your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Response Object</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary">AddTargetsToLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTargetsToLibraryResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddTargetsToLibraryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of long values that contains the identifiers of the targets that were added to your target library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> TargetIds;
        
        /// <summary>
        /// Constructor for the AddTargetsToLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        public AddTargetsToLibraryResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddTargetsToLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetIds">An array of long values that contains the identifiers of the targets that were added to your target library.</param>
        public AddTargetsToLibraryResponse(string TrackingId, System.Collections.Generic.IList<long> TargetIds)
        {
            this.TrackingId = TrackingId;
            this.TargetIds = TargetIds;
        }
    }
    
    /// <summary>
    /// Updates targets in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Request Object</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary">UpdateTargetsInLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTargetsInLibraryRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateTargetsInLibraryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of Target objects that contains the updated target information.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets;
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibraryRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target objects that contains the updated target information.</param>
        public UpdateTargetsInLibraryRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Updates targets in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Response Object</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary">UpdateTargetsInLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTargetsInLibraryResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateTargetsInLibraryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibraryResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibraryResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Removes targets from your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Request Object</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetsFromLibrary">DeleteTargetsFromLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetsFromLibraryRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetsFromLibraryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of long values that specifies the identifiers of the targets to remove from the target library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> TargetIds;
        
        /// <summary>
        /// Constructor for the DeleteTargetsFromLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetsFromLibraryRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetsFromLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetIds">An array of long values that specifies the identifiers of the targets to remove from the target library.</param>
        public DeleteTargetsFromLibraryRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> TargetIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.TargetIds = TargetIds;
        }
    }
    
    /// <summary>
    /// Removes targets from your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Response Object</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetsFromLibrary">DeleteTargetsFromLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetsFromLibraryResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetsFromLibraryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteTargetsFromLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetsFromLibraryResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetsFromLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetsFromLibraryResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about all the targets in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Request Object</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsInfoFromLibrary">GetTargetsInfoFromLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsInfoFromLibraryRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsInfoFromLibraryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// Constructor for the GetTargetsInfoFromLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsInfoFromLibraryRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsInfoFromLibraryRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibraryRequest</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsInfoFromLibraryRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about all the targets in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Response Object</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsInfoFromLibrary">GetTargetsInfoFromLibrary</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsInfoFromLibraryResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsInfoFromLibraryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of TargetInfo objects that contain information about the targets in your library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.TargetInfo> TargetsInfo;
        
        /// <summary>
        /// Constructor for the GetTargetsInfoFromLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsInfoFromLibraryResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsInfoFromLibraryResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibraryResponse</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetsInfo">An array of TargetInfo objects that contain information about the targets in your library.</param>
        public GetTargetsInfoFromLibraryResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.TargetInfo> TargetsInfo)
        {
            this.TrackingId = TrackingId;
            this.TargetsInfo = TargetsInfo;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the specified targets.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByIds">GetTargetsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the targets to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> TargetIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetIds">A list of identifiers of the targets to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.</param>
        public GetTargetsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> TargetIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.TargetIds = TargetIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the specified targets.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByIds">GetTargetsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target objects that contains information about the specified targets.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target objects that contains information about the specified targets.</param>
        public GetTargetsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Associates the specified target with the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Request Object</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetTargetToAdGroup">SetTargetToAdGroup</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetToAdGroupRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetTargetToAdGroupRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to associate with the target.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// The identifier of the target to associate with the ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public long TargetId;
        
        /// <summary>
        /// If the specified AdGroupId is already associated with a target, this element determines whether to replace the existing association between the ad group and target with the specified TargetId.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool ReplaceAssociation;
        
        /// <summary>
        /// Constructor for the SetTargetToAdGroupRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroupRequest</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToAdGroupRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetTargetToAdGroupRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroupRequest</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to associate with the target.</param>
        /// <param name="TargetId">The identifier of the target to associate with the ad group.</param>
        /// <param name="ReplaceAssociation">If the specified AdGroupId is already associated with a target, this element determines whether to replace the existing association between the ad group and target with the specified TargetId.</param>
        public SetTargetToAdGroupRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, long TargetId, bool ReplaceAssociation)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.TargetId = TargetId;
            this.ReplaceAssociation = ReplaceAssociation;
        }
    }
    
    /// <summary>
    /// Associates the specified target with the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Response Object</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetTargetToAdGroup">SetTargetToAdGroup</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetToAdGroupResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetTargetToAdGroupResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetTargetToAdGroupResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroupResponse</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToAdGroupResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetTargetToAdGroupResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroupResponse</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToAdGroupResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Removes the specified target association for the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Request Object</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetFromAdGroup">DeleteTargetFromAdGroup</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetFromAdGroupRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetFromAdGroupRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group from which to remove the target association.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// Constructor for the DeleteTargetFromAdGroupRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroupRequest</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromAdGroupRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetFromAdGroupRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroupRequest</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group from which to remove the target association.</param>
        public DeleteTargetFromAdGroupRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
        }
    }
    
    /// <summary>
    /// Removes the specified target association for the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Response Object</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetFromAdGroup">DeleteTargetFromAdGroup</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetFromAdGroupResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetFromAdGroupResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteTargetFromAdGroupResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroupResponse</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromAdGroupResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetFromAdGroupResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroupResponse</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromAdGroupResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the targets that are associated with the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds">GetTargetsByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByAdGroupIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByAdGroupIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the ad groups that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByAdGroupIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupIds">A list of identifiers of the ad groups that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.</param>
        public GetTargetsByAdGroupIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> AdGroupIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupIds = AdGroupIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the targets that are associated with the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds">GetTargetsByAdGroupIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByAdGroupIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByAdGroupIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByAdGroupIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</param>
        public GetTargetsByAdGroupIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Associates the specified target with the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Request Object</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetTargetToCampaign">SetTargetToCampaign</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetToCampaignRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetTargetToCampaignRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign to associate with the target.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// The identifier of the target to associate with the campaign.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public long TargetId;
        
        /// <summary>
        /// If the specified CampaignId is already associated with a target, this element determines whether to replace the existing association between the campaign and target with the specified TargetId.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public bool ReplaceAssociation;
        
        /// <summary>
        /// Constructor for the SetTargetToCampaignRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaignRequest</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToCampaignRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetTargetToCampaignRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaignRequest</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign to associate with the target.</param>
        /// <param name="TargetId">The identifier of the target to associate with the campaign.</param>
        /// <param name="ReplaceAssociation">If the specified CampaignId is already associated with a target, this element determines whether to replace the existing association between the campaign and target with the specified TargetId.</param>
        public SetTargetToCampaignRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, long TargetId, bool ReplaceAssociation)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.TargetId = TargetId;
            this.ReplaceAssociation = ReplaceAssociation;
        }
    }
    
    /// <summary>
    /// Associates the specified target with the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Response Object</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetTargetToCampaign">SetTargetToCampaign</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetToCampaignResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetTargetToCampaignResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetTargetToCampaignResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaignResponse</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToCampaignResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetTargetToCampaignResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaignResponse</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        public SetTargetToCampaignResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Removes the target association for the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Request Object</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetFromCampaign">DeleteTargetFromCampaign</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetFromCampaignRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetFromCampaignRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign from which to remove the target association.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// Constructor for the DeleteTargetFromCampaignRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaignRequest</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromCampaignRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetFromCampaignRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaignRequest</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign from which to remove the target association.</param>
        public DeleteTargetFromCampaignRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
        }
    }
    
    /// <summary>
    /// Removes the target association for the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Response Object</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteTargetFromCampaign">DeleteTargetFromCampaign</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTargetFromCampaignResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteTargetFromCampaignResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteTargetFromCampaignResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaignResponse</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromCampaignResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteTargetFromCampaignResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaignResponse</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteTargetFromCampaignResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the targets that are associated with the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds">GetTargetsByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByCampaignIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByCampaignIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the campaigns that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByCampaignIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignIds">A list of identifiers of the campaigns that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is the oldest supported version.</param>
        public GetTargetsByCampaignIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> CampaignIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignIds = CampaignIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the targets that are associated with the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds">GetTargetsByCampaignIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByCampaignIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByCampaignIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByCampaignIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</param>
        public GetTargetsByCampaignIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Adds the specified Target2 to your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Request Object</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary2">AddTargetsToLibrary2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTargetsToLibrary2Request", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddTargetsToLibrary2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of Target2 objects to add to the target library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets;
        
        /// <summary>
        /// Constructor for the AddTargetsToLibrary2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2Request</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        public AddTargetsToLibrary2Request()
        {
        }
        
        /// <summary>
        /// Constructor for the AddTargetsToLibrary2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2Request</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target2 objects to add to the target library.</param>
        public AddTargetsToLibrary2Request(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Adds the specified Target2 to your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Response Object</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddTargetsToLibrary2">AddTargetsToLibrary2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTargetsToLibrary2Response", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddTargetsToLibrary2Response
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of long values that contains the identifiers of the targets that were added to your target library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> TargetIds;
        
        /// <summary>
        /// Constructor for the AddTargetsToLibrary2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2Response</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        public AddTargetsToLibrary2Response()
        {
        }
        
        /// <summary>
        /// Constructor for the AddTargetsToLibrary2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2Response</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetIds">An array of long values that contains the identifiers of the targets that were added to your target library.</param>
        public AddTargetsToLibrary2Response(string TrackingId, System.Collections.Generic.IList<long> TargetIds)
        {
            this.TrackingId = TrackingId;
            this.TargetIds = TargetIds;
        }
    }
    
    /// <summary>
    /// Updates Target2 objects in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Request Object</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary2">UpdateTargetsInLibrary2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTargetsInLibrary2Request", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateTargetsInLibrary2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of Target2 objects that contains the updated target information.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets;
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibrary2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2Request</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibrary2Request()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibrary2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2Request</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target2 objects that contains the updated target information.</param>
        public UpdateTargetsInLibrary2Request(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Updates Target2 objects in your target library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Response Object</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateTargetsInLibrary2">UpdateTargetsInLibrary2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTargetsInLibrary2Response", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateTargetsInLibrary2Response
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibrary2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2Response</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibrary2Response()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateTargetsInLibrary2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2Response</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateTargetsInLibrary2Response(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the specified Target2 objects.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Request Object</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByIds2">GetTargetsByIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByIds2Request", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByIds2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the targets to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> TargetIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByIds, the default value is '1'.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByIds2Request()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="TargetIds">A list of identifiers of the targets to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByIds, the default value is '1'.</param>
        public GetTargetsByIds2Request(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> TargetIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.TargetIds = TargetIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the specified Target2 objects.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Response Object</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByIds2">GetTargetsByIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByIds2Response", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByIds2Response
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target2 objects that contains information about the specified targets.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByIds2Response()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target2 objects that contains information about the specified targets.</param>
        public GetTargetsByIds2Response(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Request Object</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds2">GetTargetsByAdGroupIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByAdGroupIds2Request", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByAdGroupIds2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the ad groups that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AdGroupIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByAdGroupIds, the default value is '1'.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByAdGroupIds2Request()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupIds">A list of identifiers of the ad groups that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByAdGroupIds, the default value is '1'.</param>
        public GetTargetsByAdGroupIds2Request(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> AdGroupIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupIds = AdGroupIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Response Object</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByAdGroupIds2">GetTargetsByAdGroupIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByAdGroupIds2Response", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByAdGroupIds2Response
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByAdGroupIds2Response()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByAdGroupIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</param>
        public GetTargetsByAdGroupIds2Response(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Request Object</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds2">GetTargetsByCampaignIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByCampaignIds2Request", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByCampaignIds2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of identifiers of the campaigns that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        /// <summary>
        /// The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByCampaignIds, the default value is '1'.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string LocationTargetVersion;
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByCampaignIds2Request()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIds2Request request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2Request</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignIds">A list of identifiers of the campaigns that contain the targets that you want to get. The list can contain a maximum of 100 identifiers.</param>
        /// <param name="LocationTargetVersion">The version of the location codes to return if the target contains location targets. The following are the possible values. If null, the default is '2'. Note: For GetTargetsByCampaignIds, the default value is '1'.</param>
        public GetTargetsByCampaignIds2Request(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> CampaignIds, string LocationTargetVersion)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignIds = CampaignIds;
            this.LocationTargetVersion = LocationTargetVersion;
        }
    }
    
    /// <summary>
    /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Response Object</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetTargetsByCampaignIds2">GetTargetsByCampaignIds2</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetsByCampaignIds2Response", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetTargetsByCampaignIds2Response
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets;
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        public GetTargetsByCampaignIds2Response()
        {
        }
        
        /// <summary>
        /// Constructor for the GetTargetsByCampaignIds2Response response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2Response</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Targets">An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</param>
        public GetTargetsByCampaignIds2Response(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Target2> Targets)
        {
            this.TrackingId = TrackingId;
            this.Targets = Targets;
        }
    }
    
    /// <summary>
    /// Adds one or more ads to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAds">AddAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to add the ads to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of ads to add to the specified ad group. The maximum number of ads that you can add to an ad group is 50.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads;
        
        /// <summary>
        /// Constructor for the AddAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to add the ads to.</param>
        /// <param name="Ads">An array of ads to add to the specified ad group. The maximum number of ads that you can add to an ad group is 50.</param>
        public AddAdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.Ads = Ads;
        }
    }
    
    /// <summary>
    /// Adds one or more ads to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAds">AddAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of long values that represents the identifiers for the ads that were added. Note: Items of the list may be returned as null. For each list index where an ad was not added, the corresponding element will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Nullable<long>> AdIds;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any ads that were not successfully added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the AddAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdIds">A list of long values that represents the identifiers for the ads that were added. Note: Items of the list may be returned as null. For each list index where an ad was not added, the corresponding element will be null.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any ads that were not successfully added.</param>
        public AddAdsResponse(string TrackingId, System.Collections.Generic.IList<System.Nullable<long>> AdIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.AdIds = AdIds;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes one or more ads in a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAds">DeleteAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The ID of the ad group that contains the ads to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// The IDs of the ads to delete. You can specify a maximum of 50 IDs.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdIds;
        
        /// <summary>
        /// Constructor for the DeleteAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The ID of the ad group that contains the ads to delete.</param>
        /// <param name="AdIds">The IDs of the ads to delete. You can specify a maximum of 50 IDs.</param>
        public DeleteAdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> AdIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.AdIds = AdIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more ads in a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAds">DeleteAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any ads that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any ads that were not successfully deleted.</param>
        public DeleteAdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Request Object</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByEditorialStatus">GetAdsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByEditorialStatusRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByEditorialStatusRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to retrieve the ads from.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// The AdEditorialStatus value that specifies the review status that the ads must have to be returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.AdEditorialStatus EditorialStatus;
        
        /// <summary>
        /// Constructor for the GetAdsByEditorialStatusRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatusRequest</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByEditorialStatusRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByEditorialStatusRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatusRequest</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to retrieve the ads from.</param>
        /// <param name="EditorialStatus">The AdEditorialStatus value that specifies the review status that the ads must have to be returned.</param>
        public GetAdsByEditorialStatusRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, Microsoft.BingAds.CampaignManagement.AdEditorialStatus EditorialStatus)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.EditorialStatus = EditorialStatus;
        }
    }
    
    /// <summary>
    /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Response Object</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByEditorialStatus">GetAdsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByEditorialStatusResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByEditorialStatusResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads;
        
        /// <summary>
        /// Constructor for the GetAdsByEditorialStatusResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatusResponse</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByEditorialStatusResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByEditorialStatusResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatusResponse</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Ads">An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.</param>
        public GetAdsByEditorialStatusResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads)
        {
            this.TrackingId = TrackingId;
            this.Ads = Ads;
        }
    }
    
    /// <summary>
    /// Retrieves the specified ads from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByIds">GetAdsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that contains the ads to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// A maximum of 20 identifiers of the ads to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdIds;
        
        /// <summary>
        /// Constructor for the GetAdsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that contains the ads to get.</param>
        /// <param name="AdIds">A maximum of 20 identifiers of the ads to get.</param>
        public GetAdsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> AdIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.AdIds = AdIds;
        }
    }
    
    /// <summary>
    /// Retrieves the specified ads from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByIds">GetAdsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Ad objects that corresponds directly to the ad identifiers that you specified in the request. If an ad does not exist, the corresponding element of the array is set to NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any ads that were not successfully retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetAdsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Ads">An array of Ad objects that corresponds directly to the ad identifiers that you specified in the request. If an ad does not exist, the corresponding element of the array is set to NULL.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any ads that were not successfully retrieved.</param>
        public GetAdsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.Ads = Ads;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Retrieves the ads that are associated with an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Request Object</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByAdGroupId">GetAdsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByAdGroupIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByAdGroupIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to retrieve the ads from.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// Constructor for the GetAdsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByAdGroupIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to retrieve the ads from.</param>
        public GetAdsByAdGroupIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
        }
    }
    
    /// <summary>
    /// Retrieves the ads that are associated with an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Response Object</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdsByAdGroupId">GetAdsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdsByAdGroupIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdsByAdGroupIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads;
        
        /// <summary>
        /// Constructor for the GetAdsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdsByAdGroupIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Ads">An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.</param>
        public GetAdsByAdGroupIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads)
        {
            this.TrackingId = TrackingId;
            this.Ads = Ads;
        }
    }
    
    /// <summary>
    /// Updates the specified ads within a particular ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAds">UpdateAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The ID of the ad group that contains the ads to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// A list of ads to update. You may update a maximum of 50 ads.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads;
        
        /// <summary>
        /// Constructor for the UpdateAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The ID of the ad group that contains the ads to update.</param>
        /// <param name="Ads">A list of ads to update. You may update a maximum of 50 ads.</param>
        public UpdateAdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Ad> Ads)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.Ads = Ads;
        }
    }
    
    /// <summary>
    /// Updates the specified ads within a particular ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAds">UpdateAds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any ads that were not successfully updated.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the UpdateAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any ads that were not successfully updated.</param>
        public UpdateAdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Adds one or more keywords to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Request Object</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddKeywords">AddKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddKeywordsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddKeywordsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to add the keywords to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// The list of keywords to add to the specified ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords;
        
        /// <summary>
        /// Constructor for the AddKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        public AddKeywordsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to add the keywords to.</param>
        /// <param name="Keywords">The list of keywords to add to the specified ad group.</param>
        public AddKeywordsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.Keywords = Keywords;
        }
    }
    
    /// <summary>
    /// Adds one or more keywords to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Response Object</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddKeywords">AddKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddKeywordsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddKeywordsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An list of long values that represents the keyword identifiers for the keywords that were added. Note: Items of the list may be returned as null. For each list index where a keyword was not added, the corresponding element will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Nullable<long>> KeywordIds;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any keywords that were not successfully added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the AddKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        public AddKeywordsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="KeywordIds">An list of long values that represents the keyword identifiers for the keywords that were added. Note: Items of the list may be returned as null. For each list index where a keyword was not added, the corresponding element will be null.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any keywords that were not successfully added.</param>
        public AddKeywordsResponse(string TrackingId, System.Collections.Generic.IList<System.Nullable<long>> KeywordIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.KeywordIds = KeywordIds;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes one or more keywords in a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Request Object</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteKeywords">DeleteKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteKeywordsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteKeywordsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that contains the keywords to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// A maximum of 1,000 keywords identifiers to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> KeywordIds;
        
        /// <summary>
        /// Constructor for the DeleteKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteKeywordsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that contains the keywords to delete.</param>
        /// <param name="KeywordIds">A maximum of 1,000 keywords identifiers to delete.</param>
        public DeleteKeywordsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> KeywordIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.KeywordIds = KeywordIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more keywords in a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Response Object</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteKeywords">DeleteKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteKeywordsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteKeywordsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any keywords that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteKeywordsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any keywords that were not successfully deleted.</param>
        public DeleteKeywordsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Retrieves the keywords with the specified editorial review status.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Request Object</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByEditorialStatus">GetKeywordsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByEditorialStatusRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByEditorialStatusRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that contains the keywords to retrieve.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// The review status of the keywords to retrieve.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.KeywordEditorialStatus EditorialStatus;
        
        /// <summary>
        /// Constructor for the GetKeywordsByEditorialStatusRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatusRequest</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByEditorialStatusRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByEditorialStatusRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatusRequest</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that contains the keywords to retrieve.</param>
        /// <param name="EditorialStatus">The review status of the keywords to retrieve.</param>
        public GetKeywordsByEditorialStatusRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, Microsoft.BingAds.CampaignManagement.KeywordEditorialStatus EditorialStatus)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.EditorialStatus = EditorialStatus;
        }
    }
    
    /// <summary>
    /// Retrieves the keywords with the specified editorial review status.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Response Object</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByEditorialStatus">GetKeywordsByEditorialStatus</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByEditorialStatusResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByEditorialStatusResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Keyword objects that contains information about the keywords that were retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords;
        
        /// <summary>
        /// Constructor for the GetKeywordsByEditorialStatusResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatusResponse</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByEditorialStatusResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByEditorialStatusResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatusResponse</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Keywords">An array of Keyword objects that contains information about the keywords that were retrieved.</param>
        public GetKeywordsByEditorialStatusResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords)
        {
            this.TrackingId = TrackingId;
            this.Keywords = Keywords;
        }
    }
    
    /// <summary>
    /// Retrieves the specified keywords.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByIds">GetKeywordsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group whose keywords you want to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// A maximum of 1,000 identifiers of the keywords to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> KeywordIds;
        
        /// <summary>
        /// Constructor for the GetKeywordsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group whose keywords you want to get.</param>
        /// <param name="KeywordIds">A maximum of 1,000 identifiers of the keywords to get.</param>
        public GetKeywordsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> KeywordIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.KeywordIds = KeywordIds;
        }
    }
    
    /// <summary>
    /// Retrieves the specified keywords.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByIds">GetKeywordsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Keyword objects that corresponds directly to the keyword identifiers that you specified in the request. If a keyword does not exist, the corresponding element of the array is set to NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any keywords that were not successfully retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetKeywordsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Keywords">An array of Keyword objects that corresponds directly to the keyword identifiers that you specified in the request. If a keyword does not exist, the corresponding element of the array is set to NULL.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any keywords that were not successfully retrieved.</param>
        public GetKeywordsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.Keywords = Keywords;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Retrieves the keywords for an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Request Object</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByAdGroupId">GetKeywordsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByAdGroupIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByAdGroupIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that keywords are returned for.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// Constructor for the GetKeywordsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByAdGroupIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that keywords are returned for.</param>
        public GetKeywordsByAdGroupIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
        }
    }
    
    /// <summary>
    /// Retrieves the keywords for an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Response Object</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetKeywordsByAdGroupId">GetKeywordsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKeywordsByAdGroupIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetKeywordsByAdGroupIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords;
        
        /// <summary>
        /// Constructor for the GetKeywordsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        public GetKeywordsByAdGroupIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetKeywordsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Keywords">An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.</param>
        public GetKeywordsByAdGroupIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords)
        {
            this.TrackingId = TrackingId;
            this.Keywords = Keywords;
        }
    }
    
    /// <summary>
    /// Updates the keywords within a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Request Object</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateKeywords">UpdateKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateKeywordsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateKeywordsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group whose keywords will be updated.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of Keyword objects that contains the updated keyword information. The Id element of each of these objects identifies the keyword to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords;
        
        /// <summary>
        /// Constructor for the UpdateKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateKeywordsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateKeywordsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywordsRequest</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group whose keywords will be updated.</param>
        /// <param name="Keywords">An array of Keyword objects that contains the updated keyword information. The Id element of each of these objects identifies the keyword to update.</param>
        public UpdateKeywordsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Keyword> Keywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.Keywords = Keywords;
        }
    }
    
    /// <summary>
    /// Updates the keywords within a specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Response Object</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateKeywords">UpdateKeywords</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateKeywordsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateKeywordsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any keywords that were not successfully updated.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the UpdateKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateKeywordsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateKeywordsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywordsResponse</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any keywords that were not successfully updated.</param>
        public UpdateKeywordsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Request Object</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AppealEditorialRejections">AppealEditorialRejections</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppealEditorialRejectionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AppealEditorialRejectionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of unique identifiers of the ads or keywords that failed editorial review. The list must include all ads or all keywords - the list cannot include a mix ads and keywords. The list can contain a maximum of 1,000 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> EntityIds;
        
        /// <summary>
        /// The type of entities that the entity list contains.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.EntityType EntityType;
        
        /// <summary>
        /// The justification for the appeal. The string can contain a maximum of 1,000 characters. The justification applies to all of the specified entities.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public string JustificationText;
        
        /// <summary>
        /// Constructor for the AppealEditorialRejectionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejectionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        public AppealEditorialRejectionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AppealEditorialRejectionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejectionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityIds">A list of unique identifiers of the ads or keywords that failed editorial review. The list must include all ads or all keywords - the list cannot include a mix ads and keywords. The list can contain a maximum of 1,000 identifiers.</param>
        /// <param name="EntityType">The type of entities that the entity list contains.</param>
        /// <param name="JustificationText">The justification for the appeal. The string can contain a maximum of 1,000 characters. The justification applies to all of the specified entities.</param>
        public AppealEditorialRejectionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> EntityIds, Microsoft.BingAds.CampaignManagement.EntityType EntityType, string JustificationText)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityIds = EntityIds;
            this.EntityType = EntityType;
            this.JustificationText = JustificationText;
        }
    }
    
    /// <summary>
    /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Response Object</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AppealEditorialRejections">AppealEditorialRejections</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppealEditorialRejectionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AppealEditorialRejectionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the AppealEditorialRejectionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejectionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        public AppealEditorialRejectionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AppealEditorialRejectionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejectionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        public AppealEditorialRejectionsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Adds one or more website placement bids to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Request Object</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSitePlacements">AddSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSitePlacementsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddSitePlacementsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group to add the site placement bids to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of SitePlacement objects that contains the site placement bids to add.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements;
        
        /// <summary>
        /// Constructor for the AddSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        public AddSitePlacementsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group to add the site placement bids to.</param>
        /// <param name="SitePlacements">An array of SitePlacement objects that contains the site placement bids to add.</param>
        public AddSitePlacementsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.SitePlacements = SitePlacements;
        }
    }
    
    /// <summary>
    /// Adds one or more website placement bids to an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Response Object</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSitePlacements">AddSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSitePlacementsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddSitePlacementsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The identifiers of the website placement bids that were added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> SitePlacementIds;
        
        /// <summary>
        /// Constructor for the AddSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        public AddSitePlacementsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SitePlacementIds">The identifiers of the website placement bids that were added.</param>
        public AddSitePlacementsResponse(string TrackingId, System.Collections.Generic.IList<long> SitePlacementIds)
        {
            this.TrackingId = TrackingId;
            this.SitePlacementIds = SitePlacementIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more website-placement bids from an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Request Object</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSitePlacements">DeleteSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSitePlacementsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSitePlacementsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group from which to delete the website placement bids.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of long values that specifies the site placement bids to be removed.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> SitePlacementIds;
        
        /// <summary>
        /// Constructor for the DeleteSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSitePlacementsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group from which to delete the website placement bids.</param>
        /// <param name="SitePlacementIds">An array of long values that specifies the site placement bids to be removed.</param>
        public DeleteSitePlacementsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> SitePlacementIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.SitePlacementIds = SitePlacementIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more website-placement bids from an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Response Object</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSitePlacements">DeleteSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSitePlacementsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSitePlacementsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSitePlacementsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSitePlacementsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves the specified website-placement bids from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSitePlacementsByIds">GetSitePlacementsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSitePlacementsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSitePlacementsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that contains the website placement bids to be retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of identifiers that identifies the website placement bids to be retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> SitePlacementIds;
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        public GetSitePlacementsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that contains the website placement bids to be retrieved.</param>
        /// <param name="SitePlacementIds">An array of identifiers that identifies the website placement bids to be retrieved.</param>
        public GetSitePlacementsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<long> SitePlacementIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.SitePlacementIds = SitePlacementIds;
        }
    }
    
    /// <summary>
    /// Retrieves the specified website-placement bids from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSitePlacementsByIds">GetSitePlacementsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSitePlacementsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSitePlacementsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements;
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        public GetSitePlacementsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SitePlacements">An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</param>
        public GetSitePlacementsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements)
        {
            this.TrackingId = TrackingId;
            this.SitePlacements = SitePlacements;
        }
    }
    
    /// <summary>
    /// Retrieves all the website-placement bids from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Request Object</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSitePlacementsByAdGroupId">GetSitePlacementsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSitePlacementsByAdGroupIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSitePlacementsByAdGroupIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that contains the website placement bids that will be retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        public GetSitePlacementsByAdGroupIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that contains the website placement bids that will be retrieved.</param>
        public GetSitePlacementsByAdGroupIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
        }
    }
    
    /// <summary>
    /// Retrieves all the website-placement bids from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Response Object</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSitePlacementsByAdGroupId">GetSitePlacementsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSitePlacementsByAdGroupIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSitePlacementsByAdGroupIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements;
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        public GetSitePlacementsByAdGroupIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSitePlacementsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SitePlacements">An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</param>
        public GetSitePlacementsByAdGroupIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements)
        {
            this.TrackingId = TrackingId;
            this.SitePlacements = SitePlacements;
        }
    }
    
    /// <summary>
    /// Updates one or more website-placement bids in an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Request Object</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateSitePlacements">UpdateSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSitePlacementsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateSitePlacementsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the ad group that the placement bids to be updated belong to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AdGroupId;
        
        /// <summary>
        /// An array of SitePlacement objects that contains the updated website placement bid information.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements;
        
        /// <summary>
        /// Constructor for the UpdateSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateSitePlacementsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateSitePlacementsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacementsRequest</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupId">The identifier of the ad group that the placement bids to be updated belong to.</param>
        /// <param name="SitePlacements">An array of SitePlacement objects that contains the updated website placement bid information.</param>
        public UpdateSitePlacementsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AdGroupId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SitePlacement> SitePlacements)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AdGroupId = AdGroupId;
            this.SitePlacements = SitePlacements;
        }
    }
    
    /// <summary>
    /// Updates one or more website-placement bids in an ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Response Object</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateSitePlacements">UpdateSitePlacements</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSitePlacementsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateSitePlacementsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateSitePlacementsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateSitePlacementsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacementsResponse</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateSitePlacementsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Retrieves placement information for the specified URLs.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Request Object</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetPlacementDetailsForUrls">GetPlacementDetailsForUrls</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlacementDetailsForUrlsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetPlacementDetailsForUrlsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of URLs from the publisher websites where you want to display your text ads.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<string> Urls;
        
        /// <summary>
        /// Constructor for the GetPlacementDetailsForUrlsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrlsRequest</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        public GetPlacementDetailsForUrlsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetPlacementDetailsForUrlsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrlsRequest</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Urls">An array of URLs from the publisher websites where you want to display your text ads.</param>
        public GetPlacementDetailsForUrlsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<string> Urls)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Urls = Urls;
        }
    }
    
    /// <summary>
    /// Retrieves placement information for the specified URLs.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Response Object</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetPlacementDetailsForUrls">GetPlacementDetailsForUrls</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlacementDetailsForUrlsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetPlacementDetailsForUrlsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.PlacementDetail>> PlacementDetails;
        
        /// <summary>
        /// Constructor for the GetPlacementDetailsForUrlsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrlsResponse</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        public GetPlacementDetailsForUrlsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetPlacementDetailsForUrlsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrlsResponse</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PlacementDetails">A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.</param>
        public GetPlacementDetailsForUrlsResponse(string TrackingId, System.Collections.Generic.IList<System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.PlacementDetail>> PlacementDetails)
        {
            this.TrackingId = TrackingId;
            this.PlacementDetails = PlacementDetails;
        }
    }
    
    /// <summary>
    /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetEditorialReasonsByIds">GetEditorialReasonsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEditorialReasonsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetEditorialReasonsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the specified entities.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A list of unique identifiers that identifies the ads or keywords that failed editorial review. The list must include all ads or all keywords - the list cannot include a mix ads and keywords. The list can contain a maximum of 1,000 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> EntityIds;
        
        /// <summary>
        /// The type of entities that the entity list contains.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.EntityType EntityType;
        
        /// <summary>
        /// Constructor for the GetEditorialReasonsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        public GetEditorialReasonsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetEditorialReasonsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the specified entities.</param>
        /// <param name="EntityIds">A list of unique identifiers that identifies the ads or keywords that failed editorial review. The list must include all ads or all keywords - the list cannot include a mix ads and keywords. The list can contain a maximum of 1,000 identifiers.</param>
        /// <param name="EntityType">The type of entities that the entity list contains.</param>
        public GetEditorialReasonsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> EntityIds, Microsoft.BingAds.CampaignManagement.EntityType EntityType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.EntityIds = EntityIds;
            this.EntityType = EntityType;
        }
    }
    
    /// <summary>
    /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetEditorialReasonsByIds">GetEditorialReasonsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEditorialReasonsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetEditorialReasonsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialReasonCollection> EditorialReasons;
        
        /// <summary>
        /// Constructor for the GetEditorialReasonsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        public GetEditorialReasonsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetEditorialReasonsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EditorialReasons">A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.</param>
        public GetEditorialReasonsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EditorialReasonCollection> EditorialReasons)
        {
            this.TrackingId = TrackingId;
            this.EditorialReasons = EditorialReasons;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountMigrationStatusesRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAccountMigrationStatusesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AccountIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string MigrationType;
        
        public GetAccountMigrationStatusesRequest()
        {
        }
        
        public GetAccountMigrationStatusesRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> AccountIds, string MigrationType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountIds = AccountIds;
            this.MigrationType = MigrationType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountMigrationStatusesResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAccountMigrationStatusesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AccountMigrationStatusesInfo> MigrationStatuses;
        
        public GetAccountMigrationStatusesResponse()
        {
        }
        
        public GetAccountMigrationStatusesResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AccountMigrationStatusesInfo> MigrationStatuses)
        {
            this.TrackingId = TrackingId;
            this.MigrationStatuses = MigrationStatuses;
        }
    }
    
    /// <summary>
    /// Adds one or more ad extensions to an account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Request Object</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdExtensions">AddAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdExtensionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdExtensionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account to add the extensions to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of ad extensions of any type to add to the account. You can specify a maximum of 100 extensions per call.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions;
        
        /// <summary>
        /// Constructor for the AddAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdExtensionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account to add the extensions to.</param>
        /// <param name="AdExtensions">The list of ad extensions of any type to add to the account. You can specify a maximum of 100 extensions per call.</param>
        public AddAdExtensionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensions = AdExtensions;
        }
    }
    
    /// <summary>
    /// Adds one or more ad extensions to an account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Response Object</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdExtensions">AddAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdExtensionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdExtensionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdentity> AdExtensionIdentities;
        
        /// <summary>
        /// Constructor for the AddAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdExtensionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdExtensionIdentities">The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.</param>
        public AddAdExtensionsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdentity> AdExtensionIdentities)
        {
            this.TrackingId = TrackingId;
            this.AdExtensionIdentities = AdExtensionIdentities;
        }
    }
    
    /// <summary>
    /// Gets the specified ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsByIds">GetAdExtensionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the ad extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A list of ad extension identifiers. You can specify a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdExtensionIds;
        
        /// <summary>
        /// The types of ad extensions that the list of identifiers contains.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the ad extensions.</param>
        /// <param name="AdExtensionIds">A list of ad extension identifiers. You can specify a maximum of 100 identifiers.</param>
        /// <param name="AdExtensionType">The types of ad extensions that the list of identifiers contains.</param>
        public GetAdExtensionsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> AdExtensionIds, Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionIds = AdExtensionIds;
            this.AdExtensionType = AdExtensionType;
        }
    }
    
    /// <summary>
    /// Gets the specified ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsByIds">GetAdExtensionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdExtensions">A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.</param>
        public GetAdExtensionsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions)
        {
            this.TrackingId = TrackingId;
            this.AdExtensions = AdExtensions;
        }
    }
    
    /// <summary>
    /// Updates one or more ad extensions within an account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Request Object</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdExtensions">UpdateAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdExtensionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdExtensionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account which contains the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of ad extensions of any type, to update within the account. You may specify a maximum of 100 extensions per call.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions;
        
        /// <summary>
        /// Constructor for the UpdateAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdExtensionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account which contains the extensions.</param>
        /// <param name="AdExtensions">The list of ad extensions of any type, to update within the account. You may specify a maximum of 100 extensions per call.</param>
        public UpdateAdExtensionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtension> AdExtensions)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensions = AdExtensions;
        }
    }
    
    /// <summary>
    /// Updates one or more ad extensions within an account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Response Object</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdExtensions">UpdateAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdExtensionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdExtensionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdExtensionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdExtensionsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Deletes one or more ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Request Object</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensions">DeleteAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdExtensionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdExtensionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The identifiers of the extensions to delete. You can specify a maximum of 100 identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdExtensionIds;
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the extensions.</param>
        /// <param name="AdExtensionIds">The identifiers of the extensions to delete. You can specify a maximum of 100 identifiers.</param>
        public DeleteAdExtensionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> AdExtensionIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionIds = AdExtensionIds;
        }
    }
    
    /// <summary>
    /// Deletes one or more ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Response Object</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensions">DeleteAdExtensions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdExtensionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdExtensionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets editorial rejection reasons for the respective ad extension and entity associations.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Request Object</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsEditorialReasons">GetAdExtensionsEditorialReasons</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsEditorialReasonsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsEditorialReasonsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of ad extensions and corresponding entity associations to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations;
        
        /// <summary>
        /// Filters the returned associations by entity type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.AssociationType AssociationType;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsEditorialReasonsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasonsRequest</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsEditorialReasonsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsEditorialReasonsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasonsRequest</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the extensions.</param>
        /// <param name="AdExtensionIdToEntityIdAssociations">The list of ad extensions and corresponding entity associations to get.</param>
        /// <param name="AssociationType">Filters the returned associations by entity type.</param>
        public GetAdExtensionsEditorialReasonsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations, Microsoft.BingAds.CampaignManagement.AssociationType AssociationType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionIdToEntityIdAssociations = AdExtensionIdToEntityIdAssociations;
            this.AssociationType = AssociationType;
        }
    }
    
    /// <summary>
    /// Gets editorial rejection reasons for the respective ad extension and entity associations.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Response Object</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsEditorialReasons">GetAdExtensionsEditorialReasons</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsEditorialReasonsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsEditorialReasonsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The collection of ad extension editorial reasons.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialReasonCollection> EditorialReasons;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsEditorialReasonsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasonsResponse</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsEditorialReasonsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsEditorialReasonsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasonsResponse</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EditorialReasons">The collection of ad extension editorial reasons.</param>
        public GetAdExtensionsEditorialReasonsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionEditorialReasonCollection> EditorialReasons)
        {
            this.TrackingId = TrackingId;
            this.EditorialReasons = EditorialReasons;
        }
    }
    
    /// <summary>
    /// Associates the specified ad extensions with the respective campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetAdExtensionsAssociations">SetAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAdExtensionsAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetAdExtensionsAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of ad extensions to associate with campaigns or ad groups. You may either specify a list of associations for campaigns, or specify a list of associations for ad groups per service call. Specify the entity type with the AssociationType element.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations;
        
        /// <summary>
        /// The type of all entities specified in the AdExtensionIdToEntityIdAssociations list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.AssociationType AssociationType;
        
        /// <summary>
        /// Constructor for the SetAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        public SetAdExtensionsAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the extensions.</param>
        /// <param name="AdExtensionIdToEntityIdAssociations">The list of ad extensions to associate with campaigns or ad groups. You may either specify a list of associations for campaigns, or specify a list of associations for ad groups per service call. Specify the entity type with the AssociationType element.</param>
        /// <param name="AssociationType">The type of all entities specified in the AdExtensionIdToEntityIdAssociations list.</param>
        public SetAdExtensionsAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations, Microsoft.BingAds.CampaignManagement.AssociationType AssociationType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionIdToEntityIdAssociations = AdExtensionIdToEntityIdAssociations;
            this.AssociationType = AssociationType;
        }
    }
    
    /// <summary>
    /// Associates the specified ad extensions with the respective campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetAdExtensionsAssociations">SetAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAdExtensionsAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetAdExtensionsAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the SetAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        public SetAdExtensionsAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        public SetAdExtensionsAssociationsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsAssociations">GetAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// Filters the returned associations by ad extension type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType;
        
        /// <summary>
        /// Filters the returned associations by entity type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.AssociationType AssociationType;
        
        /// <summary>
        /// The list of entity identifiers by which you may request the respective ad extension associations.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=3)]
        public System.Collections.Generic.IList<long> EntityIds;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the extensions.</param>
        /// <param name="AdExtensionType">Filters the returned associations by ad extension type.</param>
        /// <param name="AssociationType">Filters the returned associations by entity type.</param>
        /// <param name="EntityIds">The list of entity identifiers by which you may request the respective ad extension associations.</param>
        public GetAdExtensionsAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType, Microsoft.BingAds.CampaignManagement.AssociationType AssociationType, System.Collections.Generic.IList<long> EntityIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionType = AdExtensionType;
            this.AssociationType = AssociationType;
            this.EntityIds = EntityIds;
        }
    }
    
    /// <summary>
    /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionsAssociations">GetAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionsAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionsAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of ad extension association collections.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionAssociationCollection> AdExtensionAssociationCollection;
        
        /// <summary>
        /// Constructor for the GetAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionsAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdExtensionAssociationCollection">An array of ad extension association collections.</param>
        public GetAdExtensionsAssociationsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionAssociationCollection> AdExtensionAssociationCollection)
        {
            this.TrackingId = TrackingId;
            this.AdExtensionAssociationCollection = AdExtensionAssociationCollection;
        }
    }
    
    /// <summary>
    /// Removes the specified association from the respective campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensionsAssociations">DeleteAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdExtensionsAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdExtensionsAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the extensions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of ad extensions that are associated with campaigns or ad groups before calling this operation.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations;
        
        /// <summary>
        /// The entity type or types associated with an ad extension.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.AssociationType AssociationType;
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the extensions.</param>
        /// <param name="AdExtensionIdToEntityIdAssociations">The list of ad extensions that are associated with campaigns or ad groups before calling this operation.</param>
        /// <param name="AssociationType">The entity type or types associated with an ad extension.</param>
        public DeleteAdExtensionsAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdExtensionIdToEntityIdAssociation> AdExtensionIdToEntityIdAssociations, Microsoft.BingAds.CampaignManagement.AssociationType AssociationType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionIdToEntityIdAssociations = AdExtensionIdToEntityIdAssociations;
            this.AssociationType = AssociationType;
        }
    }
    
    /// <summary>
    /// Removes the specified association from the respective campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdExtensionsAssociations">DeleteAdExtensionsAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdExtensionsAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdExtensionsAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdExtensionsAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdExtensionsAssociationsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Gets the ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Request Object</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionIdsByAccountId">GetAdExtensionIdsByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionIdsByAccountIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionIdsByAccountIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that contains the ad extensions to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The types of ad extensions to get from the account. You can specify one or more types. For possible values, see AdExtensionsTypeFilter.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType;
        
        /// <summary>
        /// A value that filters the extensions based on whether they're associated with a specific entity type. For possible values, see AssociationType. Note: To get all extensions including those not associated with any entity, set this element to NULL.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.AssociationType> AssociationType;
        
        /// <summary>
        /// Constructor for the GetAdExtensionIdsByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionIdsByAccountIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionIdsByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that contains the ad extensions to get.</param>
        /// <param name="AdExtensionType">The types of ad extensions to get from the account. You can specify one or more types. For possible values, see AdExtensionsTypeFilter.</param>
        /// <param name="AssociationType">A value that filters the extensions based on whether they're associated with a specific entity type. For possible values, see AssociationType. Note: To get all extensions including those not associated with any entity, set this element to NULL.</param>
        public GetAdExtensionIdsByAccountIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, Microsoft.BingAds.CampaignManagement.AdExtensionsTypeFilter AdExtensionType, System.Nullable<Microsoft.BingAds.CampaignManagement.AssociationType> AssociationType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdExtensionType = AdExtensionType;
            this.AssociationType = AssociationType;
        }
    }
    
    /// <summary>
    /// Gets the ad extensions from the account's ad extension library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Response Object</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdExtensionIdsByAccountId">GetAdExtensionIdsByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdExtensionIdsByAccountIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdExtensionIdsByAccountIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AdExtensionIds;
        
        /// <summary>
        /// Constructor for the GetAdExtensionIdsByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdExtensionIdsByAccountIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdExtensionIdsByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdExtensionIds">A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.</param>
        public GetAdExtensionIdsByAccountIdResponse(string TrackingId, System.Collections.Generic.IList<long> AdExtensionIds)
        {
            this.TrackingId = TrackingId;
            this.AdExtensionIds = AdExtensionIds;
        }
    }
    
    /// <summary>
    /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Request Object</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddMedia">AddMedia</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMediaRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddMediaRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the media library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// An array of Media to add to the account's media library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Media> Media;
        
        /// <summary>
        /// Constructor for the AddMediaRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMediaRequest</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        public AddMediaRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddMediaRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMediaRequest</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the media library.</param>
        /// <param name="Media">An array of Media to add to the account's media library.</param>
        public AddMediaRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Media> Media)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.Media = Media;
        }
    }
    
    /// <summary>
    /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Response Object</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddMedia">AddMedia</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMediaResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddMediaResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> MediaIds;
        
        /// <summary>
        /// Constructor for the AddMediaResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMediaResponse</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        public AddMediaResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddMediaResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMediaResponse</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaIds">The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.</param>
        public AddMediaResponse(string TrackingId, System.Collections.Generic.IList<long> MediaIds)
        {
            this.TrackingId = TrackingId;
            this.MediaIds = MediaIds;
        }
    }
    
    /// <summary>
    /// Deletes the specified media from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Request Object</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteMedia">DeleteMedia</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMediaRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteMediaRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the media library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A maximum of 100 media identifiers to delete from the account's media library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> MediaIds;
        
        /// <summary>
        /// Constructor for the DeleteMediaRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMediaRequest</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteMediaRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteMediaRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMediaRequest</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the media library.</param>
        /// <param name="MediaIds">A maximum of 100 media identifiers to delete from the account's media library.</param>
        public DeleteMediaRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> MediaIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.MediaIds = MediaIds;
        }
    }
    
    /// <summary>
    /// Deletes the specified media from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Response Object</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteMedia">DeleteMedia</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMediaResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteMediaResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteMediaResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMediaResponse</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteMediaResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteMediaResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMediaResponse</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors"></param>
        public DeleteMediaResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the specified media from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaByIds">GetMediaByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the media library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The identifiers of the media to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> MediaIds;
        
        /// <summary>
        /// Constructor for the GetMediaByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the media library.</param>
        /// <param name="MediaIds">The identifiers of the media to get.</param>
        public GetMediaByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> MediaIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.MediaIds = MediaIds;
        }
    }
    
    /// <summary>
    /// Gets the specified media from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaByIds">GetMediaByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The specified media from the library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Media> Media;
        
        /// <summary>
        /// Constructor for the GetMediaByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Media">The specified media from the library.</param>
        public GetMediaByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.Media> Media)
        {
            this.TrackingId = TrackingId;
            this.Media = Media;
        }
    }
    
    /// <summary>
    /// Gets the media meta data of the specified entity type from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Request Object</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaMetaDataByAccountId">GetMediaMetaDataByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaMetaDataByAccountIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaMetaDataByAccountIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// Determines the type of media enabled entity to get meta data. Currently only ImageAdExtension is supported.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntities;
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaMetaDataByAccountIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaEnabledEntities">Determines the type of media enabled entity to get meta data. Currently only ImageAdExtension is supported.</param>
        public GetMediaMetaDataByAccountIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntities)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.MediaEnabledEntities = MediaEnabledEntities;
        }
    }
    
    /// <summary>
    /// Gets the media meta data of the specified entity type from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Response Object</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaMetaDataByAccountId">GetMediaMetaDataByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaMetaDataByAccountIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaMetaDataByAccountIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The specified media meta data from the library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaMetaData> MediaMetaData;
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaMetaDataByAccountIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaMetaData">The specified media meta data from the library.</param>
        public GetMediaMetaDataByAccountIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaMetaData> MediaMetaData)
        {
            this.TrackingId = TrackingId;
            this.MediaMetaData = MediaMetaData;
        }
    }
    
    /// <summary>
    /// Gets the specified media meta data from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaMetaDataByIds">GetMediaMetaDataByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaMetaDataByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaMetaDataByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifiers of the media to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> MediaIds;
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaMetaDataByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaIds">The identifiers of the media to get.</param>
        public GetMediaMetaDataByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> MediaIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.MediaIds = MediaIds;
        }
    }
    
    /// <summary>
    /// Gets the specified media meta data from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaMetaDataByIds">GetMediaMetaDataByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaMetaDataByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaMetaDataByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The specified media meta data from the library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaMetaData> MediaMetaData;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any media meta data that were not successfully retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaMetaDataByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaMetaDataByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaMetaData">The specified media meta data from the library.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any media meta data that were not successfully retrieved.</param>
        public GetMediaMetaDataByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaMetaData> MediaMetaData, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.MediaMetaData = MediaMetaData;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the media associations of the specified entity type from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaAssociations">GetMediaAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// Filters the results to only return media associations with the specified type of media enabled entity.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntities;
        
        /// <summary>
        /// The identifiers of the media to get corresponding entity associations.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> MediaIds;
        
        /// <summary>
        /// Constructor for the GetMediaAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaEnabledEntities">Filters the results to only return media associations with the specified type of media enabled entity.</param>
        /// <param name="MediaIds">The identifiers of the media to get corresponding entity associations.</param>
        public GetMediaAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, Microsoft.BingAds.CampaignManagement.MediaEnabledEntityFilter MediaEnabledEntities, System.Collections.Generic.IList<long> MediaIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.MediaEnabledEntities = MediaEnabledEntities;
            this.MediaIds = MediaIds;
        }
    }
    
    /// <summary>
    /// Gets the media associations of the specified entity type from an account's media library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetMediaAssociations">GetMediaAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMediaAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetMediaAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The specified media meta data from the library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaAssociation>> MediaAssociations;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any media associations that were not successfully retrieved.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetMediaAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        public GetMediaAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetMediaAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="MediaAssociations">The specified media meta data from the library.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any media associations that were not successfully retrieved.</param>
        public GetMediaAssociationsResponse(string TrackingId, System.Collections.Generic.IList<System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.MediaAssociation>> MediaAssociations, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.MediaAssociations = MediaAssociations;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the specified criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByIds">GetAdGroupCriterionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupCriterionsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupCriterionsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the criterions to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A list of unique identifiers that identify the criterions to get. You can specify a maximum of 100 IDs.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupCriterionIds;
        
        /// <summary>
        /// The identifier of the ad group that owns the criterions to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<long> AdGroupId;
        
        /// <summary>
        /// The types of ad group criterion to get, for example Product. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=3)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType;
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupCriterionsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the criterions to get.</param>
        /// <param name="AdGroupCriterionIds">A list of unique identifiers that identify the criterions to get. You can specify a maximum of 100 IDs.</param>
        /// <param name="AdGroupId">The identifier of the ad group that owns the criterions to get.</param>
        /// <param name="CriterionType">The types of ad group criterion to get, for example Product. You can specify one or more types.</param>
        public GetAdGroupCriterionsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> AdGroupCriterionIds, System.Nullable<long> AdGroupId, System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdGroupCriterionIds = AdGroupCriterionIds;
            this.AdGroupId = AdGroupId;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Gets the specified criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByIds">GetAdGroupCriterionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupCriterionsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupCriterionsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions;
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupCriterionsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupCriterions">The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</param>
        public GetAdGroupCriterionsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions)
        {
            this.TrackingId = TrackingId;
            this.AdGroupCriterions = AdGroupCriterions;
        }
    }
    
    /// <summary>
    /// Gets the specified types of criterions from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Request Object</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByAdGroupId">GetAdGroupCriterionsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupCriterionsByAdGroupIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupCriterionsByAdGroupIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The identifier of the ad group that contains the criterions to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public long AdGroupId;
        
        /// <summary>
        /// The types of criterions to get from the ad group. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public Microsoft.BingAds.CampaignManagement.CriterionType CriterionTypeFilter;
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupCriterionsByAdGroupIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByAdGroupIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupIdRequest</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the ad group.</param>
        /// <param name="AdGroupId">The identifier of the ad group that contains the criterions to get.</param>
        /// <param name="CriterionTypeFilter">The types of criterions to get from the ad group. You can specify one or more types.</param>
        public GetAdGroupCriterionsByAdGroupIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, long AdGroupId, Microsoft.BingAds.CampaignManagement.CriterionType CriterionTypeFilter)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdGroupId = AdGroupId;
            this.CriterionTypeFilter = CriterionTypeFilter;
        }
    }
    
    /// <summary>
    /// Gets the specified types of criterions from the specified ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Response Object</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetAdGroupCriterionsByAdGroupId">GetAdGroupCriterionsByAdGroupId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdGroupCriterionsByAdGroupIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetAdGroupCriterionsByAdGroupIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions;
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        public GetAdGroupCriterionsByAdGroupIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetAdGroupCriterionsByAdGroupIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupIdResponse</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupCriterions">The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.</param>
        public GetAdGroupCriterionsByAdGroupIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions)
        {
            this.TrackingId = TrackingId;
            this.AdGroupCriterions = AdGroupCriterions;
        }
    }
    
    /// <summary>
    /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroupCriterions">AddAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdGroupCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdGroupCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account to add the criterions to.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A list of criterions that determine whether ads in the ad group are served.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions;
        
        /// <summary>
        /// The type of ad group criterion to add, for example Product. You can specify only one type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType;
        
        /// <summary>
        /// Constructor for the AddAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdGroupCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account to add the criterions to.</param>
        /// <param name="AdGroupCriterions">A list of criterions that determine whether ads in the ad group are served.</param>
        /// <param name="CriterionType">The type of ad group criterion to add, for example Product. You can specify only one type.</param>
        public AddAdGroupCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions, System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdGroupCriterions = AdGroupCriterions;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddAdGroupCriterions">AddAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAdGroupCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddAdGroupCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> AdGroupCriterionIds;
        
        /// <summary>
        /// Constructor for the AddAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        public AddAdGroupCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupCriterionIds">A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.</param>
        public AddAdGroupCriterionsResponse(string TrackingId, System.Collections.Generic.IList<long> AdGroupCriterionIds)
        {
            this.TrackingId = TrackingId;
            this.AdGroupCriterionIds = AdGroupCriterionIds;
        }
    }
    
    /// <summary>
    /// Updates one or more ad group criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdGroupCriterions">UpdateAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdGroupCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdGroupCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the criterions to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// The list of criterions to update. You may specify a maximum of 100 criterions.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions;
        
        /// <summary>
        /// The type of ad group criterion to update, for example Product. You can specify only one type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType;
        
        /// <summary>
        /// Constructor for the UpdateAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the criterions to update.</param>
        /// <param name="AdGroupCriterions">The list of criterions to update. You may specify a maximum of 100 criterions.</param>
        /// <param name="CriterionType">The type of ad group criterion to update, for example Product. You can specify only one type.</param>
        public UpdateAdGroupCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterion> AdGroupCriterions, System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdGroupCriterions = AdGroupCriterions;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Updates one or more ad group criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateAdGroupCriterions">UpdateAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdGroupCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateAdGroupCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the UpdateAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateAdGroupCriterionsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Deletes the specified ad group criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdGroupCriterions">DeleteAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdGroupCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdGroupCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the account that owns the criterion to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        /// <summary>
        /// A list of unique identifiers that identify the criterion to delete. You can specify a maximum on 1,000 identifiers per call.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> AdGroupCriterionIds;
        
        /// <summary>
        /// The identifier of the ad group that owns the criterion to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public long AdGroupId;
        
        /// <summary>
        /// The type of ad group criterion to delete, for example Product. You can specify only one type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=3)]
        public System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType;
        
        /// <summary>
        /// Constructor for the DeleteAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdGroupCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AccountId">The identifier of the account that owns the criterion to delete.</param>
        /// <param name="AdGroupCriterionIds">A list of unique identifiers that identify the criterion to delete. You can specify a maximum on 1,000 identifiers per call.</param>
        /// <param name="AdGroupId">The identifier of the ad group that owns the criterion to delete.</param>
        /// <param name="CriterionType">The type of ad group criterion to delete, for example Product. You can specify only one type.</param>
        public DeleteAdGroupCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> AdGroupCriterionIds, long AdGroupId, System.Nullable<Microsoft.BingAds.CampaignManagement.CriterionType> CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.AdGroupCriterionIds = AdGroupCriterionIds;
            this.AdGroupId = AdGroupId;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Deletes the specified ad group criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteAdGroupCriterions">DeleteAdGroupCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAdGroupCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteAdGroupCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// Constructor for the DeleteAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteAdGroupCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteAdGroupCriterionsResponse(string TrackingId)
        {
            this.TrackingId = TrackingId;
        }
    }
    
    /// <summary>
    /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Request Object</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.ApplyProductPartitionActions">ApplyProductPartitionActions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApplyProductPartitionActionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class ApplyProductPartitionActionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of up to 5,000 AdGroupCriterionAction objects that each contain an Action element and either a BiddableAdGroupCriterion or NegativeAdGroupCriterion.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterionAction> CriterionActions;
        
        /// <summary>
        /// Constructor for the ApplyProductPartitionActionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        public ApplyProductPartitionActionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the ApplyProductPartitionActionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CriterionActions">A list of up to 5,000 AdGroupCriterionAction objects that each contain an Action element and either a BiddableAdGroupCriterion or NegativeAdGroupCriterion.</param>
        public ApplyProductPartitionActionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.AdGroupCriterionAction> CriterionActions)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CriterionActions = CriterionActions;
        }
    }
    
    /// <summary>
    /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Response Object</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.ApplyProductPartitionActions">ApplyProductPartitionActions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ApplyProductPartitionActionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class ApplyProductPartitionActionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of identifiers that identify the criterion that had the action applied. The list of identifiers corresponds directly to the list of criterion in the request. Note: If any criterion action failed, then all remaining criterion actions will be rejected, and all elements in this list will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Nullable<long>> AdGroupCriterionIds;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any criterion action that was not successfully applied. Note: For criterion which failed due to user error, an actionable error code will be returned.For criterion that might have otherwise succeeded, a generic error will be returned which explains that a related entity failed.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the ApplyProductPartitionActionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        public ApplyProductPartitionActionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the ApplyProductPartitionActionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="AdGroupCriterionIds">A list of identifiers that identify the criterion that had the action applied. The list of identifiers corresponds directly to the list of criterion in the request. Note: If any criterion action failed, then all remaining criterion actions will be rejected, and all elements in this list will be null.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any criterion action that was not successfully applied. Note: For criterion which failed due to user error, an actionable error code will be returned.For criterion that might have otherwise succeeded, a generic error will be returned which explains that a related entity failed.</param>
        public ApplyProductPartitionActionsResponse(string TrackingId, System.Collections.Generic.IList<System.Nullable<long>> AdGroupCriterionIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.AdGroupCriterionIds = AdGroupCriterionIds;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the Bing Merchant Center stores for the specified customer.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Request Object</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetBMCStoresByCustomerId">GetBMCStoresByCustomerId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBMCStoresByCustomerIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetBMCStoresByCustomerIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// Constructor for the GetBMCStoresByCustomerIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerIdRequest</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        public GetBMCStoresByCustomerIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetBMCStoresByCustomerIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerIdRequest</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        public GetBMCStoresByCustomerIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
        }
    }
    
    /// <summary>
    /// Gets the Bing Merchant Center stores for the specified customer.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Response Object</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetBMCStoresByCustomerId">GetBMCStoresByCustomerId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBMCStoresByCustomerIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetBMCStoresByCustomerIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The list of Bing Merchant Center stores for the specified customer.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BMCStore> BMCStores;
        
        /// <summary>
        /// Constructor for the GetBMCStoresByCustomerIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerIdResponse</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        public GetBMCStoresByCustomerIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetBMCStoresByCustomerIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerIdResponse</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="BMCStores">The list of Bing Merchant Center stores for the specified customer.</param>
        public GetBMCStoresByCustomerIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BMCStore> BMCStores)
        {
            this.TrackingId = TrackingId;
            this.BMCStores = BMCStores;
        }
    }
    
    /// <summary>
    /// Adds negative keywords to the specified campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Request Object</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddNegativeKeywordsToEntities">AddNegativeKeywordsToEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNegativeKeywordsToEntitiesRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddNegativeKeywordsToEntitiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of negative keyword with associated entity such as a campaign or ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords;
        
        /// <summary>
        /// Constructor for the AddNegativeKeywordsToEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        public AddNegativeKeywordsToEntitiesRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddNegativeKeywordsToEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityNegativeKeywords">An array of negative keyword with associated entity such as a campaign or ad group.</param>
        public AddNegativeKeywordsToEntitiesRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityNegativeKeywords = EntityNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Adds negative keywords to the specified campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Response Object</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddNegativeKeywordsToEntities">AddNegativeKeywordsToEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNegativeKeywordsToEntitiesResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddNegativeKeywordsToEntitiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of IdCollection corresponding to the negative keywords that were added for the corresponding entity.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.IdCollection> NegativeKeywordIds;
        
        /// <summary>
        /// An array of BatchErrorCollection objects that contain details for any negative keyword that were not successfully added. The top level error within each BatchErrorCollection corresponds to potential campaign or ad group errors. The nested list of BatchError objects would include any errors specific to the negative keywords that you attempted to add to the campaign or ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors;
        
        /// <summary>
        /// Constructor for the AddNegativeKeywordsToEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        public AddNegativeKeywordsToEntitiesResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddNegativeKeywordsToEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="NegativeKeywordIds">A list of IdCollection corresponding to the negative keywords that were added for the corresponding entity.</param>
        /// <param name="NestedPartialErrors">An array of BatchErrorCollection objects that contain details for any negative keyword that were not successfully added. The top level error within each BatchErrorCollection corresponds to potential campaign or ad group errors. The nested list of BatchError objects would include any errors specific to the negative keywords that you attempted to add to the campaign or ad group.</param>
        public AddNegativeKeywordsToEntitiesResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.IdCollection> NegativeKeywordIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors)
        {
            this.TrackingId = TrackingId;
            this.NegativeKeywordIds = NegativeKeywordIds;
            this.NestedPartialErrors = NestedPartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByEntityIds">GetNegativeKeywordsByEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByEntityIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByEntityIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of entity identifiers to return the associated negative keywords. Note: The specified entities must all exist within the same parent entity, for example the ad group identifiers must all exist within the same campaign.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> EntityIds;
        
        /// <summary>
        /// The type of entity corresponding to the specified EntityIds element.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string EntityType;
        
        /// <summary>
        /// The identifier of the parent entity corresponding to the specified EntityIds element.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public System.Nullable<long> ParentEntityId;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByEntityIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityIds">An array of entity identifiers to return the associated negative keywords. Note: The specified entities must all exist within the same parent entity, for example the ad group identifiers must all exist within the same campaign.</param>
        /// <param name="EntityType">The type of entity corresponding to the specified EntityIds element.</param>
        /// <param name="ParentEntityId">The identifier of the parent entity corresponding to the specified EntityIds element.</param>
        public GetNegativeKeywordsByEntityIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> EntityIds, string EntityType, System.Nullable<long> ParentEntityId)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityIds = EntityIds;
            this.EntityType = EntityType;
            this.ParentEntityId = ParentEntityId;
        }
    }
    
    /// <summary>
    /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetNegativeKeywordsByEntityIds">GetNegativeKeywordsByEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNegativeKeywordsByEntityIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetNegativeKeywordsByEntityIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of negative keyword with associated entity such as a campaign or ad group.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any negative keywords that were not successfully returned from the corresponding entity.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        public GetNegativeKeywordsByEntityIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetNegativeKeywordsByEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityNegativeKeywords">An array of negative keyword with associated entity such as a campaign or ad group.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any negative keywords that were not successfully returned from the corresponding entity.</param>
        public GetNegativeKeywordsByEntityIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.EntityNegativeKeywords = EntityNegativeKeywords;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes negative keywords from the specified campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Request Object</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteNegativeKeywordsFromEntities">DeleteNegativeKeywordsFromEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteNegativeKeywordsFromEntitiesRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteNegativeKeywordsFromEntitiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of negative keyword with associated entity such as a campaign or ad group. Note: The EntityType specified within each EntityNegativeKeyword must be set to the same value.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords;
        
        /// <summary>
        /// Constructor for the DeleteNegativeKeywordsFromEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteNegativeKeywordsFromEntitiesRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteNegativeKeywordsFromEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityNegativeKeywords">An array of negative keyword with associated entity such as a campaign or ad group. Note: The EntityType specified within each EntityNegativeKeyword must be set to the same value.</param>
        public DeleteNegativeKeywordsFromEntitiesRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.EntityNegativeKeyword> EntityNegativeKeywords)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityNegativeKeywords = EntityNegativeKeywords;
        }
    }
    
    /// <summary>
    /// Deletes negative keywords from the specified campaign or ad group.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Response Object</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteNegativeKeywordsFromEntities">DeleteNegativeKeywordsFromEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteNegativeKeywordsFromEntitiesResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteNegativeKeywordsFromEntitiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteNegativeKeywordsFromEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteNegativeKeywordsFromEntitiesResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteNegativeKeywordsFromEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="NestedPartialErrors">An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.</param>
        public DeleteNegativeKeywordsFromEntitiesResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors)
        {
            this.TrackingId = TrackingId;
            this.NestedPartialErrors = NestedPartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the shared entities such as negative keyword lists from the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Request Object</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntitiesByAccountId">GetSharedEntitiesByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntitiesByAccountIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntitiesByAccountIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The type of shared entity to get from the account's library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public string SharedEntityType;
        
        /// <summary>
        /// Constructor for the GetSharedEntitiesByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntitiesByAccountIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntitiesByAccountIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountIdRequest</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedEntityType">The type of shared entity to get from the account's library.</param>
        public GetSharedEntitiesByAccountIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, string SharedEntityType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.SharedEntityType = SharedEntityType;
        }
    }
    
    /// <summary>
    /// Gets the shared entities such as negative keyword lists from the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Response Object</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntitiesByAccountId">GetSharedEntitiesByAccountId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntitiesByAccountIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntitiesByAccountIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The shared entities from the account's shared library, for example negative keyword lists.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities;
        
        /// <summary>
        /// Constructor for the GetSharedEntitiesByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntitiesByAccountIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntitiesByAccountIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountIdResponse</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedEntities">The shared entities from the account's shared library, for example negative keyword lists.</param>
        public GetSharedEntitiesByAccountIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities)
        {
            this.TrackingId = TrackingId;
            this.SharedEntities = SharedEntities;
        }
    }
    
    /// <summary>
    /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Request Object</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSharedEntity">AddSharedEntity</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSharedEntityRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddSharedEntityRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The shared entity to add to the account's shared library, for example a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public Microsoft.BingAds.CampaignManagement.SharedEntity SharedEntity;
        
        /// <summary>
        /// An array of list items to add to the shared list, for example a list of negative keywords.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems;
        
        /// <summary>
        /// Constructor for the AddSharedEntityRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntityRequest</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        public AddSharedEntityRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddSharedEntityRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntityRequest</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedEntity">The shared entity to add to the account's shared library, for example a negative keyword list.</param>
        /// <param name="ListItems">An array of list items to add to the shared list, for example a list of negative keywords.</param>
        public AddSharedEntityRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, Microsoft.BingAds.CampaignManagement.SharedEntity SharedEntity, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.SharedEntity = SharedEntity;
            this.ListItems = ListItems;
        }
    }
    
    /// <summary>
    /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Response Object</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddSharedEntity">AddSharedEntity</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSharedEntityResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddSharedEntityResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of long values that represents the identifiers for the list items that were added. Note: Items of the list may be returned as null. For each list index where a list item was not added, the corresponding element will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> ListItemIds;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any list items that were not successfully added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// The identifier for the shared entity that was added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public long SharedEntityId;
        
        /// <summary>
        /// Constructor for the AddSharedEntityResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntityResponse</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        public AddSharedEntityResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddSharedEntityResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntityResponse</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="ListItemIds">A list of long values that represents the identifiers for the list items that were added. Note: Items of the list may be returned as null. For each list index where a list item was not added, the corresponding element will be null.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any list items that were not successfully added.</param>
        /// <param name="SharedEntityId">The identifier for the shared entity that was added.</param>
        public AddSharedEntityResponse(string TrackingId, System.Collections.Generic.IList<long> ListItemIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors, long SharedEntityId)
        {
            this.TrackingId = TrackingId;
            this.ListItemIds = ListItemIds;
            this.PartialErrors = PartialErrors;
            this.SharedEntityId = SharedEntityId;
        }
    }
    
    /// <summary>
    /// Gets the list items such as the negative keywords of a negative keyword list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Request Object</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetListItemsBySharedList">GetListItemsBySharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListItemsBySharedListRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetListItemsBySharedListRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The list within the account's shared library, from which to get the shared list items.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public Microsoft.BingAds.CampaignManagement.SharedList SharedList;
        
        /// <summary>
        /// Constructor for the GetListItemsBySharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        public GetListItemsBySharedListRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetListItemsBySharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedList">The list within the account's shared library, from which to get the shared list items.</param>
        public GetListItemsBySharedListRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, Microsoft.BingAds.CampaignManagement.SharedList SharedList)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.SharedList = SharedList;
        }
    }
    
    /// <summary>
    /// Gets the list items such as the negative keywords of a negative keyword list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Response Object</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetListItemsBySharedList">GetListItemsBySharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListItemsBySharedListResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetListItemsBySharedListResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of list items returned from the shared list, for example a list of negative keywords.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems;
        
        /// <summary>
        /// Constructor for the GetListItemsBySharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        public GetListItemsBySharedListResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetListItemsBySharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="ListItems">An array of list items returned from the shared list, for example a list of negative keywords.</param>
        public GetListItemsBySharedListResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems)
        {
            this.TrackingId = TrackingId;
            this.ListItems = ListItems;
        }
    }
    
    /// <summary>
    /// Adds list items such as negative keywords to the corresponding list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Request Object</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddListItemsToSharedList">AddListItemsToSharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddListItemsToSharedListRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddListItemsToSharedListRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of list items to add to the shared list, for example a list of negative keywords.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems;
        
        /// <summary>
        /// The list to add to the account's shared library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.SharedList SharedList;
        
        /// <summary>
        /// Constructor for the AddListItemsToSharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        public AddListItemsToSharedListRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddListItemsToSharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="ListItems">An array of list items to add to the shared list, for example a list of negative keywords.</param>
        /// <param name="SharedList">The list to add to the account's shared library.</param>
        public AddListItemsToSharedListRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedListItem> ListItems, Microsoft.BingAds.CampaignManagement.SharedList SharedList)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.ListItems = ListItems;
            this.SharedList = SharedList;
        }
    }
    
    /// <summary>
    /// Adds list items such as negative keywords to the corresponding list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Response Object</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddListItemsToSharedList">AddListItemsToSharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddListItemsToSharedListResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddListItemsToSharedListResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of long values that represents the identifiers for the list items that were added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> ListItemIds;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any list items that were not successfully added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the AddListItemsToSharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        public AddListItemsToSharedListResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddListItemsToSharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="ListItemIds">A list of long values that represents the identifiers for the list items that were added.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any list items that were not successfully added.</param>
        public AddListItemsToSharedListResponse(string TrackingId, System.Collections.Generic.IList<long> ListItemIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.ListItemIds = ListItemIds;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Updates shared entities such as negative keyword lists within the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Request Object</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateSharedEntities">UpdateSharedEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSharedEntitiesRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateSharedEntitiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The shared entities to update within the account's shared library, for example negative keyword lists.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities;
        
        /// <summary>
        /// Constructor for the UpdateSharedEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateSharedEntitiesRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateSharedEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedEntities">The shared entities to update within the account's shared library, for example negative keyword lists.</param>
        public UpdateSharedEntitiesRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.SharedEntities = SharedEntities;
        }
    }
    
    /// <summary>
    /// Updates shared entities such as negative keyword lists within the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Response Object</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateSharedEntities">UpdateSharedEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSharedEntitiesResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateSharedEntitiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any shared entities that were not successfully updated.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the UpdateSharedEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateSharedEntitiesResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateSharedEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any shared entities that were not successfully updated.</param>
        public UpdateSharedEntitiesResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes list items such as negative keywords from the corresponding list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Request Object</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteListItemsFromSharedList">DeleteListItemsFromSharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteListItemsFromSharedListRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteListItemsFromSharedListRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of identifiers of the list items to delete from the shared list, for example a list of negative keyword identifiers.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> ListItemIds;
        
        /// <summary>
        /// The list within the account's shared library, from which to delete the specified list items.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.SharedList SharedList;
        
        /// <summary>
        /// Constructor for the DeleteListItemsFromSharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteListItemsFromSharedListRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteListItemsFromSharedListRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedListRequest</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="ListItemIds">An array of identifiers of the list items to delete from the shared list, for example a list of negative keyword identifiers.</param>
        /// <param name="SharedList">The list within the account's shared library, from which to delete the specified list items.</param>
        public DeleteListItemsFromSharedListRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> ListItemIds, Microsoft.BingAds.CampaignManagement.SharedList SharedList)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.ListItemIds = ListItemIds;
            this.SharedList = SharedList;
        }
    }
    
    /// <summary>
    /// Deletes list items such as negative keywords from the corresponding list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Response Object</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteListItemsFromSharedList">DeleteListItemsFromSharedList</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteListItemsFromSharedListResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteListItemsFromSharedListResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any list items that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteListItemsFromSharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteListItemsFromSharedListResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteListItemsFromSharedListResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedListResponse</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any list items that were not successfully deleted.</param>
        public DeleteListItemsFromSharedListResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Sets the association between a campaign and a shared entity such as a negative keyword list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetSharedEntityAssociations">SetSharedEntityAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSharedEntityAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetSharedEntityAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of objects that associate a campaign with a shared entity such as a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations;
        
        /// <summary>
        /// Constructor for the SetSharedEntityAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        public SetSharedEntityAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the SetSharedEntityAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Associations">An array of objects that associate a campaign with a shared entity such as a negative keyword list.</param>
        public SetSharedEntityAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Associations = Associations;
        }
    }
    
    /// <summary>
    /// Sets the association between a campaign and a shared entity such as a negative keyword list.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.SetSharedEntityAssociations">SetSharedEntityAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSharedEntityAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class SetSharedEntityAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any associations that were not successfully added.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the SetSharedEntityAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        public SetSharedEntityAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the SetSharedEntityAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any associations that were not successfully added.</param>
        public SetSharedEntityAssociationsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Request Object</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSharedEntityAssociations">DeleteSharedEntityAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSharedEntityAssociationsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSharedEntityAssociationsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of objects that associate a shared entity such as a negative keyword list and an entity such as a campaign.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations;
        
        /// <summary>
        /// Constructor for the DeleteSharedEntityAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSharedEntityAssociationsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSharedEntityAssociationsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociationsRequest</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Associations">An array of objects that associate a shared entity such as a negative keyword list and an entity such as a campaign.</param>
        public DeleteSharedEntityAssociationsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.Associations = Associations;
        }
    }
    
    /// <summary>
    /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Response Object</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSharedEntityAssociations">DeleteSharedEntityAssociations</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSharedEntityAssociationsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSharedEntityAssociationsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any associations that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteSharedEntityAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSharedEntityAssociationsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSharedEntityAssociationsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociationsResponse</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any associations that were not successfully deleted.</param>
        public DeleteSharedEntityAssociationsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsBySharedEntityIds">GetSharedEntityAssociationsBySharedEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntityAssociationsBySharedEntityIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntityAssociationsBySharedEntityIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The type of entity corresponding to the specified EntityIds element.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public string EntityType;
        
        /// <summary>
        /// An array of shared entity identifiers to return associations between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> SharedEntityIds;
        
        /// <summary>
        /// The type of shared entity to get associations from the account's library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public string SharedEntityType;
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsBySharedEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntityAssociationsBySharedEntityIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsBySharedEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityType">The type of entity corresponding to the specified EntityIds element.</param>
        /// <param name="SharedEntityIds">An array of shared entity identifiers to return associations between a campaign and a shared entity such as a negative keyword list.</param>
        /// <param name="SharedEntityType">The type of shared entity to get associations from the account's library.</param>
        public GetSharedEntityAssociationsBySharedEntityIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, string EntityType, System.Collections.Generic.IList<long> SharedEntityIds, string SharedEntityType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityType = EntityType;
            this.SharedEntityIds = SharedEntityIds;
            this.SharedEntityType = SharedEntityType;
        }
    }
    
    /// <summary>
    /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsBySharedEntityIds">GetSharedEntityAssociationsBySharedEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntityAssociationsBySharedEntityIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntityAssociationsBySharedEntityIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of objects that associate a campaign with a shared entity such as a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any associations that were not successfully returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsBySharedEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntityAssociationsBySharedEntityIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsBySharedEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Associations">An array of objects that associate a campaign with a shared entity such as a negative keyword list.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any associations that were not successfully returned.</param>
        public GetSharedEntityAssociationsBySharedEntityIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.Associations = Associations;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsByEntityIds">GetSharedEntityAssociationsByEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntityAssociationsByEntityIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntityAssociationsByEntityIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// An array of entity identifiers to return associations between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> EntityIds;
        
        /// <summary>
        /// The type of entity corresponding to the specified EntityIds element.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public string EntityType;
        
        /// <summary>
        /// The type of shared entity to get associations from the account's library.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=2)]
        public string SharedEntityType;
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsByEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntityAssociationsByEntityIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsByEntityIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="EntityIds">An array of entity identifiers to return associations between a campaign and a shared entity such as a negative keyword list.</param>
        /// <param name="EntityType">The type of entity corresponding to the specified EntityIds element.</param>
        /// <param name="SharedEntityType">The type of shared entity to get associations from the account's library.</param>
        public GetSharedEntityAssociationsByEntityIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> EntityIds, string EntityType, string SharedEntityType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.EntityIds = EntityIds;
            this.EntityType = EntityType;
            this.SharedEntityType = SharedEntityType;
        }
    }
    
    /// <summary>
    /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetSharedEntityAssociationsByEntityIds">GetSharedEntityAssociationsByEntityIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSharedEntityAssociationsByEntityIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetSharedEntityAssociationsByEntityIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of objects that associate a campaign with a shared entity such as a negative keyword list.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any associations that were not successfully returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsByEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        public GetSharedEntityAssociationsByEntityIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetSharedEntityAssociationsByEntityIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="Associations">An array of objects that associate a campaign with a shared entity such as a negative keyword list.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any associations that were not successfully returned.</param>
        public GetSharedEntityAssociationsByEntityIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntityAssociation> Associations, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.Associations = Associations;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes shared entities such as negative keyword lists from the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Request Object</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSharedEntities">DeleteSharedEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSharedEntitiesRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSharedEntitiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The shared entities to delete from the account's shared library, for example negative keyword lists.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities;
        
        /// <summary>
        /// Constructor for the DeleteSharedEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSharedEntitiesRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSharedEntitiesRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntitiesRequest</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="SharedEntities">The shared entities to delete from the account's shared library, for example negative keyword lists.</param>
        public DeleteSharedEntitiesRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.SharedEntity> SharedEntities)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.SharedEntities = SharedEntities;
        }
    }
    
    /// <summary>
    /// Deletes shared entities such as negative keyword lists from the account's library.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Response Object</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteSharedEntities">DeleteSharedEntities</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSharedEntitiesResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteSharedEntitiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any shared entities that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteSharedEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteSharedEntitiesResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteSharedEntitiesResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntitiesResponse</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any shared entities that were not successfully deleted.</param>
        public DeleteSharedEntitiesResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignSizesByAccountIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignSizesByAccountIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long AccountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<long> CampaignIds;
        
        public GetCampaignSizesByAccountIdRequest()
        {
        }
        
        public GetCampaignSizesByAccountIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long AccountId, System.Collections.Generic.IList<long> CampaignIds)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.AccountId = AccountId;
            this.CampaignIds = CampaignIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignSizesByAccountIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignSizesByAccountIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignSize> CampaignSizes;
        
        public GetCampaignSizesByAccountIdResponse()
        {
        }
        
        public GetCampaignSizesByAccountIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignSize> CampaignSizes)
        {
            this.TrackingId = TrackingId;
            this.CampaignSizes = CampaignSizes;
        }
    }
    
    /// <summary>
    /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaignCriterions">AddCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCampaignCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddCampaignCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of criterions that help determine whether ads in each campaign get served.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions;
        
        /// <summary>
        /// The type of campaign criterion to add, for example ProductScope. You can specify only one type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType;
        
        /// <summary>
        /// Constructor for the AddCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        public AddCampaignCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the AddCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterions">A list of criterions that help determine whether ads in each campaign get served.</param>
        /// <param name="CriterionType">The type of campaign criterion to add, for example ProductScope. You can specify only one type.</param>
        public AddCampaignCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions, Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignCriterions = CampaignCriterions;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.AddCampaignCriterions">AddCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCampaignCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class AddCampaignCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request. Note: Items of the list may be returned as null. For each list index where a list item was not added, the corresponding element will be null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<System.Nullable<long>> CampaignCriterionIds;
        
        /// <summary>
        /// An array of BatchErrorCollection objects that contain details for any conditions that were not successfully added for the criterion.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors;
        
        /// <summary>
        /// Constructor for the AddCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        public AddCampaignCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the AddCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterionIds">A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request. Note: Items of the list may be returned as null. For each list index where a list item was not added, the corresponding element will be null.</param>
        /// <param name="NestedPartialErrors">An array of BatchErrorCollection objects that contain details for any conditions that were not successfully added for the criterion.</param>
        public AddCampaignCriterionsResponse(string TrackingId, System.Collections.Generic.IList<System.Nullable<long>> CampaignCriterionIds, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors)
        {
            this.TrackingId = TrackingId;
            this.CampaignCriterionIds = CampaignCriterionIds;
            this.NestedPartialErrors = NestedPartialErrors;
        }
    }
    
    /// <summary>
    /// Updates one or more campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateCampaignCriterions">UpdateCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCampaignCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateCampaignCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The list of campaign criterions to update.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions;
        
        /// <summary>
        /// The type of campaign criterion to update, for example ProductScope. You can specify only one type.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType;
        
        /// <summary>
        /// Constructor for the UpdateCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateCampaignCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterions">The list of campaign criterions to update.</param>
        /// <param name="CriterionType">The type of campaign criterion to update, for example ProductScope. You can specify only one type.</param>
        public UpdateCampaignCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions, Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignCriterions = CampaignCriterions;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Updates one or more campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.UpdateCampaignCriterions">UpdateCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCampaignCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class UpdateCampaignCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors;
        
        /// <summary>
        /// Constructor for the UpdateCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        public UpdateCampaignCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the UpdateCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="NestedPartialErrors">An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.</param>
        public UpdateCampaignCriterionsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchErrorCollection> NestedPartialErrors)
        {
            this.TrackingId = TrackingId;
            this.NestedPartialErrors = NestedPartialErrors;
        }
    }
    
    /// <summary>
    /// Deletes one or more campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Request Object</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteCampaignCriterions">DeleteCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCampaignCriterionsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteCampaignCriterionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of unique system identifiers corresponding to the campaign criterions that you want to delete.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> CampaignCriterionIds;
        
        /// <summary>
        /// The type of campaign criterion, for example ProductScope.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType;
        
        /// <summary>
        /// Constructor for the DeleteCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteCampaignCriterionsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteCampaignCriterionsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterionsRequest</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterionIds">A list of unique system identifiers corresponding to the campaign criterions that you want to delete.</param>
        /// <param name="CriterionType">The type of campaign criterion, for example ProductScope.</param>
        public DeleteCampaignCriterionsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> CampaignCriterionIds, Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignCriterionIds = CampaignCriterionIds;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Deletes one or more campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Response Object</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.DeleteCampaignCriterions">DeleteCampaignCriterions</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCampaignCriterionsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class DeleteCampaignCriterionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any list items that were not successfully deleted.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the DeleteCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        public DeleteCampaignCriterionsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the DeleteCampaignCriterionsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterionsResponse</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any list items that were not successfully deleted.</param>
        public DeleteCampaignCriterionsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.PartialErrors = PartialErrors;
        }
    }
    
    /// <summary>
    /// Gets the specified types of criterions from the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Request Object</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByCampaignId">GetCampaignCriterionsByCampaignId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignCriterionsByCampaignIdRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignCriterionsByCampaignIdRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// The identifier of the campaign that contains the criterions to get.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public long CampaignId;
        
        /// <summary>
        /// The types of campaign criterion to get, for example ProductScope. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType;
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByCampaignIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignIdRequest</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignCriterionsByCampaignIdRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByCampaignIdRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignIdRequest</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignId">The identifier of the campaign that contains the criterions to get.</param>
        /// <param name="CriterionType">The types of campaign criterion to get, for example ProductScope. You can specify one or more types.</param>
        public GetCampaignCriterionsByCampaignIdRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, long CampaignId, Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignId = CampaignId;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Gets the specified types of criterions from the specified campaign.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Response Object</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByCampaignId">GetCampaignCriterionsByCampaignId</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignCriterionsByCampaignIdResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignCriterionsByCampaignIdResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions;
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByCampaignIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignIdResponse</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignCriterionsByCampaignIdResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByCampaignIdResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignIdResponse</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterions">The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.</param>
        public GetCampaignCriterionsByCampaignIdResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions)
        {
            this.TrackingId = TrackingId;
            this.CampaignCriterions = CampaignCriterions;
        }
    }
    
    /// <summary>
    /// Gets the specified campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Request Object</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByIds">GetCampaignCriterionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignCriterionsByIdsRequest", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignCriterionsByIdsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string AuthenticationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerAccountId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string CustomerId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string DeveloperToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string Password;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string UserName;
        
        /// <summary>
        /// A list of unique identifiers that identify the campaign criterions to get. You can specify a maximum of 1,000 IDs.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<long> CampaignCriterionIds;
        
        /// <summary>
        /// The types of campaign criterion to get, for example ProductScope. You can specify one or more types.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType;
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignCriterionsByIdsRequest()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByIdsRequest request object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIdsRequest</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterionIds">A list of unique identifiers that identify the campaign criterions to get. You can specify a maximum of 1,000 IDs.</param>
        /// <param name="CriterionType">The types of campaign criterion to get, for example ProductScope. You can specify one or more types.</param>
        public GetCampaignCriterionsByIdsRequest(string ApplicationToken, string AuthenticationToken, string CustomerAccountId, string CustomerId, string DeveloperToken, string Password, string UserName, System.Collections.Generic.IList<long> CampaignCriterionIds, Microsoft.BingAds.CampaignManagement.CampaignCriterionType CriterionType)
        {
            this.ApplicationToken = ApplicationToken;
            this.AuthenticationToken = AuthenticationToken;
            this.CustomerAccountId = CustomerAccountId;
            this.CustomerId = CustomerId;
            this.DeveloperToken = DeveloperToken;
            this.Password = Password;
            this.UserName = UserName;
            this.CampaignCriterionIds = CampaignCriterionIds;
            this.CriterionType = CriterionType;
        }
    }
    
    /// <summary>
    /// Gets the specified campaign criterions.
    /// </summary>
    /// <remarks>
    /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Response Object</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
    /// <para>Used by <see cref="CampaignManagementServiceClient.GetCampaignCriterionsByIds">GetCampaignCriterionsByIds</see> service operation.</para>
    /// </remarks>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCampaignCriterionsByIdsResponse", WrapperNamespace="https://bingads.microsoft.com/CampaignManagement/v9", IsWrapped=true)]
    public partial class GetCampaignCriterionsByIdsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9")]
        public string TrackingId;
        
        /// <summary>
        /// The list of campaign criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=0)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions;
        
        /// <summary>
        /// An array of BatchError objects that contain details for any list items that were not successfully returned.
        /// </summary>
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://bingads.microsoft.com/CampaignManagement/v9", Order=1)]
        public System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors;
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        public GetCampaignCriterionsByIdsResponse()
        {
        }
        
        /// <summary>
        /// Constructor for the GetCampaignCriterionsByIdsResponse response object.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIdsResponse</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <param name="CampaignCriterions">The list of campaign criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</param>
        /// <param name="PartialErrors">An array of BatchError objects that contain details for any list items that were not successfully returned.</param>
        public GetCampaignCriterionsByIdsResponse(string TrackingId, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.CampaignCriterion> CampaignCriterions, System.Collections.Generic.IList<Microsoft.BingAds.CampaignManagement.BatchError> PartialErrors)
        {
            this.TrackingId = TrackingId;
            this.CampaignCriterions = CampaignCriterions;
            this.PartialErrors = PartialErrors;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICampaignManagementServiceChannel : Microsoft.BingAds.CampaignManagement.ICampaignManagementService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampaignManagementServiceClient : System.ServiceModel.ClientBase<Microsoft.BingAds.CampaignManagement.ICampaignManagementService>, Microsoft.BingAds.CampaignManagement.ICampaignManagementService
    {
        
        public CampaignManagementServiceClient()
        {
        }
        
        public CampaignManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public CampaignManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public CampaignManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public CampaignManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        /// <summary>
        /// Adds one or more campaigns to the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the campaigns that were added.</returns>
        public Microsoft.BingAds.CampaignManagement.AddCampaignsResponse AddCampaigns(Microsoft.BingAds.CampaignManagement.AddCampaignsRequest request)
        {
            return base.Channel.AddCampaigns(request);
        }
        
        /// <summary>
        /// Adds one or more campaigns to the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx">AddCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277510(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the campaigns that were added.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddCampaignsResponse> AddCampaignsAsync(Microsoft.BingAds.CampaignManagement.AddCampaignsRequest request)
        {
            return base.Channel.AddCampaignsAsync(request);
        }
        
        /// <summary>
        /// Retrieves all the campaigns that exist within a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.</returns>
        public Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdResponse GetCampaignsByAccountId(Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdRequest request)
        {
            return base.Channel.GetCampaignsByAccountId(request);
        }
        
        /// <summary>
        /// Retrieves all the campaigns that exist within a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx">GetCampaignsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236299(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaign objects that represents the campaigns that were retrieved. If no campaigns exist, an empty array is returned.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdResponse> GetCampaignsByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignsByAccountIdRequest request)
        {
            return base.Channel.GetCampaignsByAccountIdAsync(request);
        }
        
        /// <summary>
        /// Retrieves the specified campaigns from the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsResponse GetCampaignsByIds(Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsRequest request)
        {
            return base.Channel.GetCampaignsByIds(request);
        }
        
        /// <summary>
        /// Retrieves the specified campaigns from the specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx">GetCampaignsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236303(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Campaig objects that corresponds directly to the campaign identifiers that you specified in the request. If a campaign does not exist, the corresponding element of the array is set to NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsResponse> GetCampaignsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetCampaignsByIdsRequest request)
        {
            return base.Channel.GetCampaignsByIdsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteCampaignsResponse DeleteCampaigns(Microsoft.BingAds.CampaignManagement.DeleteCampaignsRequest request)
        {
            return base.Channel.DeleteCampaigns(request);
        }
        
        /// <summary>
        /// Deletes one or more campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx">DeleteCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236314(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteCampaignsResponse> DeleteCampaignsAsync(Microsoft.BingAds.CampaignManagement.DeleteCampaignsRequest request)
        {
            return base.Channel.DeleteCampaignsAsync(request);
        }
        
        /// <summary>
        /// Updates specified campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateCampaignsResponse UpdateCampaigns(Microsoft.BingAds.CampaignManagement.UpdateCampaignsRequest request)
        {
            return base.Channel.UpdateCampaigns(request);
        }
        
        /// <summary>
        /// Updates specified campaigns in a specified account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx">UpdateCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277536(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateCampaignsResponse> UpdateCampaignsAsync(Microsoft.BingAds.CampaignManagement.UpdateCampaignsRequest request)
        {
            return base.Channel.UpdateCampaignsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.</returns>
        public Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsResponse GetNegativeKeywordsByCampaignIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByCampaignIds(request);
        }
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx">GetNegativeKeywordsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277519(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeKeywords objects that contains the negative keywords of the specified campaigns.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsResponse> GetNegativeKeywordsByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByCampaignIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByCampaignIdsAsync(request);
        }
        
        /// <summary>
        /// Sets the negative keywords of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsResponse SetNegativeKeywordsToCampaigns(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsRequest request)
        {
            return base.Channel.SetNegativeKeywordsToCampaigns(request);
        }
        
        /// <summary>
        /// Sets the negative keywords of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx">SetNegativeKeywordsToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236316(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsResponse> SetNegativeKeywordsToCampaignsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToCampaignsRequest request)
        {
            return base.Channel.SetNegativeKeywordsToCampaignsAsync(request);
        }
        
        /// <summary>
        /// Gets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.</returns>
        public Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsResponse GetNegativeSitesByCampaignIds(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsRequest request)
        {
            return base.Channel.GetNegativeSitesByCampaignIds(request);
        }
        
        /// <summary>
        /// Gets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx">GetNegativeSitesByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277525(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of CampaignNegativeSites objects that contain the negative site URLs of the specified campaigns.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsResponse> GetNegativeSitesByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByCampaignIdsRequest request)
        {
            return base.Channel.GetNegativeSitesByCampaignIdsAsync(request);
        }
        
        /// <summary>
        /// Sets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsResponse SetNegativeSitesToCampaigns(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsRequest request)
        {
            return base.Channel.SetNegativeSitesToCampaigns(request);
        }
        
        /// <summary>
        /// Sets the negative site URLs of the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx">SetNegativeSitesToCampaigns Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277504(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsResponse> SetNegativeSitesToCampaignsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToCampaignsRequest request)
        {
            return base.Channel.SetNegativeSitesToCampaignsAsync(request);
        }
        
        public Microsoft.BingAds.CampaignManagement.GetConfigValueResponse GetConfigValue(Microsoft.BingAds.CampaignManagement.GetConfigValueRequest request)
        {
            return base.Channel.GetConfigValue(request);
        }
        
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetConfigValueResponse> GetConfigValueAsync(Microsoft.BingAds.CampaignManagement.GetConfigValueRequest request)
        {
            return base.Channel.GetConfigValueAsync(request);
        }
        
        /// <summary>
        /// Adds new ad groups to a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the ad groups that were added.</returns>
        public Microsoft.BingAds.CampaignManagement.AddAdGroupsResponse AddAdGroups(Microsoft.BingAds.CampaignManagement.AddAdGroupsRequest request)
        {
            return base.Channel.AddAdGroups(request);
        }
        
        /// <summary>
        /// Adds new ad groups to a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx">AddAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277502(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that represents the identifiers for the ad groups that were added.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdGroupsResponse> AddAdGroupsAsync(Microsoft.BingAds.CampaignManagement.AddAdGroupsRequest request)
        {
            return base.Channel.AddAdGroupsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteAdGroupsResponse DeleteAdGroups(Microsoft.BingAds.CampaignManagement.DeleteAdGroupsRequest request)
        {
            return base.Channel.DeleteAdGroups(request);
        }
        
        /// <summary>
        /// Deletes one or more ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx">DeleteAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236307(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdGroupsResponse> DeleteAdGroupsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdGroupsRequest request)
        {
            return base.Channel.DeleteAdGroupsAsync(request);
        }
        
        /// <summary>
        /// Gets the specified ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsResponse GetAdGroupsByIds(Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsRequest request)
        {
            return base.Channel.GetAdGroupsByIds(request);
        }
        
        /// <summary>
        /// Gets the specified ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx">GetAdGroupsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277529(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that corresponds directly to the ad group identifiers that you specified in the request. If an ad group does not exist, the corresponding element of the array is set to NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsResponse> GetAdGroupsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupsByIdsRequest request)
        {
            return base.Channel.GetAdGroupsByIdsAsync(request);
        }
        
        /// <summary>
        /// Gets the ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdResponse GetAdGroupsByCampaignId(Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdRequest request)
        {
            return base.Channel.GetAdGroupsByCampaignId(request);
        }
        
        /// <summary>
        /// Gets the ad groups that exist within a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx">GetAdGroupsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277524(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroup objects that represents the retrieved ad groups. If the specified campaign contains no ad groups, an empty array is returned.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdResponse> GetAdGroupsByCampaignIdAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupsByCampaignIdRequest request)
        {
            return base.Channel.GetAdGroupsByCampaignIdAsync(request);
        }
        
        /// <summary>
        /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalResponse SubmitAdGroupForApproval(Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalRequest request)
        {
            return base.Channel.SubmitAdGroupForApproval(request);
        }
        
        /// <summary>
        /// Submits an ad group for editorial review and updates the ad group status from Draft to Active.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx">SubmitAdGroupForApproval Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277516(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalResponse> SubmitAdGroupForApprovalAsync(Microsoft.BingAds.CampaignManagement.SubmitAdGroupForApprovalRequest request)
        {
            return base.Channel.SubmitAdGroupForApprovalAsync(request);
        }
        
        /// <summary>
        /// Updates the specified ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateAdGroupsResponse UpdateAdGroups(Microsoft.BingAds.CampaignManagement.UpdateAdGroupsRequest request)
        {
            return base.Channel.UpdateAdGroups(request);
        }
        
        /// <summary>
        /// Updates the specified ad groups in a specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx">UpdateAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277528(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdGroupsResponse> UpdateAdGroupsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdGroupsRequest request)
        {
            return base.Channel.UpdateAdGroupsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.</returns>
        public Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsResponse GetNegativeKeywordsByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByAdGroupIds(request);
        }
        
        /// <summary>
        /// Retrieves the negative keywords that are only associated to the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx">GetNegativeKeywordsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277514(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeKeywords objects that contains the negative keywords of the specified ad groups.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsResponse> GetNegativeKeywordsByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByAdGroupIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByAdGroupIdsAsync(request);
        }
        
        /// <summary>
        /// Sets the negative keywords of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsResponse SetNegativeKeywordsToAdGroups(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsRequest request)
        {
            return base.Channel.SetNegativeKeywordsToAdGroups(request);
        }
        
        /// <summary>
        /// Sets the negative keywords of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx">SetNegativeKeywordsToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236312(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsResponse> SetNegativeKeywordsToAdGroupsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeKeywordsToAdGroupsRequest request)
        {
            return base.Channel.SetNegativeKeywordsToAdGroupsAsync(request);
        }
        
        /// <summary>
        /// Gets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.</returns>
        public Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsResponse GetNegativeSitesByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsRequest request)
        {
            return base.Channel.GetNegativeSitesByAdGroupIds(request);
        }
        
        /// <summary>
        /// Gets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx">GetNegativeSitesByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277521(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of AdGroupNegativeSites objects that contains the negative site URLs of the specified ad groups.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsResponse> GetNegativeSitesByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeSitesByAdGroupIdsRequest request)
        {
            return base.Channel.GetNegativeSitesByAdGroupIdsAsync(request);
        }
        
        /// <summary>
        /// Sets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsResponse SetNegativeSitesToAdGroups(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsRequest request)
        {
            return base.Channel.SetNegativeSitesToAdGroups(request);
        }
        
        /// <summary>
        /// Sets the negative site URLs of the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx">SetNegativeSitesToAdGroups Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236317(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsResponse> SetNegativeSitesToAdGroupsAsync(Microsoft.BingAds.CampaignManagement.SetNegativeSitesToAdGroupsRequest request)
        {
            return base.Channel.SetNegativeSitesToAdGroupsAsync(request);
        }
        
        /// <summary>
        /// Adds targets to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        public Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryResponse AddTargetsToLibrary(Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryRequest request)
        {
            return base.Channel.AddTargetsToLibrary(request);
        }
        
        /// <summary>
        /// Adds targets to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx">AddTargetsToLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277526(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryResponse> AddTargetsToLibraryAsync(Microsoft.BingAds.CampaignManagement.AddTargetsToLibraryRequest request)
        {
            return base.Channel.AddTargetsToLibraryAsync(request);
        }
        
        /// <summary>
        /// Updates targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryResponse UpdateTargetsInLibrary(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryRequest request)
        {
            return base.Channel.UpdateTargetsInLibrary(request);
        }
        
        /// <summary>
        /// Updates targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx">UpdateTargetsInLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236301(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryResponse> UpdateTargetsInLibraryAsync(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibraryRequest request)
        {
            return base.Channel.UpdateTargetsInLibraryAsync(request);
        }
        
        /// <summary>
        /// Removes targets from your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryResponse DeleteTargetsFromLibrary(Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryRequest request)
        {
            return base.Channel.DeleteTargetsFromLibrary(request);
        }
        
        /// <summary>
        /// Removes targets from your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx">DeleteTargetsFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277507(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryResponse> DeleteTargetsFromLibraryAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetsFromLibraryRequest request)
        {
            return base.Channel.DeleteTargetsFromLibraryAsync(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about all the targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of TargetInfo objects that contain information about the targets in your library.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryResponse GetTargetsInfoFromLibrary(Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryRequest request)
        {
            return base.Channel.GetTargetsInfoFromLibrary(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about all the targets in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx">GetTargetsInfoFromLibrary Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236308(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of TargetInfo objects that contain information about the targets in your library.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryResponse> GetTargetsInfoFromLibraryAsync(Microsoft.BingAds.CampaignManagement.GetTargetsInfoFromLibraryRequest request)
        {
            return base.Channel.GetTargetsInfoFromLibraryAsync(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the specified targets.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that contains information about the specified targets.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByIdsResponse GetTargetsByIds(Microsoft.BingAds.CampaignManagement.GetTargetsByIdsRequest request)
        {
            return base.Channel.GetTargetsByIds(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the specified targets.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx">GetTargetsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236304(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that contains information about the specified targets.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByIdsResponse> GetTargetsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByIdsRequest request)
        {
            return base.Channel.GetTargetsByIdsAsync(request);
        }
        
        /// <summary>
        /// Associates the specified target with the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupResponse SetTargetToAdGroup(Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupRequest request)
        {
            return base.Channel.SetTargetToAdGroup(request);
        }
        
        /// <summary>
        /// Associates the specified target with the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx">SetTargetToAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277508(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupResponse> SetTargetToAdGroupAsync(Microsoft.BingAds.CampaignManagement.SetTargetToAdGroupRequest request)
        {
            return base.Channel.SetTargetToAdGroupAsync(request);
        }
        
        /// <summary>
        /// Removes the specified target association for the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupResponse DeleteTargetFromAdGroup(Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupRequest request)
        {
            return base.Channel.DeleteTargetFromAdGroup(request);
        }
        
        /// <summary>
        /// Removes the specified target association for the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx">DeleteTargetFromAdGroup Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277500(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupResponse> DeleteTargetFromAdGroupAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetFromAdGroupRequest request)
        {
            return base.Channel.DeleteTargetFromAdGroupAsync(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsResponse GetTargetsByAdGroupIds(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsRequest request)
        {
            return base.Channel.GetTargetsByAdGroupIds(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx">GetTargetsByAdGroupIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236297(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsResponse> GetTargetsByAdGroupIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIdsRequest request)
        {
            return base.Channel.GetTargetsByAdGroupIdsAsync(request);
        }
        
        /// <summary>
        /// Associates the specified target with the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetTargetToCampaignResponse SetTargetToCampaign(Microsoft.BingAds.CampaignManagement.SetTargetToCampaignRequest request)
        {
            return base.Channel.SetTargetToCampaign(request);
        }
        
        /// <summary>
        /// Associates the specified target with the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx">SetTargetToCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277512(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetTargetToCampaignResponse> SetTargetToCampaignAsync(Microsoft.BingAds.CampaignManagement.SetTargetToCampaignRequest request)
        {
            return base.Channel.SetTargetToCampaignAsync(request);
        }
        
        /// <summary>
        /// Removes the target association for the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignResponse DeleteTargetFromCampaign(Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignRequest request)
        {
            return base.Channel.DeleteTargetFromCampaign(request);
        }
        
        /// <summary>
        /// Removes the target association for the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx">DeleteTargetFromCampaign Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277503(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignResponse> DeleteTargetFromCampaignAsync(Microsoft.BingAds.CampaignManagement.DeleteTargetFromCampaignRequest request)
        {
            return base.Channel.DeleteTargetFromCampaignAsync(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsResponse GetTargetsByCampaignIds(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsRequest request)
        {
            return base.Channel.GetTargetsByCampaignIds(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the targets that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx">GetTargetsByCampaignIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236300(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsResponse> GetTargetsByCampaignIdsAsync(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIdsRequest request)
        {
            return base.Channel.GetTargetsByCampaignIdsAsync(request);
        }
        
        /// <summary>
        /// Adds the specified Target2 to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        public Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Response AddTargetsToLibrary2(Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Request request)
        {
            return base.Channel.AddTargetsToLibrary2(request);
        }
        
        /// <summary>
        /// Adds the specified Target2 to your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx">AddTargetsToLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743775(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of long values that contains the identifiers of the targets that were added to your target library.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Response> AddTargetsToLibrary2Async(Microsoft.BingAds.CampaignManagement.AddTargetsToLibrary2Request request)
        {
            return base.Channel.AddTargetsToLibrary2Async(request);
        }
        
        /// <summary>
        /// Updates Target2 objects in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Response UpdateTargetsInLibrary2(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Request request)
        {
            return base.Channel.UpdateTargetsInLibrary2(request);
        }
        
        /// <summary>
        /// Updates Target2 objects in your target library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx">UpdateTargetsInLibrary2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743774(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Response> UpdateTargetsInLibrary2Async(Microsoft.BingAds.CampaignManagement.UpdateTargetsInLibrary2Request request)
        {
            return base.Channel.UpdateTargetsInLibrary2Async(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the specified Target2 objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that contains information about the specified targets.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Response GetTargetsByIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Request request)
        {
            return base.Channel.GetTargetsByIds2(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the specified Target2 objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx">GetTargetsByIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743779(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that contains information about the specified targets.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Response> GetTargetsByIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByIds2Request request)
        {
            return base.Channel.GetTargetsByIds2Async(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Response GetTargetsByAdGroupIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Request request)
        {
            return base.Channel.GetTargetsByAdGroupIds2(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx">GetTargetsByAdGroupIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743776(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of ad group identifiers in the request. If the ad group does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Response> GetTargetsByAdGroupIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByAdGroupIds2Request request)
        {
            return base.Channel.GetTargetsByAdGroupIds2Async(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Response GetTargetsByCampaignIds2(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Request request)
        {
            return base.Channel.GetTargetsByCampaignIds2(request);
        }
        
        /// <summary>
        /// Retrieves detailed information about the Target2 objects that are associated with the specified campaigns.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx">GetTargetsByCampaignIds2 Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743778(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Target2 objects that corresponds directly to the list of campaign identifiers in the request. If the campaign does not contain a reference to a target object, the corresponding target element in the array is NULL.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Response> GetTargetsByCampaignIds2Async(Microsoft.BingAds.CampaignManagement.GetTargetsByCampaignIds2Request request)
        {
            return base.Channel.GetTargetsByCampaignIds2Async(request);
        }
        
        /// <summary>
        /// Adds one or more ads to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddAdsResponse AddAds(Microsoft.BingAds.CampaignManagement.AddAdsRequest request)
        {
            return base.Channel.AddAds(request);
        }
        
        /// <summary>
        /// Adds one or more ads to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx">AddAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277506(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdsResponse> AddAdsAsync(Microsoft.BingAds.CampaignManagement.AddAdsRequest request)
        {
            return base.Channel.AddAdsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more ads in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteAdsResponse DeleteAds(Microsoft.BingAds.CampaignManagement.DeleteAdsRequest request)
        {
            return base.Channel.DeleteAds(request);
        }
        
        /// <summary>
        /// Deletes one or more ads in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx">DeleteAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236310(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdsResponse> DeleteAdsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdsRequest request)
        {
            return base.Channel.DeleteAdsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusResponse GetAdsByEditorialStatus(Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusRequest request)
        {
            return base.Channel.GetAdsByEditorialStatus(request);
        }
        
        /// <summary>
        /// Retrieves the ads that belong to the specified ad group and have the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx">GetAdsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277538(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads that meet the criteria, this array is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusResponse> GetAdsByEditorialStatusAsync(Microsoft.BingAds.CampaignManagement.GetAdsByEditorialStatusRequest request)
        {
            return base.Channel.GetAdsByEditorialStatusAsync(request);
        }
        
        /// <summary>
        /// Retrieves the specified ads from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdsByIdsResponse GetAdsByIds(Microsoft.BingAds.CampaignManagement.GetAdsByIdsRequest request)
        {
            return base.Channel.GetAdsByIds(request);
        }
        
        /// <summary>
        /// Retrieves the specified ads from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx">GetAdsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236296(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByIdsResponse> GetAdsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdsByIdsRequest request)
        {
            return base.Channel.GetAdsByIdsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the ads that are associated with an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdResponse GetAdsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdRequest request)
        {
            return base.Channel.GetAdsByAdGroupId(request);
        }
        
        /// <summary>
        /// Retrieves the ads that are associated with an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx">GetAdsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277534(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Ad objects that represents the ads that have been retrieved. If the ad group doesn't contain ads, this array is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdResponse> GetAdsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetAdsByAdGroupIdRequest request)
        {
            return base.Channel.GetAdsByAdGroupIdAsync(request);
        }
        
        /// <summary>
        /// Updates the specified ads within a particular ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully updated.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateAdsResponse UpdateAds(Microsoft.BingAds.CampaignManagement.UpdateAdsRequest request)
        {
            return base.Channel.UpdateAds(request);
        }
        
        /// <summary>
        /// Updates the specified ads within a particular ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx">UpdateAds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277531(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any ads that were not successfully updated.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdsResponse> UpdateAdsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdsRequest request)
        {
            return base.Channel.UpdateAdsAsync(request);
        }
        
        /// <summary>
        /// Adds one or more keywords to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddKeywordsResponse AddKeywords(Microsoft.BingAds.CampaignManagement.AddKeywordsRequest request)
        {
            return base.Channel.AddKeywords(request);
        }
        
        /// <summary>
        /// Adds one or more keywords to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx">AddKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277513(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddKeywordsResponse> AddKeywordsAsync(Microsoft.BingAds.CampaignManagement.AddKeywordsRequest request)
        {
            return base.Channel.AddKeywordsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more keywords in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteKeywordsResponse DeleteKeywords(Microsoft.BingAds.CampaignManagement.DeleteKeywordsRequest request)
        {
            return base.Channel.DeleteKeywords(request);
        }
        
        /// <summary>
        /// Deletes one or more keywords in a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx">DeleteKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236318(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteKeywordsResponse> DeleteKeywordsAsync(Microsoft.BingAds.CampaignManagement.DeleteKeywordsRequest request)
        {
            return base.Channel.DeleteKeywordsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the keywords with the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that contains information about the keywords that were retrieved.</returns>
        public Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusResponse GetKeywordsByEditorialStatus(Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusRequest request)
        {
            return base.Channel.GetKeywordsByEditorialStatus(request);
        }
        
        /// <summary>
        /// Retrieves the keywords with the specified editorial review status.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx">GetKeywordsByEditorialStatus Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277501(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that contains information about the keywords that were retrieved.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusResponse> GetKeywordsByEditorialStatusAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByEditorialStatusRequest request)
        {
            return base.Channel.GetKeywordsByEditorialStatusAsync(request);
        }
        
        /// <summary>
        /// Retrieves the specified keywords.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsResponse GetKeywordsByIds(Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsRequest request)
        {
            return base.Channel.GetKeywordsByIds(request);
        }
        
        /// <summary>
        /// Retrieves the specified keywords.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx">GetKeywordsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277505(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsResponse> GetKeywordsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByIdsRequest request)
        {
            return base.Channel.GetKeywordsByIdsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the keywords for an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.</returns>
        public Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdResponse GetKeywordsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdRequest request)
        {
            return base.Channel.GetKeywordsByAdGroupId(request);
        }
        
        /// <summary>
        /// Retrieves the keywords for an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx">GetKeywordsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236311(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of Keyword objects that represents the retrieved keywords. If no keywords exist, an empty array is returned.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdResponse> GetKeywordsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetKeywordsByAdGroupIdRequest request)
        {
            return base.Channel.GetKeywordsByAdGroupIdAsync(request);
        }
        
        /// <summary>
        /// Updates the keywords within a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully updated.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateKeywordsResponse UpdateKeywords(Microsoft.BingAds.CampaignManagement.UpdateKeywordsRequest request)
        {
            return base.Channel.UpdateKeywords(request);
        }
        
        /// <summary>
        /// Updates the keywords within a specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx">UpdateKeywords Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236295(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any keywords that were not successfully updated.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateKeywordsResponse> UpdateKeywordsAsync(Microsoft.BingAds.CampaignManagement.UpdateKeywordsRequest request)
        {
            return base.Channel.UpdateKeywordsAsync(request);
        }
        
        /// <summary>
        /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsResponse AppealEditorialRejections(Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsRequest request)
        {
            return base.Channel.AppealEditorialRejections(request);
        }
        
        /// <summary>
        /// Appeals the editorial rejections of one or more ads or keywords that failed editorial review.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx">AppealEditorialRejections Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277533(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsResponse> AppealEditorialRejectionsAsync(Microsoft.BingAds.CampaignManagement.AppealEditorialRejectionsRequest request)
        {
            return base.Channel.AppealEditorialRejectionsAsync(request);
        }
        
        /// <summary>
        /// Adds one or more website placement bids to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the website placement bids that were added.</returns>
        public Microsoft.BingAds.CampaignManagement.AddSitePlacementsResponse AddSitePlacements(Microsoft.BingAds.CampaignManagement.AddSitePlacementsRequest request)
        {
            return base.Channel.AddSitePlacements(request);
        }
        
        /// <summary>
        /// Adds one or more website placement bids to an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx">AddSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277523(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the website placement bids that were added.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddSitePlacementsResponse> AddSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.AddSitePlacementsRequest request)
        {
            return base.Channel.AddSitePlacementsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more website-placement bids from an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsResponse DeleteSitePlacements(Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsRequest request)
        {
            return base.Channel.DeleteSitePlacements(request);
        }
        
        /// <summary>
        /// Deletes one or more website-placement bids from an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx">DeleteSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236315(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsResponse> DeleteSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.DeleteSitePlacementsRequest request)
        {
            return base.Channel.DeleteSitePlacementsAsync(request);
        }
        
        /// <summary>
        /// Retrieves the specified website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsResponse GetSitePlacementsByIds(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsRequest request)
        {
            return base.Channel.GetSitePlacementsByIds(request);
        }
        
        /// <summary>
        /// Retrieves the specified website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx">GetSitePlacementsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277539(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsResponse> GetSitePlacementsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByIdsRequest request)
        {
            return base.Channel.GetSitePlacementsByIdsAsync(request);
        }
        
        /// <summary>
        /// Retrieves all the website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdResponse GetSitePlacementsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdRequest request)
        {
            return base.Channel.GetSitePlacementsByAdGroupId(request);
        }
        
        /// <summary>
        /// Retrieves all the website-placement bids from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx">GetSitePlacementsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277535(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of SitePlacement objects that was successfully retrieved. If no website placements are retrieved, this array is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdResponse> GetSitePlacementsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetSitePlacementsByAdGroupIdRequest request)
        {
            return base.Channel.GetSitePlacementsByAdGroupIdAsync(request);
        }
        
        /// <summary>
        /// Updates one or more website-placement bids in an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsResponse UpdateSitePlacements(Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsRequest request)
        {
            return base.Channel.UpdateSitePlacements(request);
        }
        
        /// <summary>
        /// Updates one or more website-placement bids in an ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx">UpdateSitePlacements Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236298(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsResponse> UpdateSitePlacementsAsync(Microsoft.BingAds.CampaignManagement.UpdateSitePlacementsRequest request)
        {
            return base.Channel.UpdateSitePlacementsAsync(request);
        }
        
        /// <summary>
        /// Retrieves placement information for the specified URLs.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.</returns>
        public Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsResponse GetPlacementDetailsForUrls(Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsRequest request)
        {
            return base.Channel.GetPlacementDetailsForUrls(request);
        }
        
        /// <summary>
        /// Retrieves placement information for the specified URLs.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx">GetPlacementDetailsForUrls Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277530(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A two-dimensional array of PlacementDetail objects that contains the identifier of the publisher website and the types and sizes of media that the publisher supports.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsResponse> GetPlacementDetailsForUrlsAsync(Microsoft.BingAds.CampaignManagement.GetPlacementDetailsForUrlsRequest request)
        {
            return base.Channel.GetPlacementDetailsForUrlsAsync(request);
        }
        
        /// <summary>
        /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.</returns>
        public Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsResponse GetEditorialReasonsByIds(Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsRequest request)
        {
            return base.Channel.GetEditorialReasonsByIds(request);
        }
        
        /// <summary>
        /// Gets the reasons why the specified entities failed editorial review and whether the rejection is appealable.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx">GetEditorialReasonsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236306(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A collection of ads or keywords that failed editorial review. The object identifies the reason for the failure and whether it is appealable.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsResponse> GetEditorialReasonsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetEditorialReasonsByIdsRequest request)
        {
            return base.Channel.GetEditorialReasonsByIdsAsync(request);
        }
        
        public Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesResponse GetAccountMigrationStatuses(Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesRequest request)
        {
            return base.Channel.GetAccountMigrationStatuses(request);
        }
        
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesResponse> GetAccountMigrationStatusesAsync(Microsoft.BingAds.CampaignManagement.GetAccountMigrationStatusesRequest request)
        {
            return base.Channel.GetAccountMigrationStatusesAsync(request);
        }
        
        /// <summary>
        /// Adds one or more ad extensions to an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.</returns>
        public Microsoft.BingAds.CampaignManagement.AddAdExtensionsResponse AddAdExtensions(Microsoft.BingAds.CampaignManagement.AddAdExtensionsRequest request)
        {
            return base.Channel.AddAdExtensions(request);
        }
        
        /// <summary>
        /// Adds one or more ad extensions to an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx">AddAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236319(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identities of the extensions that were added. The list corresponds directly to the list of extensions specified in the request.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdExtensionsResponse> AddAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.AddAdExtensionsRequest request)
        {
            return base.Channel.AddAdExtensionsAsync(request);
        }
        
        /// <summary>
        /// Gets the specified ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsResponse GetAdExtensionsByIds(Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsRequest request)
        {
            return base.Channel.GetAdExtensionsByIds(request);
        }
        
        /// <summary>
        /// Gets the specified ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx">GetAdExtensionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277515(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of AdExtension data objects. The list corresponds directly to the list of identifiers in the request. If an ad extension ID in the request is not valid or the extension is not of the type specified, the corresponding item in this list is null.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsResponse> GetAdExtensionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsByIdsRequest request)
        {
            return base.Channel.GetAdExtensionsByIdsAsync(request);
        }
        
        /// <summary>
        /// Updates one or more ad extensions within an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsResponse UpdateAdExtensions(Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsRequest request)
        {
            return base.Channel.UpdateAdExtensions(request);
        }
        
        /// <summary>
        /// Updates one or more ad extensions within an account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx">UpdateAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277522(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsResponse> UpdateAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdExtensionsRequest request)
        {
            return base.Channel.UpdateAdExtensionsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsResponse DeleteAdExtensions(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsRequest request)
        {
            return base.Channel.DeleteAdExtensions(request);
        }
        
        /// <summary>
        /// Deletes one or more ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx">DeleteAdExtensions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277537(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsResponse> DeleteAdExtensionsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsRequest request)
        {
            return base.Channel.DeleteAdExtensionsAsync(request);
        }
        
        /// <summary>
        /// Gets editorial rejection reasons for the respective ad extension and entity associations.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The collection of ad extension editorial reasons.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsResponse GetAdExtensionsEditorialReasons(Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsRequest request)
        {
            return base.Channel.GetAdExtensionsEditorialReasons(request);
        }
        
        /// <summary>
        /// Gets editorial rejection reasons for the respective ad extension and entity associations.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx">GetAdExtensionsEditorialReasons Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236313(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The collection of ad extension editorial reasons.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsResponse> GetAdExtensionsEditorialReasonsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsEditorialReasonsRequest request)
        {
            return base.Channel.GetAdExtensionsEditorialReasonsAsync(request);
        }
        
        /// <summary>
        /// Associates the specified ad extensions with the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsResponse SetAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsRequest request)
        {
            return base.Channel.SetAdExtensionsAssociations(request);
        }
        
        /// <summary>
        /// Associates the specified ad extensions with the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx">SetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277532(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsResponse> SetAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.SetAdExtensionsAssociationsRequest request)
        {
            return base.Channel.SetAdExtensionsAssociationsAsync(request);
        }
        
        /// <summary>
        /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of ad extension association collections.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsResponse GetAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsRequest request)
        {
            return base.Channel.GetAdExtensionsAssociations(request);
        }
        
        /// <summary>
        /// Gets the respective ad extension associations by the specified campaign and ad group identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx">GetAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236309(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of ad extension association collections.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsResponse> GetAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionsAssociationsRequest request)
        {
            return base.Channel.GetAdExtensionsAssociationsAsync(request);
        }
        
        /// <summary>
        /// Removes the specified association from the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsResponse DeleteAdExtensionsAssociations(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsRequest request)
        {
            return base.Channel.DeleteAdExtensionsAssociations(request);
        }
        
        /// <summary>
        /// Removes the specified association from the respective campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx">DeleteAdExtensionsAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236305(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsResponse> DeleteAdExtensionsAssociationsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdExtensionsAssociationsRequest request)
        {
            return base.Channel.DeleteAdExtensionsAssociationsAsync(request);
        }
        
        /// <summary>
        /// Gets the ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdResponse GetAdExtensionIdsByAccountId(Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdRequest request)
        {
            return base.Channel.GetAdExtensionIdsByAccountId(request);
        }
        
        /// <summary>
        /// Gets the ad extensions from the account's ad extension library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx">GetAdExtensionIdsByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277509(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of ad extension IDs. To get the extension, call the GetAdExtensionsByIds.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdResponse> GetAdExtensionIdsByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetAdExtensionIdsByAccountIdRequest request)
        {
            return base.Channel.GetAdExtensionIdsByAccountIdAsync(request);
        }
        
        /// <summary>
        /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.</returns>
        public Microsoft.BingAds.CampaignManagement.AddMediaResponse AddMedia(Microsoft.BingAds.CampaignManagement.AddMediaRequest request)
        {
            return base.Channel.AddMedia(request);
        }
        
        /// <summary>
        /// Adds the specified media to an account's media library. Depending on the media type, you can then add the media to one or more ImageAdExtension or LocationAdExtension objects.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx">AddMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277518(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The identifiers of the media that you added to the library. You use the identifier to set the appropriate media ID field in the ImageAdExtension or LocationAdExtension.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddMediaResponse> AddMediaAsync(Microsoft.BingAds.CampaignManagement.AddMediaRequest request)
        {
            return base.Channel.AddMediaAsync(request);
        }
        
        /// <summary>
        /// Deletes the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteMediaResponse DeleteMedia(Microsoft.BingAds.CampaignManagement.DeleteMediaRequest request)
        {
            return base.Channel.DeleteMedia(request);
        }
        
        /// <summary>
        /// Deletes the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx">DeleteMedia Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766193(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteMediaResponse> DeleteMediaAsync(Microsoft.BingAds.CampaignManagement.DeleteMediaRequest request)
        {
            return base.Channel.DeleteMediaAsync(request);
        }
        
        /// <summary>
        /// Gets the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media from the library.</returns>
        public Microsoft.BingAds.CampaignManagement.GetMediaByIdsResponse GetMediaByIds(Microsoft.BingAds.CampaignManagement.GetMediaByIdsRequest request)
        {
            return base.Channel.GetMediaByIds(request);
        }
        
        /// <summary>
        /// Gets the specified media from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx">GetMediaByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277511(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media from the library.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaByIdsResponse> GetMediaByIdsAsync(Microsoft.BingAds.CampaignManagement.GetMediaByIdsRequest request)
        {
            return base.Channel.GetMediaByIdsAsync(request);
        }
        
        /// <summary>
        /// Gets the media meta data of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media meta data from the library.</returns>
        public Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdResponse GetMediaMetaDataByAccountId(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdRequest request)
        {
            return base.Channel.GetMediaMetaDataByAccountId(request);
        }
        
        /// <summary>
        /// Gets the media meta data of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx">GetMediaMetaDataByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766196(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The specified media meta data from the library.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdResponse> GetMediaMetaDataByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByAccountIdRequest request)
        {
            return base.Channel.GetMediaMetaDataByAccountIdAsync(request);
        }
        
        /// <summary>
        /// Gets the specified media meta data from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsResponse GetMediaMetaDataByIds(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsRequest request)
        {
            return base.Channel.GetMediaMetaDataByIds(request);
        }
        
        /// <summary>
        /// Gets the specified media meta data from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx">GetMediaMetaDataByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn766200(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsResponse> GetMediaMetaDataByIdsAsync(Microsoft.BingAds.CampaignManagement.GetMediaMetaDataByIdsRequest request)
        {
            return base.Channel.GetMediaMetaDataByIdsAsync(request);
        }
        
        /// <summary>
        /// Gets the media associations of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetMediaAssociationsResponse GetMediaAssociations(Microsoft.BingAds.CampaignManagement.GetMediaAssociationsRequest request)
        {
            return base.Channel.GetMediaAssociations(request);
        }
        
        /// <summary>
        /// Gets the media associations of the specified entity type from an account's media library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx">GetMediaAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn798359(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetMediaAssociationsResponse> GetMediaAssociationsAsync(Microsoft.BingAds.CampaignManagement.GetMediaAssociationsRequest request)
        {
            return base.Channel.GetMediaAssociationsAsync(request);
        }
        
        /// <summary>
        /// Gets the specified criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsResponse GetAdGroupCriterionsByIds(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsRequest request)
        {
            return base.Channel.GetAdGroupCriterionsByIds(request);
        }
        
        /// <summary>
        /// Gets the specified criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx">GetAdGroupCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277520(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that correspond directly to the identifiers specified in the request. If an identifier in the list is not valid, the corresponding item in the response is set to null.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsResponse> GetAdGroupCriterionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByIdsRequest request)
        {
            return base.Channel.GetAdGroupCriterionsByIdsAsync(request);
        }
        
        /// <summary>
        /// Gets the specified types of criterions from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdResponse GetAdGroupCriterionsByAdGroupId(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdRequest request)
        {
            return base.Channel.GetAdGroupCriterionsByAdGroupId(request);
        }
        
        /// <summary>
        /// Gets the specified types of criterions from the specified ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx">GetAdGroupCriterionsByAdGroupId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277517(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the ad group does not contain the specified types of criterion, the list is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdResponse> GetAdGroupCriterionsByAdGroupIdAsync(Microsoft.BingAds.CampaignManagement.GetAdGroupCriterionsByAdGroupIdRequest request)
        {
            return base.Channel.GetAdGroupCriterionsByAdGroupIdAsync(request);
        }
        
        /// <summary>
        /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.</returns>
        public Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsResponse AddAdGroupCriterions(Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsRequest request)
        {
            return base.Channel.AddAdGroupCriterions(request);
        }
        
        /// <summary>
        /// Adds one or more campaign criterions that help filter product catalog items for a Bing Merchant Center store.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx">AddAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277499(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>A list of identifiers that identify the criterion that were added. The list of identifiers corresponds directly to the list of criterion in the request.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsResponse> AddAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.AddAdGroupCriterionsRequest request)
        {
            return base.Channel.AddAdGroupCriterionsAsync(request);
        }
        
        /// <summary>
        /// Updates one or more ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsResponse UpdateAdGroupCriterions(Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsRequest request)
        {
            return base.Channel.UpdateAdGroupCriterions(request);
        }
        
        /// <summary>
        /// Updates one or more ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx">UpdateAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn277527(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="EditorialApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsResponse> UpdateAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.UpdateAdGroupCriterionsRequest request)
        {
            return base.Channel.UpdateAdGroupCriterionsAsync(request);
        }
        
        /// <summary>
        /// Deletes the specified ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsResponse DeleteAdGroupCriterions(Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsRequest request)
        {
            return base.Channel.DeleteAdGroupCriterions(request);
        }
        
        /// <summary>
        /// Deletes the specified ad group criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx">DeleteAdGroupCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn236302(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsResponse> DeleteAdGroupCriterionsAsync(Microsoft.BingAds.CampaignManagement.DeleteAdGroupCriterionsRequest request)
        {
            return base.Channel.DeleteAdGroupCriterionsAsync(request);
        }
        
        /// <summary>
        /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsResponse ApplyProductPartitionActions(Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsRequest request)
        {
            return base.Channel.ApplyProductPartitionActions(request);
        }
        
        /// <summary>
        /// Applies an add, update, or delete action to each of the specified BiddableAdGroupCriterion or NegativeAdGroupCriterion, which each contain a ProductPartition.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx">ApplyProductPartitionActions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913134(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsResponse> ApplyProductPartitionActionsAsync(Microsoft.BingAds.CampaignManagement.ApplyProductPartitionActionsRequest request)
        {
            return base.Channel.ApplyProductPartitionActionsAsync(request);
        }
        
        /// <summary>
        /// Gets the Bing Merchant Center stores for the specified customer.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of Bing Merchant Center stores for the specified customer.</returns>
        public Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdResponse GetBMCStoresByCustomerId(Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdRequest request)
        {
            return base.Channel.GetBMCStoresByCustomerId(request);
        }
        
        /// <summary>
        /// Gets the Bing Merchant Center stores for the specified customer.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx">GetBMCStoresByCustomerId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn411607(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of Bing Merchant Center stores for the specified customer.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdResponse> GetBMCStoresByCustomerIdAsync(Microsoft.BingAds.CampaignManagement.GetBMCStoresByCustomerIdRequest request)
        {
            return base.Channel.GetBMCStoresByCustomerIdAsync(request);
        }
        
        /// <summary>
        /// Adds negative keywords to the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesResponse AddNegativeKeywordsToEntities(Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesRequest request)
        {
            return base.Channel.AddNegativeKeywordsToEntities(request);
        }
        
        /// <summary>
        /// Adds negative keywords to the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx">AddNegativeKeywordsToEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743724(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesResponse> AddNegativeKeywordsToEntitiesAsync(Microsoft.BingAds.CampaignManagement.AddNegativeKeywordsToEntitiesRequest request)
        {
            return base.Channel.AddNegativeKeywordsToEntitiesAsync(request);
        }
        
        /// <summary>
        /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsResponse GetNegativeKeywordsByEntityIds(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByEntityIds(request);
        }
        
        /// <summary>
        /// Gets the negative keywords that are only associated with the specified campaigns or ad groups.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx">GetNegativeKeywordsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743730(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsResponse> GetNegativeKeywordsByEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetNegativeKeywordsByEntityIdsRequest request)
        {
            return base.Channel.GetNegativeKeywordsByEntityIdsAsync(request);
        }
        
        /// <summary>
        /// Deletes negative keywords from the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesResponse DeleteNegativeKeywordsFromEntities(Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesRequest request)
        {
            return base.Channel.DeleteNegativeKeywordsFromEntities(request);
        }
        
        /// <summary>
        /// Deletes negative keywords from the specified campaign or ad group.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx">DeleteNegativeKeywordsFromEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743725(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any negative keywords that were not successfully deleted from the corresponding entity.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesResponse> DeleteNegativeKeywordsFromEntitiesAsync(Microsoft.BingAds.CampaignManagement.DeleteNegativeKeywordsFromEntitiesRequest request)
        {
            return base.Channel.DeleteNegativeKeywordsFromEntitiesAsync(request);
        }
        
        /// <summary>
        /// Gets the shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The shared entities from the account's shared library, for example negative keyword lists.</returns>
        public Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdResponse GetSharedEntitiesByAccountId(Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdRequest request)
        {
            return base.Channel.GetSharedEntitiesByAccountId(request);
        }
        
        /// <summary>
        /// Gets the shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx">GetSharedEntitiesByAccountId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743728(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The shared entities from the account's shared library, for example negative keyword lists.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdResponse> GetSharedEntitiesByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntitiesByAccountIdRequest request)
        {
            return base.Channel.GetSharedEntitiesByAccountIdAsync(request);
        }
        
        /// <summary>
        /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddSharedEntityResponse AddSharedEntity(Microsoft.BingAds.CampaignManagement.AddSharedEntityRequest request)
        {
            return base.Channel.AddSharedEntity(request);
        }
        
        /// <summary>
        /// Adds a shared entity such as a negative keyword list to the account's library. Items in the account's library can be associated with any campaign within the account.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx">AddSharedEntity Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743722(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddSharedEntityResponse> AddSharedEntityAsync(Microsoft.BingAds.CampaignManagement.AddSharedEntityRequest request)
        {
            return base.Channel.AddSharedEntityAsync(request);
        }
        
        /// <summary>
        /// Gets the list items such as the negative keywords of a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of list items returned from the shared list, for example a list of negative keywords.</returns>
        public Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListResponse GetListItemsBySharedList(Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListRequest request)
        {
            return base.Channel.GetListItemsBySharedList(request);
        }
        
        /// <summary>
        /// Gets the list items such as the negative keywords of a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx">GetListItemsBySharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743729(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of list items returned from the shared list, for example a list of negative keywords.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListResponse> GetListItemsBySharedListAsync(Microsoft.BingAds.CampaignManagement.GetListItemsBySharedListRequest request)
        {
            return base.Channel.GetListItemsBySharedListAsync(request);
        }
        
        /// <summary>
        /// Adds list items such as negative keywords to the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListResponse AddListItemsToSharedList(Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListRequest request)
        {
            return base.Channel.AddListItemsToSharedList(request);
        }
        
        /// <summary>
        /// Adds list items such as negative keywords to the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx">AddListItemsToSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743721(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListResponse> AddListItemsToSharedListAsync(Microsoft.BingAds.CampaignManagement.AddListItemsToSharedListRequest request)
        {
            return base.Channel.AddListItemsToSharedListAsync(request);
        }
        
        /// <summary>
        /// Updates shared entities such as negative keyword lists within the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully updated.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesResponse UpdateSharedEntities(Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesRequest request)
        {
            return base.Channel.UpdateSharedEntities(request);
        }
        
        /// <summary>
        /// Updates shared entities such as negative keyword lists within the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx">UpdateSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743732(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully updated.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesResponse> UpdateSharedEntitiesAsync(Microsoft.BingAds.CampaignManagement.UpdateSharedEntitiesRequest request)
        {
            return base.Channel.UpdateSharedEntitiesAsync(request);
        }
        
        /// <summary>
        /// Deletes list items such as negative keywords from the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListResponse DeleteListItemsFromSharedList(Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListRequest request)
        {
            return base.Channel.DeleteListItemsFromSharedList(request);
        }
        
        /// <summary>
        /// Deletes list items such as negative keywords from the corresponding list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx">DeleteListItemsFromSharedList Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743723(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListResponse> DeleteListItemsFromSharedListAsync(Microsoft.BingAds.CampaignManagement.DeleteListItemsFromSharedListRequest request)
        {
            return base.Channel.DeleteListItemsFromSharedListAsync(request);
        }
        
        /// <summary>
        /// Sets the association between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully added.</returns>
        public Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsResponse SetSharedEntityAssociations(Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsRequest request)
        {
            return base.Channel.SetSharedEntityAssociations(request);
        }
        
        /// <summary>
        /// Sets the association between a campaign and a shared entity such as a negative keyword list.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx">SetSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743780(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully added.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsResponse> SetSharedEntityAssociationsAsync(Microsoft.BingAds.CampaignManagement.SetSharedEntityAssociationsRequest request)
        {
            return base.Channel.SetSharedEntityAssociationsAsync(request);
        }
        
        /// <summary>
        /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsResponse DeleteSharedEntityAssociations(Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsRequest request)
        {
            return base.Channel.DeleteSharedEntityAssociations(request);
        }
        
        /// <summary>
        /// Removes the association between a shared entity such as a negative keyword list and an entity such as a campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx">DeleteSharedEntityAssociations Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743727(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any associations that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsResponse> DeleteSharedEntityAssociationsAsync(Microsoft.BingAds.CampaignManagement.DeleteSharedEntityAssociationsRequest request)
        {
            return base.Channel.DeleteSharedEntityAssociationsAsync(request);
        }
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsResponse GetSharedEntityAssociationsBySharedEntityIds(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsRequest request)
        {
            return base.Channel.GetSharedEntityAssociationsBySharedEntityIds(request);
        }
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by shared entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx">GetSharedEntityAssociationsBySharedEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743773(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsResponse> GetSharedEntityAssociationsBySharedEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsBySharedEntityIdsRequest request)
        {
            return base.Channel.GetSharedEntityAssociationsBySharedEntityIdsAsync(request);
        }
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsResponse GetSharedEntityAssociationsByEntityIds(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsRequest request)
        {
            return base.Channel.GetSharedEntityAssociationsByEntityIds(request);
        }
        
        /// <summary>
        /// Gets associations between a campaign and a shared entity such as a negative keyword list. You can request associations by associated entity identifiers.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx">GetSharedEntityAssociationsByEntityIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743771(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsResponse> GetSharedEntityAssociationsByEntityIdsAsync(Microsoft.BingAds.CampaignManagement.GetSharedEntityAssociationsByEntityIdsRequest request)
        {
            return base.Channel.GetSharedEntityAssociationsByEntityIdsAsync(request);
        }
        
        /// <summary>
        /// Deletes shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesResponse DeleteSharedEntities(Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesRequest request)
        {
            return base.Channel.DeleteSharedEntities(request);
        }
        
        /// <summary>
        /// Deletes shared entities such as negative keyword lists from the account's library.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx">DeleteSharedEntities Service Operation</see> http://msdn.microsoft.com/en-us/library/dn743726(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any shared entities that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesResponse> DeleteSharedEntitiesAsync(Microsoft.BingAds.CampaignManagement.DeleteSharedEntitiesRequest request)
        {
            return base.Channel.DeleteSharedEntitiesAsync(request);
        }
        
        public Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdResponse GetCampaignSizesByAccountId(Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdRequest request)
        {
            return base.Channel.GetCampaignSizesByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdResponse> GetCampaignSizesByAccountIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignSizesByAccountIdRequest request)
        {
            return base.Channel.GetCampaignSizesByAccountIdAsync(request);
        }
        
        /// <summary>
        /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsResponse AddCampaignCriterions(Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsRequest request)
        {
            return base.Channel.AddCampaignCriterions(request);
        }
        
        /// <summary>
        /// Adds one or more campaign criterions that help determine whether ads in each campaign get served.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx">AddCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913127(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsResponse> AddCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.AddCampaignCriterionsRequest request)
        {
            return base.Channel.AddCampaignCriterionsAsync(request);
        }
        
        /// <summary>
        /// Updates one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.</returns>
        public Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsResponse UpdateCampaignCriterions(Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsRequest request)
        {
            return base.Channel.UpdateCampaignCriterions(request);
        }
        
        /// <summary>
        /// Updates one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx">UpdateCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913121(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchErrorCollection objects that contain details for any conditions that were not successfully updated for the criterion.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsResponse> UpdateCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.UpdateCampaignCriterionsRequest request)
        {
            return base.Channel.UpdateCampaignCriterionsAsync(request);
        }
        
        /// <summary>
        /// Deletes one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        public Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsResponse DeleteCampaignCriterions(Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsRequest request)
        {
            return base.Channel.DeleteCampaignCriterions(request);
        }
        
        /// <summary>
        /// Deletes one or more campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx">DeleteCampaignCriterions Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913125(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>An array of BatchError objects that contain details for any list items that were not successfully deleted.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsResponse> DeleteCampaignCriterionsAsync(Microsoft.BingAds.CampaignManagement.DeleteCampaignCriterionsRequest request)
        {
            return base.Channel.DeleteCampaignCriterionsAsync(request);
        }
        
        /// <summary>
        /// Gets the specified types of criterions from the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.</returns>
        public Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdResponse GetCampaignCriterionsByCampaignId(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdRequest request)
        {
            return base.Channel.GetCampaignCriterionsByCampaignId(request);
        }
        
        /// <summary>
        /// Gets the specified types of criterions from the specified campaign.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx">GetCampaignCriterionsByCampaignId Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913136(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The list of criterions that you requested. If the campaign does not contain the specified types of criterion, the list is empty.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdResponse> GetCampaignCriterionsByCampaignIdAsync(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByCampaignIdRequest request)
        {
            return base.Channel.GetCampaignCriterionsByCampaignIdAsync(request);
        }
        
        /// <summary>
        /// Gets the specified campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsResponse GetCampaignCriterionsByIds(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsRequest request)
        {
            return base.Channel.GetCampaignCriterionsByIds(request);
        }
        
        /// <summary>
        /// Gets the specified campaign criterions.
        /// </summary>
        /// <remarks>
        /// See <see href="http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx">GetCampaignCriterionsByIds Service Operation</see> http://msdn.microsoft.com/en-us/library/dn913135(v=msads.90).aspx for details.
        /// </remarks>
        /// <exception cref="AdApiFaultDetail"></exception>
        /// <exception cref="ApiFaultDetail"></exception>
        /// <param name="request">The request object for this service operation.</param>
        /// <returns>The response object for this service operation.</returns>
        public System.Threading.Tasks.Task<Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsResponse> GetCampaignCriterionsByIdsAsync(Microsoft.BingAds.CampaignManagement.GetCampaignCriterionsByIdsRequest request)
        {
            return base.Channel.GetCampaignCriterionsByIdsAsync(request);
        }
    }
}
